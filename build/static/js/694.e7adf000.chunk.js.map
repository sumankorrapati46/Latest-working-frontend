{"version":3,"file":"static/js/694.e7adf000.chunk.js","mappings":"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","sources":["components/ActionDropdown.jsx","components/DataTable.jsx","components/ViewEditEmployeeDetails.jsx","components/FarmerForm.jsx","components/ViewFarmerRegistrationDetails.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect, useMemo } from 'react';\nimport { createPortal } from 'react-dom';\n\nconst ActionDropdown = ({ \n  item, \n  onEdit, \n  onDelete, \n  onView, \n  onKycUpdate,\n  showDelete = false, \n  customActions = [] \n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const dropdownRef = useRef(null);\n  const toggleRef = useRef(null);\n  const [menuPos, setMenuPos] = useState({ top: 0, left: 0 });\n\n  // Close dropdown when clicking outside and compute portal position\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      const portal = document.getElementById('action-dropdown-portal-menu');\n      if (\n        toggleRef.current &&\n        !toggleRef.current.contains(event.target) &&\n        (!portal || !portal.contains(event.target))\n      ) {\n        setIsOpen(false);\n      }\n    };\n    const updatePos = () => {\n      if (!toggleRef.current) return;\n      const rect = toggleRef.current.getBoundingClientRect();\n      const width = 220;\n      const top = rect.bottom + 10 + window.scrollY;\n      const left = Math.min(\n        rect.right - width + window.scrollX,\n        window.innerWidth - width - 8\n      );\n      setMenuPos({ top, left });\n    };\n    if (isOpen) {\n      updatePos();\n      document.addEventListener('mousedown', handleClickOutside);\n      window.addEventListener('scroll', updatePos, true);\n      window.addEventListener('resize', updatePos);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n      window.removeEventListener('scroll', updatePos, true);\n      window.removeEventListener('resize', updatePos);\n    };\n  }, [isOpen]);\n\n  // Build actions array based on available props\n  const actions = useMemo(() => {\n    const actionList = [];\n\n    // Add view action if available\n    if (onView) {\n      actionList.push({\n        label: 'View',\n        icon: '👁️',\n        className: 'action-view',\n        onClick: () => onView(item)\n      });\n    }\n\n    // Add edit action if available\n    if (onEdit) {\n      actionList.push({\n        label: 'Edit',\n        icon: '✏️',\n        className: 'action-edit',\n        onClick: () => onEdit(item)\n      });\n    }\n\n    // Add delete action if available and showDelete is true\n    if (onDelete && showDelete) {\n      actionList.push({\n        label: 'Delete',\n        icon: '🗑️',\n        className: 'action-delete',\n        onClick: () => onDelete(item)\n      });\n    }\n\n    // Add KYC Update action last, to match requested order\n    if (onKycUpdate) {\n      actionList.push({\n        label: 'KYC Update',\n        icon: '📄',\n        className: 'action-kyc-update',\n        onClick: () => onKycUpdate(item)\n      });\n    }\n\n    // Add custom actions (this is the primary way actions are currently used)\n    if (customActions && Array.isArray(customActions)) {\n      customActions.forEach(action => {\n        actionList.push({\n          ...action,\n          onClick: () => action.onClick(item)\n        });\n      });\n    }\n\n    try {\n      console.log('ActionDropdown: built actions for item', {\n        hasView: !!onView,\n        hasEdit: !!onEdit,\n        hasDelete: !!onDelete && showDelete,\n        hasKyc: !!onKycUpdate,\n        customCount: Array.isArray(customActions) ? customActions.length : 0,\n        total: actionList.length\n      });\n    } catch {}\n    return actionList;\n  }, [onEdit, onDelete, onView, showDelete, customActions, item]);\n\n  const handleActionClick = (action) => {\n    if (action.onClick) {\n      action.onClick();\n    }\n    setIsOpen(false);\n  };\n\n  // Don't render if no actions available\n  if (actions.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"action-dropdown-component\" ref={dropdownRef}>\n      <button\n        className=\"action-dropdown-toggle\"\n        type=\"button\"\n        ref={toggleRef}\n        onClick={(e) => {\n          e.stopPropagation();\n          const next = !isOpen;\n          console.log('ActionDropdown: toggle clicked, next open =', next);\n          setIsOpen(next);\n        }}\n        aria-label=\"Actions\"\n      >\n        ⋯\n      </button>\n\n      {isOpen && createPortal(\n        <div\n          id=\"action-dropdown-portal-menu\"\n          className=\"action-dropdown-portal-menu open\"\n          style={{ position: 'absolute', top: menuPos.top, left: menuPos.left }}\n        >\n          {actions.map((action, index) => {\n            if (action.showCondition && !action.showCondition(item)) {\n              return null;\n            }\n            return (\n              <button\n                key={index}\n                className={`action-dropdown-item ${action.className || ''}`}\n                onClick={() => handleActionClick(action)}\n              >\n                {action.icon && <span className=\"action-dropdown-icon\">{action.icon}</span>}\n                {action.label}\n              </button>\n            );\n          })}\n        </div>,\n        document.body\n      )}\n    </div>\n  );\n};\n\nexport default ActionDropdown; ","import React, { useMemo, useCallback } from 'react';\nimport ActionDropdown from './ActionDropdown';\n\nconst DataTable = React.memo(({ \n  data, \n  columns, \n  onEdit, \n  onDelete, \n  onView, \n  onKycUpdate,\n  showDelete = false, \n  customActions = [],\n  loading = false,\n  emptyMessage = \"No data available\"\n}) => {\n  const getStatusClass = useCallback((status) => {\n    switch (status?.toLowerCase()) {\n      case 'approved':\n        return 'status-approved';\n      case 'pending':\n        return 'status-pending';\n      case 'refer_back':\n        return 'status-refer-back';\n      case 'rejected':\n        return 'status-rejected';\n      case 'assigned':\n        return 'status-assigned';\n      case 'unassigned':\n        return 'status-unassigned';\n      case 'active':\n        return 'status-approved';\n      case 'inactive':\n        return 'status-rejected';\n      default:\n        return 'status-default';\n    }\n  }, []);\n\n  // Memoized safe render function with enhanced field mapping\n  const safeRender = useCallback((value, columnKey, row) => {\n    try {\n      // If value is an object, try to extract meaningful data\n      if (value && typeof value === 'object') {\n        // Handle common object types\n        if (value.name) return value.name;\n        if (value.title) return value.title;\n        if (value.label) return value.label;\n        if (value.id) return value.id;\n        \n        // For arrays, show count\n        if (Array.isArray(value)) {\n          return `${value.length} item${value.length !== 1 ? 's' : ''}`;\n        }\n        \n        // For other objects, show a summary\n        const keys = Object.keys(value);\n        if (keys.length <= 3) {\n          return keys.map(key => value[key]).join(', ');\n        }\n        \n        return 'Object';\n      }\n      \n      // If value is null or undefined, try alternative field names\n      if (value === null || value === undefined) {\n        // Try common alternative field names for the same data\n        const alternativeFields = {\n          'name': ['fullName', 'userName', 'firstName', 'lastName'],\n          'email': ['emailAddress', 'userEmail'],\n          'phoneNumber': ['phone', 'mobile', 'contactNumber', 'mobileNumber'],\n          'role': ['userRole', 'type', 'userType'],\n          'status': ['registrationStatus', 'approvalStatus', 'kycStatus']\n        };\n        \n        if (alternativeFields[columnKey] && row) {\n          for (const altField of alternativeFields[columnKey]) {\n            if (row[altField] !== undefined && row[altField] !== null) {\n              return String(row[altField]);\n            }\n          }\n        }\n        \n        return 'N/A';\n      }\n      \n      // If value is a string, number, or boolean, return it as string\n      return String(value);\n    } catch (error) {\n      console.error(`DataTable: Error rendering value for column ${columnKey}:`, error);\n      return 'Error';\n    }\n  }, []);\n\n  // Memoized table data with debugging\n  const tableData = useMemo(() => {\n    if (!data || !Array.isArray(data)) return [];\n    \n    // Debug: Log the first few records to understand the data structure\n    if (data.length > 0) {\n      console.log('🔍 DataTable: Sample data structure:', {\n        firstRecord: data[0],\n        totalRecords: data.length,\n        availableFields: Object.keys(data[0] || {})\n      });\n    }\n    \n    return data;\n  }, [data]);\n\n  // Memoized columns\n  const tableColumns = useMemo(() => {\n    if (!columns || !Array.isArray(columns)) return [];\n    return columns;\n  }, [columns]);\n\n  if (loading) {\n    return (\n      <div className=\"data-table-loading\">\n        <div className=\"loading-spinner\">Loading...</div>\n      </div>\n    );\n  }\n\n  if (!tableData.length) {\n    return (\n      <div className=\"data-table-empty\">\n        <div className=\"empty-icon\">📋</div>\n        <p>{emptyMessage}</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"data-table-container\">\n      <table className=\"data-table\">\n        <colgroup>\n          {tableColumns.map((column) => (\n            <col key={column.key} className={column.className || ''} />\n          ))}\n          {(onEdit || onDelete || onView || customActions.length > 0) && (\n            <col className=\"col-actions\" />\n          )}\n        </colgroup>\n        <thead>\n          <tr>\n            {tableColumns.map((column) => (\n              <th key={column.key} className={`data-table-header ${column.className || ''}`}>\n                {column.label}\n              </th>\n            ))}\n            {(onEdit || onDelete || onView || customActions.length > 0) && (\n              <th className=\"data-table-header actions-header col-actions\">Actions</th>\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {tableData.map((row, index) => (\n            <tr key={row.id || index} className=\"data-table-row\">\n              {tableColumns.map((column) => {\n                const value = row[column.key];\n                const cellContent = column.render \n                  ? column.render(value, row) \n                  : safeRender(value, column.key, row);\n                \n                const normalizedStatus = typeof value === 'string' ? value.toLowerCase() : '';\n                return (\n                  <td key={column.key} className={`data-table-cell ${column.className || ''}`}>\n                    {column.type === 'status' ? (\n                      <span className={`status-badge ${getStatusClass(value)} ${normalizedStatus}`}>\n                        {cellContent}\n                      </span>\n                    ) : (\n                      cellContent\n                    )}\n                  </td>\n                );\n              })}\n              {(onEdit || onDelete || onView || customActions.length > 0) && (\n                <td className=\"data-table-cell actions-cell col-actions\">\n                  <ActionDropdown\n                    item={row}\n                    onEdit={onEdit}\n                    onDelete={onDelete}\n                    onView={onView}\n                    onKycUpdate={onKycUpdate}\n                    showDelete={showDelete}\n                    customActions={customActions || []}\n                  />\n                </td>\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n});\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable; ","import React, { useState } from 'react';\r\nimport { useForm, FormProvider } from 'react-hook-form';\r\nimport '../styles/ViewEditEmployeeDetails.css';\r\n\r\nconst ViewEditEmployeeDetails = ({ employeeData, onClose, onUpdate, isInDashboard = false, onEmployeeSelect }) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const totalSteps = 8;\r\n  const stepTitles = [\r\n    'Personal Details',\r\n    'Contact Information',\r\n    'Relation Details',\r\n    'Address Information',\r\n    'Professional Details',\r\n    'Bank Details',\r\n    'Documents',\r\n    'Review & Submit'\r\n  ];\r\n\r\n  // Helper function to safely render values\r\n  const safeRender = (value) => {\r\n    if (value === null || value === undefined) {\r\n      return 'Not provided';\r\n    }\r\n    if (typeof value === 'object') {\r\n      console.warn('ViewEditEmployeeDetails: Object found in value:', value);\r\n      return 'Object (see console)';\r\n    }\r\n    return String(value);\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return 'Not provided';\r\n    return new Date(dateString).toLocaleDateString();\r\n  };\r\n\r\n  const methods = useForm({\r\n    defaultValues: {\r\n      // Personal Information\r\n      firstName: employeeData?.firstName || '',\r\n      lastName: employeeData?.lastName || '',\r\n      email: employeeData?.email || '',\r\n      phone: employeeData?.phone || '',\r\n      dateOfBirth: employeeData?.dateOfBirth || '',\r\n      gender: employeeData?.gender || '',\r\n      address: employeeData?.address || '',\r\n      city: employeeData?.city || '',\r\n      state: employeeData?.state || '',\r\n      pincode: employeeData?.pincode || '',\r\n      \r\n      // Employment Information\r\n      employeeId: employeeData?.employeeId || '',\r\n      department: employeeData?.department || '',\r\n      designation: employeeData?.designation || '',\r\n      joiningDate: employeeData?.joiningDate || '',\r\n      salary: employeeData?.salary || '',\r\n      supervisor: employeeData?.supervisor || '',\r\n      \r\n      // Educational Information\r\n      highestQualification: employeeData?.highestQualification || '',\r\n      institution: employeeData?.institution || '',\r\n      graduationYear: employeeData?.graduationYear || '',\r\n      specialization: employeeData?.specialization || '',\r\n      \r\n      // Emergency Contact\r\n      emergencyName: employeeData?.emergencyName || '',\r\n      emergencyPhone: employeeData?.emergencyPhone || '',\r\n      emergencyRelation: employeeData?.emergencyRelation || '',\r\n      \r\n      // Documents\r\n      photo: employeeData?.photo || null,\r\n      idProof: employeeData?.idProof || null,\r\n      addressProof: employeeData?.addressProof || null,\r\n      educationalCertificates: employeeData?.educationalCertificates || null,\r\n      \r\n      // Additional Information\r\n      skills: employeeData?.skills || '',\r\n      languages: employeeData?.languages || '',\r\n      certifications: employeeData?.certifications || '',\r\n      workExperience: employeeData?.workExperience || '',\r\n      references: employeeData?.references || ''\r\n    }\r\n  });\r\n\r\n  const { register, handleSubmit, watch, setValue, trigger, clearErrors, formState: { errors } } = methods;\r\n\r\n  const steps = [\r\n    { title: stepTitles[0], fields: ['firstName', 'lastName', 'dateOfBirth', 'gender'] },\r\n    { title: stepTitles[1], fields: ['email', 'phone'] },\r\n    { title: stepTitles[2], fields: ['relationType', 'relationName', 'altNumber', 'altNumberType'] },\r\n    { title: stepTitles[3], fields: ['address', 'city', 'state', 'pincode'] },\r\n    { title: stepTitles[4], fields: ['employeeId', 'department', 'designation', 'joiningDate', 'salary', 'supervisor'] },\r\n    { title: stepTitles[5], fields: ['bankName', 'accountNumber', 'branchName', 'ifscCode', 'passbookFile'] },\r\n    { title: stepTitles[6], fields: ['photo', 'idProof', 'addressProof', 'educationalCertificates'] },\r\n    { title: stepTitles[7], fields: [] }\r\n  ];\r\n\r\n  const handleNext = async () => {\r\n    const currentFields = steps[currentStep].fields;\r\n    const isValid = await trigger(currentFields);\r\n    \r\n    if (isValid && currentStep < steps.length - 1) {\r\n      setCurrentStep(currentStep + 1);\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (currentStep > 0) {\r\n      setCurrentStep(currentStep - 1);\r\n    }\r\n  };\r\n\r\n  const handleSave = async (data) => {\r\n    if (onUpdate) {\r\n      await onUpdate(data);\r\n    }\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsEditing(false);\r\n    setCurrentStep(0);\r\n    methods.reset();\r\n  };\r\n\r\n  const renderPersonalInfo = () => (\r\n    <div className=\"form-section\">\r\n      <h3>Personal Details</h3>\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group\">\r\n          <label>First Name *</label>\r\n          <input\r\n            type=\"text\"\r\n            {...register('firstName', { required: 'First name is required' })}\r\n            disabled={!isEditing}\r\n          />\r\n          {errors.firstName && <span className=\"error\">{errors.firstName.message}</span>}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Last Name *</label>\r\n          <input\r\n            type=\"text\"\r\n            {...register('lastName', { required: 'Last name is required' })}\r\n            disabled={!isEditing}\r\n          />\r\n          {errors.lastName && <span className=\"error\">{errors.lastName.message}</span>}\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"form-row\">\r\n        <div className=\"form-group\">\r\n          <label>Email *</label>\r\n          <input\r\n            type=\"email\"\r\n            {...register('email', { \r\n              required: 'Email is required',\r\n              pattern: {\r\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                message: 'Invalid email address'\r\n              }\r\n            })}\r\n            disabled={!isEditing}\r\n          />\r\n          {errors.email && <span className=\"error\">{errors.email.message}</span>}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Phone *</label>\r\n          <input\r\n            type=\"tel\"\r\n            {...register('phone', { \r\n              required: 'Phone is required',\r\n              pattern: {\r\n                value: /^[0-9]{10}$/,\r\n                message: 'Phone number must be 10 digits'\r\n              }\r\n            })}\r\n            disabled={!isEditing}\r\n          />\r\n          {errors.phone && <span className=\"error\">{errors.phone.message}</span>}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group\">\r\n          <label>Date of Birth *</label>\r\n          <input\r\n            type=\"date\"\r\n            {...register('dateOfBirth', { required: 'Date of birth is required' })}\r\n            disabled={!isEditing}\r\n          />\r\n          {errors.dateOfBirth && <span className=\"error\">{errors.dateOfBirth.message}</span>}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Gender *</label>\r\n          <select {...register('gender', { required: 'Gender is required' })} disabled={!isEditing}>\r\n            <option value=\"\">Select Gender</option>\r\n            <option value=\"male\">Male</option>\r\n            <option value=\"female\">Female</option>\r\n            <option value=\"other\">Other</option>\r\n          </select>\r\n          {errors.gender && <span className=\"error\">{errors.gender.message}</span>}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Address *</label>\r\n        <textarea\r\n          {...register('address', { required: 'Address is required' })}\r\n          disabled={!isEditing}\r\n        />\r\n        {errors.address && <span className=\"error\">{errors.address.message}</span>}\r\n      </div>\r\n\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group\">\r\n          <label>City *</label>\r\n          <input\r\n            type=\"text\"\r\n            {...register('city', { required: 'City is required' })}\r\n            disabled={!isEditing}\r\n          />\r\n          {errors.city && <span className=\"error\">{errors.city.message}</span>}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>State *</label>\r\n          <input\r\n            type=\"text\"\r\n            {...register('state', { required: 'State is required' })}\r\n            disabled={!isEditing}\r\n          />\r\n          {errors.state && <span className=\"error\">{errors.state.message}</span>}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Pincode *</label>\r\n          <input\r\n            type=\"text\"\r\n            {...register('pincode', { \r\n              required: 'Pincode is required',\r\n              pattern: {\r\n                value: /^[0-9]{6}$/,\r\n                message: 'Pincode must be 6 digits'\r\n              }\r\n            })}\r\n            disabled={!isEditing}\r\n          />\r\n          {errors.pincode && <span className=\"error\">{errors.pincode.message}</span>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderContactInfo = () => (\r\n    <div className=\"form-section\">\r\n      <h3>Contact Information</h3>\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group\"><label>Email</label><span>{safeRender(employeeData.email)}</span></div>\r\n        <div className=\"form-group\"><label>Phone</label><span>{safeRender(employeeData.phone)}</span></div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderRelationDetails = () => (\r\n    <div className=\"form-section\">\r\n      <h3>Relation Details</h3>\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group\"><label>Relation Type</label><span>{safeRender(employeeData.relationType)}</span></div>\r\n        <div className=\"form-group\"><label>Relation Name</label><span>{safeRender(employeeData.relationName)}</span></div>\r\n      </div>\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group\"><label>Alternative Number</label><span>{safeRender(employeeData.altNumber)}</span></div>\r\n        <div className=\"form-group\"><label>Alternative Number Type</label><span>{safeRender(employeeData.altNumberType)}</span></div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderAddressInfo = () => (\r\n    <div className=\"form-section\">\r\n      <h3>Address Information</h3>\r\n      <div className=\"form-row\"><div className=\"form-group\"><label>Address</label><span>{safeRender(employeeData.address)}</span></div></div>\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group\"><label>City</label><span>{safeRender(employeeData.city)}</span></div>\r\n        <div className=\"form-group\"><label>State</label><span>{safeRender(employeeData.state)}</span></div>\r\n        <div className=\"form-group\"><label>Pincode</label><span>{safeRender(employeeData.pincode)}</span></div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderEmploymentInfo = () => (\r\n    <div className=\"form-section\">\r\n      <h3>Professional Details</h3>\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group\">\r\n          <label>Employee ID *</label>\r\n          <input\r\n            type=\"text\"\r\n            {...register('employeeId', { required: 'Employee ID is required' })}\r\n            disabled={!isEditing}\r\n          />\r\n          {errors.employeeId && <span className=\"error\">{errors.employeeId.message}</span>}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Department *</label>\r\n          <select {...register('department', { required: 'Department is required' })} disabled={!isEditing}>\r\n            <option value=\"\">Select Department</option>\r\n            <option value=\"IT\">IT</option>\r\n            <option value=\"HR\">HR</option>\r\n            <option value=\"Finance\">Finance</option>\r\n            <option value=\"Marketing\">Marketing</option>\r\n            <option value=\"Operations\">Operations</option>\r\n          </select>\r\n          {errors.department && <span className=\"error\">{errors.department.message}</span>}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group\">\r\n          <label>Designation *</label>\r\n          <input\r\n            type=\"text\"\r\n            {...register('designation', { required: 'Designation is required' })}\r\n            disabled={!isEditing}\r\n          />\r\n          {errors.designation && <span className=\"error\">{errors.designation.message}</span>}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Joining Date *</label>\r\n          <input\r\n            type=\"date\"\r\n            {...register('joiningDate', { required: 'Joining date is required' })}\r\n            disabled={!isEditing}\r\n          />\r\n          {errors.joiningDate && <span className=\"error\">{errors.joiningDate.message}</span>}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group\">\r\n          <label>Salary *</label>\r\n          <input\r\n            type=\"number\"\r\n            {...register('salary', { required: 'Salary is required' })}\r\n            disabled={!isEditing}\r\n          />\r\n          {errors.salary && <span className=\"error\">{errors.salary.message}</span>}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Supervisor</label>\r\n          <input\r\n            type=\"text\"\r\n            {...register('supervisor')}\r\n            disabled={!isEditing}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderBankDetails = () => (\r\n    <div className=\"form-section\">\r\n      <h3>Bank Details</h3>\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group\"><label>Bank Name</label><span>{safeRender(employeeData.bankName)}</span></div>\r\n        <div className=\"form-group\"><label>Account Number</label><span>{safeRender(employeeData.accountNumber)}</span></div>\r\n      </div>\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group\"><label>Branch Name</label><span>{safeRender(employeeData.branchName)}</span></div>\r\n        <div className=\"form-group\"><label>IFSC Code</label><span>{safeRender(employeeData.ifscCode)}</span></div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderEducationalInfo = () => (\r\n    <div className=\"form-section\">\r\n      <h3>Educational Information</h3>\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group\">\r\n          <label>Highest Qualification *</label>\r\n          <select {...register('highestQualification', { required: 'Highest qualification is required' })} disabled={!isEditing}>\r\n            <option value=\"\">Select Qualification</option>\r\n            <option value=\"High School\">High School</option>\r\n            <option value=\"Diploma\">Diploma</option>\r\n            <option value=\"Bachelor's Degree\">Bachelor's Degree</option>\r\n            <option value=\"Master's Degree\">Master's Degree</option>\r\n            <option value=\"PhD\">PhD</option>\r\n          </select>\r\n          {errors.highestQualification && <span className=\"error\">{errors.highestQualification.message}</span>}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Institution *</label>\r\n          <input\r\n            type=\"text\"\r\n            {...register('institution', { required: 'Institution is required' })}\r\n            disabled={!isEditing}\r\n          />\r\n          {errors.institution && <span className=\"error\">{errors.institution.message}</span>}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group\">\r\n          <label>Graduation Year *</label>\r\n          <input\r\n            type=\"number\"\r\n            {...register('graduationYear', { \r\n              required: 'Graduation year is required',\r\n              min: { value: 1950, message: 'Invalid year' },\r\n              max: { value: new Date().getFullYear(), message: 'Year cannot be in future' }\r\n            })}\r\n            disabled={!isEditing}\r\n          />\r\n          {errors.graduationYear && <span className=\"error\">{errors.graduationYear.message}</span>}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Specialization</label>\r\n          <input\r\n            type=\"text\"\r\n            {...register('specialization')}\r\n            disabled={!isEditing}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderEmergencyContact = () => (\r\n    <div className=\"form-section\">\r\n      <h3>Emergency Contact</h3>\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group\">\r\n          <label>Emergency Contact Name *</label>\r\n          <input\r\n            type=\"text\"\r\n            {...register('emergencyName', { required: 'Emergency contact name is required' })}\r\n            disabled={!isEditing}\r\n          />\r\n          {errors.emergencyName && <span className=\"error\">{errors.emergencyName.message}</span>}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Emergency Contact Phone *</label>\r\n          <input\r\n            type=\"tel\"\r\n            {...register('emergencyPhone', { \r\n              required: 'Emergency contact phone is required',\r\n              pattern: {\r\n                value: /^[0-9]{10}$/,\r\n                message: 'Phone number must be 10 digits'\r\n              }\r\n            })}\r\n            disabled={!isEditing}\r\n          />\r\n          {errors.emergencyPhone && <span className=\"error\">{errors.emergencyPhone.message}</span>}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Relationship *</label>\r\n        <select {...register('emergencyRelation', { required: 'Relationship is required' })} disabled={!isEditing}>\r\n          <option value=\"\">Select Relationship</option>\r\n          <option value=\"Spouse\">Spouse</option>\r\n          <option value=\"Parent\">Parent</option>\r\n          <option value=\"Sibling\">Sibling</option>\r\n          <option value=\"Friend\">Friend</option>\r\n          <option value=\"Other\">Other</option>\r\n        </select>\r\n        {errors.emergencyRelation && <span className=\"error\">{errors.emergencyRelation.message}</span>}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderDocuments = () => (\r\n    <div className=\"form-section\">\r\n      <h3>Documents</h3>\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group\">\r\n          <label>Photo (Optional)</label>\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={(e) => {\r\n              if (e.target.files[0]) {\r\n                setValue('photo', e.target.files[0]);\r\n                clearErrors('photo');\r\n              }\r\n            }}\r\n            disabled={!isEditing}\r\n          />\r\n          {watch('photo') && (\r\n            <div className=\"file-preview\">\r\n              <img src={URL.createObjectURL(watch('photo'))} className=\"file-preview\" alt=\"\" />\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>ID Proof (Optional)</label>\r\n          <input\r\n            type=\"file\"\r\n            accept=\".pdf,.doc,.docx,image/*\"\r\n            onChange={(e) => {\r\n              if (e.target.files[0]) {\r\n                setValue('idProof', e.target.files[0]);\r\n                clearErrors('idProof');\r\n              }\r\n            }}\r\n            disabled={!isEditing}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group\">\r\n          <label>Address Proof (Optional)</label>\r\n          <input\r\n            type=\"file\"\r\n            accept=\".pdf,.doc,.docx,image/*\"\r\n            onChange={(e) => {\r\n              if (e.target.files[0]) {\r\n                setValue('addressProof', e.target.files[0]);\r\n                clearErrors('addressProof');\r\n              }\r\n            }}\r\n            disabled={!isEditing}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Educational Certificates (Optional)</label>\r\n          <input\r\n            type=\"file\"\r\n            accept=\".pdf,.doc,.docx,image/*\"\r\n            multiple\r\n            onChange={(e) => {\r\n              if (e.target.files.length > 0) {\r\n                setValue('educationalCertificates', Array.from(e.target.files));\r\n                clearErrors('educationalCertificates');\r\n              }\r\n            }}\r\n            disabled={!isEditing}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderAdditionalInfo = () => (\r\n    <div className=\"form-section\">\r\n      <h3>Additional Information</h3>\r\n      <div className=\"form-group\">\r\n        <label>Skills</label>\r\n        <textarea\r\n          {...register('skills')}\r\n          placeholder=\"Enter your skills (comma separated)\"\r\n          disabled={!isEditing}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Languages Known</label>\r\n        <input\r\n          type=\"text\"\r\n          {...register('languages')}\r\n          placeholder=\"e.g., English, Hindi, Spanish\"\r\n          disabled={!isEditing}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Certifications</label>\r\n        <textarea\r\n          {...register('certifications')}\r\n          placeholder=\"Enter your certifications\"\r\n          disabled={!isEditing}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Work Experience</label>\r\n        <textarea\r\n          {...register('workExperience')}\r\n          placeholder=\"Describe your previous work experience\"\r\n          disabled={!isEditing}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>References</label>\r\n        <textarea\r\n          {...register('references')}\r\n          placeholder=\"Enter references with contact details\"\r\n          disabled={!isEditing}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderStepContent = () => {\r\n    switch (currentStep) {\r\n      case 0:\r\n        return renderPersonalInfo();\r\n      case 1:\r\n        return renderContactInfo();\r\n      case 2:\r\n        return renderRelationDetails();\r\n      case 3:\r\n        return renderAddressInfo();\r\n      case 4:\r\n        return renderEmploymentInfo();\r\n      case 5:\r\n        return renderBankDetails();\r\n      case 6:\r\n        return renderDocuments();\r\n      case 7:\r\n        return (<div className=\"form-section\"><h3>Review & Submit</h3><p>Review details across all steps.</p></div>);\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  // If in dashboard mode, render without modal overlay\r\n  if (isInDashboard) {\r\n    // Check if we're showing a single employee's details or a list of employees\r\n    const isShowingSingleEmployee = !Array.isArray(employeeData);\r\n    \r\n    if (isShowingSingleEmployee) {\r\n      // Multi-step view (8 steps)\r\n\r\n      return (\r\n        <div className=\"view-edit-employee-dashboard\">\r\n          <div className=\"dashboard-header\">\r\n            <div className=\"header-content\">\r\n              <div className=\"header-left\">\r\n                <h2 className=\"dashboard-title\">Employee Details</h2>\r\n                <p className=\"dashboard-subtitle\">Step {currentStep + 1} of {stepTitles.length}: {stepTitles[currentStep]} - {safeRender(employeeData.firstName)} {safeRender(employeeData.lastName)}</p>\r\n              </div>\r\n              <button\r\n                className=\"back-button\"\r\n                onClick={onClose}\r\n                type=\"button\"\r\n              >\r\n                ← Back to List\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"dashboard-content\">\r\n            <div className=\"employee-details-container\">\r\n              {/* Step Navigation */}\r\n              <div className=\"step-navigation\">\r\n                {stepTitles.map((title, index) => (\r\n                  <button\r\n                    key={index}\r\n                    className={`step-nav-btn ${currentStep === index ? 'active' : ''}`}\r\n                    onClick={() => setCurrentStep(index)}\r\n                  >\r\n                    <span className=\"step-number\">{index + 1}</span>\r\n                    <span className=\"step-title\">{title}</span>\r\n                  </button>\r\n                ))}\r\n              </div>\r\n\r\n              {/* Step Content */}\r\n              <div className=\"step-content\">\r\n                {currentStep === 0 && (\r\n                  <div className=\"detail-section\">\r\n                    <h3>Personal Information</h3>\r\n                    <div className=\"detail-grid\">\r\n                      <div className=\"detail-item\">\r\n                        <label>First Name:</label>\r\n                        <span>{safeRender(employeeData.firstName)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Last Name:</label>\r\n                        <span>{safeRender(employeeData.lastName)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Email:</label>\r\n                        <span>{safeRender(employeeData.email)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Phone:</label>\r\n                        <span>{safeRender(employeeData.phone)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Date of Birth:</label>\r\n                        <span>{formatDate(employeeData.dateOfBirth)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Gender:</label>\r\n                        <span>{safeRender(employeeData.gender)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Address:</label>\r\n                        <span>{safeRender(employeeData.address)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>City:</label>\r\n                        <span>{safeRender(employeeData.city)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>State:</label>\r\n                        <span>{safeRender(employeeData.state)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Pincode:</label>\r\n                        <span>{safeRender(employeeData.pincode)}</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {currentStep === 1 && (\r\n                  <div className=\"detail-section\">\r\n                    <h3>Employment Information</h3>\r\n                    <div className=\"detail-grid\">\r\n                      <div className=\"detail-item\">\r\n                        <label>Employee ID:</label>\r\n                        <span>{safeRender(employeeData.employeeId)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Department:</label>\r\n                        <span>{safeRender(employeeData.department)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Designation:</label>\r\n                        <span>{safeRender(employeeData.designation)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Joining Date:</label>\r\n                        <span>{formatDate(employeeData.joiningDate)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Salary:</label>\r\n                        <span>{safeRender(employeeData.salary)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Supervisor:</label>\r\n                        <span>{safeRender(employeeData.supervisor)}</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {currentStep === 2 && (\r\n                  <div className=\"detail-section\">\r\n                    <h3>Educational Information</h3>\r\n                    <div className=\"detail-grid\">\r\n                      <div className=\"detail-item\">\r\n                        <label>Highest Qualification:</label>\r\n                        <span>{safeRender(employeeData.highestQualification)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Institution:</label>\r\n                        <span>{safeRender(employeeData.institution)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Graduation Year:</label>\r\n                        <span>{safeRender(employeeData.graduationYear)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Specialization:</label>\r\n                        <span>{safeRender(employeeData.specialization)}</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {currentStep === 3 && (\r\n                  <div className=\"detail-section\">\r\n                    <h3>Emergency Contact</h3>\r\n                    <div className=\"detail-grid\">\r\n                      <div className=\"detail-item\">\r\n                        <label>Emergency Contact Name:</label>\r\n                        <span>{safeRender(employeeData.emergencyName)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Emergency Phone:</label>\r\n                        <span>{safeRender(employeeData.emergencyPhone)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Emergency Relation:</label>\r\n                        <span>{safeRender(employeeData.emergencyRelation)}</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {currentStep === 4 && (\r\n                  <div className=\"detail-section\">\r\n                    <h3>Additional Information</h3>\r\n                    <div className=\"detail-grid\">\r\n                      <div className=\"detail-item\">\r\n                        <label>Skills:</label>\r\n                        <span>{safeRender(employeeData.skills)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Languages:</label>\r\n                        <span>{safeRender(employeeData.languages)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Certifications:</label>\r\n                        <span>{safeRender(employeeData.certifications)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Work Experience:</label>\r\n                        <span>{safeRender(employeeData.workExperience)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>References:</label>\r\n                        <span>{safeRender(employeeData.references)}</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {/* Step Navigation Buttons */}\r\n              <div className=\"step-navigation-buttons\">\r\n                <button\r\n                  className=\"step-nav-btn prev\"\r\n                  onClick={handlePrevious}\r\n                  disabled={currentStep === 0}\r\n                >\r\n                  ← Previous\r\n                </button>\r\n                <button\r\n                  className=\"step-nav-btn next\"\r\n                  onClick={handleNext}\r\n                  disabled={currentStep === stepTitles.length - 1}\r\n                >\r\n                  Next →\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      // Show list of all employees\r\n      const employeeColumns = [\r\n        { key: 'firstName', label: 'First Name', sortable: true },\r\n        { key: 'lastName', label: 'Last Name', sortable: true },\r\n        { key: 'email', label: 'Email', sortable: true },\r\n        { key: 'phone', label: 'Phone', sortable: true },\r\n        { key: 'department', label: 'Department', sortable: true },\r\n        { key: 'designation', label: 'Designation', sortable: true },\r\n        { key: 'joiningDate', label: 'Joining Date', sortable: true }\r\n      ];\r\n\r\n      return (\r\n        <div className=\"view-edit-employee-dashboard\">\r\n          <div className=\"dashboard-header\">\r\n            <div className=\"header-content\">\r\n              <div className=\"header-left\">\r\n                <h2 className=\"dashboard-title\">All Employees</h2>\r\n                <p className=\"dashboard-subtitle\">View and manage all employee registrations</p>\r\n              </div>\r\n              <button\r\n                className=\"back-button\"\r\n                onClick={onClose}\r\n                type=\"button\"\r\n              >\r\n                ← Back\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"dashboard-content\">\r\n            <div className=\"employee-details-container\">\r\n              <div className=\"detail-section\">\r\n                <h3>Employee List</h3>\r\n                <p>Total Employees: {Array.isArray(employeeData) ? employeeData.length : 0}</p>\r\n                \r\n                {/* Display employees in a table format */}\r\n                <div className=\"employees-table-container\">\r\n                  {Array.isArray(employeeData) && employeeData.length > 0 ? (\r\n                    <div className=\"employees-table\">\r\n                      <div className=\"employee-details-table-header\">\r\n                        {employeeColumns.map(column => (\r\n                          <div key={column.key} className=\"table-cell header\">\r\n                            {column.label}\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                      <div className=\"table-body\">\r\n                        {employeeData.map((employee, index) => (\r\n                          <div \r\n                            key={index} \r\n                            className=\"employee-details-table-row clickable\"\r\n                            onClick={() => onEmployeeSelect && onEmployeeSelect(employee)}\r\n                          >\r\n                            <div className=\"table-cell\">{safeRender(employee.firstName)}</div>\r\n                            <div className=\"table-cell\">{safeRender(employee.lastName)}</div>\r\n                            <div className=\"table-cell\">{safeRender(employee.email)}</div>\r\n                            <div className=\"table-cell\">{safeRender(employee.phone)}</div>\r\n                            <div className=\"table-cell\">{safeRender(employee.department)}</div>\r\n                            <div className=\"table-cell\">{safeRender(employee.designation)}</div>\r\n                            <div className=\"table-cell\">{formatDate(employee.joiningDate)}</div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"no-data\">\r\n                      <p>No employees found. Add some employees using the \"Add Employee\" button.</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"view-edit-employee-details-modal\">\r\n      <div className=\"view-edit-employee-details-modal-content\">\r\n        <div className=\"view-edit-employee-details-modal-header\">\r\n          <h2>{isEditing ? 'Edit Employee Details' : 'Employee Details'}</h2>\r\n          <button className=\"view-edit-employee-details-close-btn\" onClick={onClose}>×</button>\r\n        </div>\r\n\r\n        <div className=\"view-edit-employee-details-modal-body\">\r\n          <div className=\"view-edit-employee-details-step-indicator\">\r\n            {steps.map((step, index) => (\r\n              <div\r\n                key={index}\r\n                className={`view-edit-employee-details-step ${index === currentStep ? 'active' : ''} ${index < currentStep ? 'completed' : ''}`}\r\n              >\r\n                <span className=\"view-edit-employee-details-step-number\">{index + 1}</span>\r\n                <span className=\"view-edit-employee-details-step-title\">{step.title}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <FormProvider {...methods}>\r\n            <form onSubmit={handleSubmit(handleSave)}>\r\n              {renderStepContent()}\r\n\r\n              <div className=\"view-edit-employee-details-form-actions\">\r\n                {isEditing ? (\r\n                  <>\r\n                    {currentStep > 0 && (\r\n                      <button type=\"button\" className=\"view-edit-employee-details-btn view-edit-employee-details-btn-secondary\" onClick={handlePrevious}>\r\n                        Previous\r\n                      </button>\r\n                    )}\r\n                    {currentStep < steps.length - 1 ? (\r\n                      <button type=\"button\" className=\"view-edit-employee-details-btn view-edit-employee-details-btn-primary\" onClick={handleNext}>\r\n                        Next\r\n                      </button>\r\n                    ) : (\r\n                      <button type=\"submit\" className=\"view-edit-employee-details-btn view-edit-employee-details-btn-success\">\r\n                        Save Changes\r\n                      </button>\r\n                    )}\r\n                    <button type=\"button\" className=\"view-edit-employee-details-btn view-edit-employee-details-btn-danger\" onClick={handleCancel}>\r\n                      Cancel\r\n                    </button>\r\n                  </>\r\n                ) : (\r\n                  <button type=\"button\" className=\"view-edit-employee-details-btn view-edit-employee-details-btn-primary\" onClick={() => setIsEditing(true)}>\r\n                    Edit Details\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </form>\r\n          </FormProvider>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewEditEmployeeDetails; ","import React, { useState } from 'react';\r\nimport FarmerRegistrationForm from './FarmerRegistrationForm';\r\nimport '../styles/Forms.css';\r\n\r\nconst FarmerForm = ({ onClose, onSubmit, editData = null, isInDashboard = false }) => {\r\n  const [showForm, setShowForm] = useState(true);\r\n\r\n  const handleClose = () => {\r\n    setShowForm(false);\r\n    onClose && onClose();\r\n  };\r\n\r\n  const handleSubmit = async (data) => {\r\n    try {\r\n      await onSubmit(data);\r\n      handleClose();\r\n    } catch (error) {\r\n      console.error('Error submitting farmer data:', error);\r\n    }\r\n  };\r\n\r\n  if (!showForm) return null;\r\n\r\n  // If in dashboard mode, render without modal overlay\r\n  if (isInDashboard) {\r\n    return (\r\n      <FarmerRegistrationForm\r\n        isInDashboard={true}\r\n        editData={editData}\r\n        onClose={handleClose}\r\n        onSubmit={handleSubmit}\r\n      />\r\n    );\r\n  }\r\n\r\n  // Modal overlay for standalone use\r\n  return (\r\n    <div className=\"farmer-form-overlay\">\r\n      <div className=\"farmer-form-content farmer-modal\">\r\n        <div className=\"farmer-form-header\">\r\n          <h2>{editData ? 'Edit Farmer' : 'Add New Farmer'}</h2>\r\n          <button className=\"farmer-form-close-btn\" onClick={handleClose}>×</button>\r\n        </div>\r\n        \r\n        <div className=\"farmer-form-body\">\r\n          <FarmerRegistrationForm\r\n            isInDashboard={true}\r\n            editData={editData}\r\n            onClose={handleClose}\r\n            onSubmit={handleSubmit}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FarmerForm; ","import React, { useState } from 'react';\r\nimport '../styles/ViewFarmerDetails.css';\r\n\r\nconst ViewFarmerRegistrationDetails = ({ farmerData, onClose, isInDashboard = false, onFarmerSelect }) => {\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  \r\n  // Safety check to prevent rendering objects directly\r\n  if (!farmerData || typeof farmerData !== 'object') {\r\n    console.error('ViewFarmerRegistrationDetails: Invalid farmerData:', farmerData);\r\n    return (\r\n      <div className=\"modal-overlay\">\r\n        <div className=\"modal-content view-farmer-modal\">\r\n          <div className=\"modal-header\">\r\n            <h2>Farmer Details</h2>\r\n            <button className=\"close-btn\" onClick={onClose}>×</button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <p>No farmer data available or invalid data format.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const totalSteps = 8;\r\n  \r\n  const stepTitles = [\r\n    'Personal Details',\r\n    'Address Information', \r\n    'Professional Details',\r\n    'Current Crop Details',\r\n    'Proposed Crop Details',\r\n    'Irrigation Details',\r\n    'Bank Details',\r\n    'Documents'\r\n  ];\r\n\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return 'Not provided';\r\n    return new Date(dateString).toLocaleDateString();\r\n  };\r\n\r\n  const formatAddress = (address) => {\r\n    if (!address) return 'Not provided';\r\n    return `${address.village || ''} ${address.postOffice || ''} ${address.policeStation || ''} ${address.district || ''} ${address.state || ''} ${address.pincode || ''}`.trim();\r\n  };\r\n\r\n  // Helper function to safely render values\r\n  const safeRender = (value) => {\r\n    if (value === null || value === undefined) {\r\n      return 'Not provided';\r\n    }\r\n    if (typeof value === 'object') {\r\n      console.warn('ViewFarmerRegistrationDetails: Object found in value:', value);\r\n      return 'Object (see console)';\r\n    }\r\n    return String(value);\r\n  };\r\n\r\n  const handleNextStep = () => {\r\n    if (currentStep < totalSteps - 1) {\r\n      setCurrentStep(currentStep + 1);\r\n    }\r\n  };\r\n\r\n  const handlePrevStep = () => {\r\n    if (currentStep > 0) {\r\n      setCurrentStep(currentStep - 1);\r\n    }\r\n  };\r\n\r\n  const handleStepClick = (stepIndex) => {\r\n    setCurrentStep(stepIndex);\r\n  };\r\n\r\n  // If in dashboard mode, render without modal overlay\r\n  if (isInDashboard) {\r\n    // Check if we're showing a single farmer's details or a list of farmers\r\n    const isShowingSingleFarmer = !Array.isArray(farmerData);\r\n    \r\n    if (isShowingSingleFarmer) {\r\n      // Show detailed view of a single farmer with step navigation\r\n      return (\r\n        <div className=\"view-farmer-dashboard\">\r\n          <div className=\"dashboard-header\">\r\n            <div className=\"header-content\">\r\n              <div className=\"header-left\">\r\n                <h2 className=\"dashboard-title\">Farmer Registration Details</h2>\r\n                <p className=\"dashboard-subtitle\">Step {currentStep + 1} of {totalSteps}: {stepTitles[currentStep]} - {safeRender(farmerData.name)}</p>\r\n              </div>\r\n              <button\r\n                className=\"back-button\"\r\n                onClick={onClose}\r\n                type=\"button\"\r\n              >\r\n                ← Back to List\r\n              </button>\r\n            </div>\r\n            \r\n            {/* Progress Bar */}\r\n            <div className=\"progress-container\">\r\n              <div className=\"progress-bar\">\r\n                <div \r\n                  className=\"progress-fill\" \r\n                  style={{ width: `${((currentStep + 1) / totalSteps) * 100}%` }}\r\n                ></div>\r\n              </div>\r\n              <span className=\"progress-text\">{currentStep + 1} / {totalSteps}</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"dashboard-content\">\r\n            <div className=\"farmer-details-container\">\r\n              \r\n              {/* Step Navigation */}\r\n              <div className=\"step-navigation\">\r\n                {stepTitles.map((title, index) => (\r\n                  <button\r\n                    key={index}\r\n                    className={`step-nav-btn ${currentStep === index ? 'active' : ''}`}\r\n                    onClick={() => handleStepClick(index)}\r\n                  >\r\n                    <span className=\"step-number\">{index + 1}</span>\r\n                    <span className=\"step-title\">{title}</span>\r\n                  </button>\r\n                ))}\r\n              </div>\r\n\r\n              {/* Step Content */}\r\n              <div className=\"step-content\">\r\n                {/* Step 0 - Personal Details */}\r\n                {currentStep === 0 && (\r\n              <div className=\"detail-section\">\r\n                <h3>Personal Information</h3>\r\n                <div className=\"detail-grid\">\r\n                  <div className=\"detail-item\">\r\n                        <label>Salutation:</label>\r\n                        <span>{safeRender(farmerData.salutation)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>First Name:</label>\r\n                        <span>{safeRender(farmerData.firstName)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Middle Name:</label>\r\n                        <span>{safeRender(farmerData.middleName)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Last Name:</label>\r\n                        <span>{safeRender(farmerData.lastName)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Full Name:</label>\r\n                    <span>{safeRender(farmerData.name)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <label>Date of Birth:</label>\r\n                    <span>{formatDate(farmerData.dateOfBirth)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <label>Gender:</label>\r\n                    <span>{safeRender(farmerData.gender)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <label>Contact Number:</label>\r\n                    <span>{safeRender(farmerData.contactNumber)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <label>Email:</label>\r\n                    <span>{safeRender(farmerData.email)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <label>Father's Name:</label>\r\n                    <span>{safeRender(farmerData.fatherName)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <label>Nationality:</label>\r\n                    <span>{safeRender(farmerData.nationality)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                        <label>Alternative Contact Type:</label>\r\n                        <span>{safeRender(farmerData.alternativeType)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                        <label>Alternative Contact Number:</label>\r\n                        <span>{safeRender(farmerData.alternativeNumber)}</span>\r\n                      </div>\r\n                      {farmerData.photo && (\r\n                        <div className=\"detail-item full-width\">\r\n                          <label>Photo:</label>\r\n                          <div className=\"photo-display\">\r\n                            <img src={farmerData.photo} alt=\"Farmer\" className=\"farmer-photo\" />\r\n                  </div>\r\n                        </div>\r\n                      )}\r\n                </div>\r\n              </div>\r\n                )}\r\n\r\n                {/* Step 1 - Address Information */}\r\n                {currentStep === 1 && (\r\n              <div className=\"detail-section\">\r\n                <h3>Address Information</h3>\r\n                <div className=\"detail-grid\">\r\n                      <div className=\"detail-item\">\r\n                        <label>Country:</label>\r\n                        <span>{safeRender(farmerData.country)}</span>\r\n                      </div>\r\n                  <div className=\"detail-item\">\r\n                    <label>State:</label>\r\n                    <span>{safeRender(farmerData.state)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <label>District:</label>\r\n                    <span>{safeRender(farmerData.district)}</span>\r\n                  </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Block:</label>\r\n                        <span>{safeRender(farmerData.block)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Village:</label>\r\n                        <span>{safeRender(farmerData.village)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Pincode:</label>\r\n                        <span>{safeRender(farmerData.pincode)}</span>\r\n                      </div>\r\n                  <div className=\"detail-item full-width\">\r\n                    <label>Complete Address:</label>\r\n                        <span>{`${safeRender(farmerData.village)}, ${safeRender(farmerData.block)}, ${safeRender(farmerData.district)}, ${safeRender(farmerData.state)} - ${safeRender(farmerData.pincode)}`.replace(/,\\s*,/g, ',').replace(/^,\\s*/, '').replace(/,\\s*$/, '')}</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Step 2 - Professional Details */}\r\n                {currentStep === 2 && (\r\n                  <div className=\"detail-section\">\r\n                    <h3>Professional Details</h3>\r\n                    <div className=\"detail-grid\">\r\n                      <div className=\"detail-item\">\r\n                        <label>Education:</label>\r\n                        <span>{safeRender(farmerData.education)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Experience:</label>\r\n                        <span>{safeRender(farmerData.experience)}</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Step 3 - Current Crop Details */}\r\n                {currentStep === 3 && (\r\n                  <div className=\"detail-section\">\r\n                    <h3>Current Crop Details</h3>\r\n                    <div className=\"detail-grid\">\r\n                      <div className=\"detail-item\">\r\n                        <label>Survey Number:</label>\r\n                        <span>{safeRender(farmerData.currentSurveyNumber)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Land Holding:</label>\r\n                        <span>{safeRender(farmerData.currentLandHolding)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Geo Tag:</label>\r\n                        <span>{safeRender(farmerData.currentGeoTag)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Current Crop:</label>\r\n                        <span>{safeRender(farmerData.currentCrop)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Net Income:</label>\r\n                        <span>{safeRender(farmerData.currentNetIncome)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Soil Test:</label>\r\n                        <span>{safeRender(farmerData.currentSoilTest)}</span>\r\n                      </div>\r\n                      {farmerData.currentSoilTestCertificateFileName && (\r\n                        <div className=\"detail-item full-width\">\r\n                          <label>Soil Test Certificate:</label>\r\n                          <span>{safeRender(farmerData.currentSoilTestCertificateFileName)}</span>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Step 4 - Proposed Crop Details */}\r\n                {currentStep === 4 && (\r\n                  <div className=\"detail-section\">\r\n                    <h3>Proposed Crop Details</h3>\r\n                    <div className=\"detail-grid\">\r\n                      <div className=\"detail-item\">\r\n                        <label>Survey Number:</label>\r\n                        <span>{safeRender(farmerData.proposedSurveyNumber)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Land Holding:</label>\r\n                        <span>{safeRender(farmerData.proposedLandHolding)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Geo Tag:</label>\r\n                        <span>{safeRender(farmerData.proposedGeoTag)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Crop Type:</label>\r\n                        <span>{safeRender(farmerData.cropType)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Net Income:</label>\r\n                        <span>{safeRender(farmerData.netIncome)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Soil Test:</label>\r\n                        <span>{safeRender(farmerData.proposedSoilTest)}</span>\r\n                      </div>\r\n                      {farmerData.soilTestCertificate && (\r\n                        <div className=\"detail-item full-width\">\r\n                          <label>Soil Test Certificate:</label>\r\n                          <span>{safeRender(farmerData.soilTestCertificate)}</span>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Step 5 - Irrigation Details */}\r\n                {currentStep === 5 && (\r\n                  <div className=\"detail-section\">\r\n                    <h3>Irrigation Details</h3>\r\n                    <div className=\"detail-grid\">\r\n                      <div className=\"detail-item\">\r\n                        <label>Current Water Source:</label>\r\n                        <span>{safeRender(farmerData.currentWaterSource)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Current Discharge (LPH):</label>\r\n                        <span>{safeRender(farmerData.currentDischargeLPH)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Current Summer Discharge:</label>\r\n                        <span>{safeRender(farmerData.currentSummerDischarge)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Current Borewell Location:</label>\r\n                        <span>{safeRender(farmerData.currentBorewellLocation)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Proposed Water Source:</label>\r\n                        <span>{safeRender(farmerData.proposedWaterSource)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Proposed Discharge (LPH):</label>\r\n                        <span>{safeRender(farmerData.proposedDischargeLPH)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Proposed Summer Discharge:</label>\r\n                        <span>{safeRender(farmerData.proposedSummerDischarge)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Proposed Borewell Location:</label>\r\n                        <span>{safeRender(farmerData.proposedBorewellLocation)}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n                )}\r\n\r\n                {/* Step 6 - Bank Details */}\r\n                {currentStep === 6 && (\r\n              <div className=\"detail-section\">\r\n                    <h3>Bank Details</h3>\r\n                <div className=\"detail-grid\">\r\n                  <div className=\"detail-item\">\r\n                        <label>Bank Name:</label>\r\n                        <span>{safeRender(farmerData.bankName)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Account Number:</label>\r\n                        <span>{safeRender(farmerData.accountNumber)}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <label>Branch Name:</label>\r\n                        <span>{safeRender(farmerData.branchName)}</span>\r\n                  </div>\r\n                    <div className=\"detail-item\">\r\n                        <label>IFSC Code:</label>\r\n                        <span>{safeRender(farmerData.ifscCode)}</span>\r\n                      </div>\r\n                      {farmerData.passbookFile && (\r\n                        <div className=\"detail-item full-width\">\r\n                          <label>Passbook File:</label>\r\n                          <span>{safeRender(farmerData.passbookFile)}</span>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    </div>\r\n                  )}\r\n\r\n                {/* Step 7 - Documents */}\r\n                {currentStep === 7 && (\r\n                  <div className=\"detail-section\">\r\n                    <h3>Documents</h3>\r\n                    <div className=\"detail-grid\">\r\n                      <div className=\"detail-item\">\r\n                        <label>Document Type:</label>\r\n                        <span>{safeRender(farmerData.documentType)}</span>\r\n                      </div>\r\n                    <div className=\"detail-item\">\r\n                        <label>Document Number:</label>\r\n                        <span>{safeRender(farmerData.documentNumber)}</span>\r\n                      </div>\r\n                      {farmerData.documentFileName && (\r\n                        <div className=\"detail-item full-width\">\r\n                          <label>Document File:</label>\r\n                          <span>{safeRender(farmerData.documentFileName)}</span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {/* Step Navigation Buttons */}\r\n              <div className=\"step-navigation-buttons\">\r\n                <button\r\n                  className=\"step-nav-btn prev\"\r\n                  onClick={handlePrevStep}\r\n                  disabled={currentStep === 0}\r\n                >\r\n                  ← Previous\r\n                </button>\r\n                <button\r\n                  className=\"step-nav-btn next\"\r\n                  onClick={handleNextStep}\r\n                  disabled={currentStep === totalSteps - 1}\r\n                >\r\n                  Next →\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      // Show list of all farmers\r\n      const farmerColumns = [\r\n        { key: 'name', label: 'Name', sortable: true },\r\n        { key: 'contactNumber', label: 'Contact Number', sortable: true },\r\n        { key: 'email', label: 'Email', sortable: true },\r\n        { key: 'state', label: 'State', sortable: true },\r\n        { key: 'district', label: 'District', sortable: true },\r\n        { key: 'kycStatus', label: 'KYC Status', sortable: true },\r\n        { key: 'assignedEmployee', label: 'Assigned Employee', sortable: true }\r\n      ];\r\n\r\n      return (\r\n        <div className=\"view-farmer-dashboard\">\r\n          <div className=\"dashboard-header\">\r\n            <div className=\"header-content\">\r\n              <div className=\"header-left\">\r\n                <h2 className=\"dashboard-title\">All Farmers</h2>\r\n                <p className=\"dashboard-subtitle\">View and manage all farmer registrations</p>\r\n              </div>\r\n              <button\r\n                className=\"back-button\"\r\n                onClick={onClose}\r\n                type=\"button\"\r\n              >\r\n                ← Back\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"dashboard-content\">\r\n            <div className=\"farmer-details-container\">\r\n              <div className=\"detail-section\">\r\n                <h3>Farmer List</h3>\r\n                <p>Total Farmers: {Array.isArray(farmerData) ? farmerData.length : 0}</p>\r\n                \r\n                {/* Display farmers in a table format */}\r\n                <div className=\"farmers-table-container\">\r\n                  {Array.isArray(farmerData) && farmerData.length > 0 ? (\r\n                    <div className=\"farmers-table\">\r\n                      <div className=\"farmer-details-table-header\">\r\n                        {farmerColumns.map(column => (\r\n                          <div key={column.key} className=\"table-cell header\">\r\n                            {column.label}\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                      <div className=\"table-body\">\r\n                        {farmerData.map((farmer, index) => (\r\n                          <div \r\n                            key={index} \r\n                            className=\"farmer-details-table-row clickable\"\r\n                            onClick={() => onFarmerSelect && onFarmerSelect(farmer)}\r\n                          >\r\n                            <div className=\"table-cell\">{safeRender(farmer.name)}</div>\r\n                            <div className=\"table-cell\">{safeRender(farmer.contactNumber)}</div>\r\n                            <div className=\"table-cell\">{safeRender(farmer.email)}</div>\r\n                            <div className=\"table-cell\">{safeRender(farmer.state)}</div>\r\n                            <div className=\"table-cell\">{safeRender(farmer.district)}</div>\r\n                            <div className=\"table-cell\">\r\n                              <span className={`kyc-status-badge ${safeRender(farmer.kycStatus)?.toLowerCase()}`}>\r\n                                {safeRender(farmer.kycStatus) || 'PENDING'}\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"table-cell\">\r\n                              {farmer.assignedEmployee ? \r\n                                (typeof farmer.assignedEmployee === 'object' ? \r\n                                  `${safeRender(farmer.assignedEmployee.firstName)} ${safeRender(farmer.assignedEmployee.lastName)}` : \r\n                                  safeRender(farmer.assignedEmployee)\r\n                                ) : 'Not Assigned'\r\n                              }\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"no-data\">\r\n                      <p>No farmers found. Add some farmers using the \"Add Farmer\" button.</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-content view-farmer-modal\">\r\n        <div className=\"modal-header\">\r\n          <h2>Farmer Registration Details</h2>\r\n          <button className=\"close-btn\" onClick={onClose}>×</button>\r\n        </div>\r\n        \r\n        <div className=\"modal-body\">\r\n          <div className=\"farmer-details-container\">\r\n            \r\n            {/* Personal Information */}\r\n            <div className=\"detail-section\">\r\n              <h3>Personal Information</h3>\r\n              <div className=\"detail-grid\">\r\n                                 <div className=\"detail-item\">\r\n                   <label>Name:</label>\r\n                   <span>{safeRender(farmerData.name)}</span>\r\n                 </div>\r\n                <div className=\"detail-item\">\r\n                  <label>Date of Birth:</label>\r\n                  <span>{formatDate(farmerData.dateOfBirth)}</span>\r\n                </div>\r\n                <div className=\"detail-item\">\r\n                  <label>Gender:</label>\r\n                  <span>{safeRender(farmerData.gender)}</span>\r\n                </div>\r\n                                 <div className=\"detail-item\">\r\n                   <label>Contact Number:</label>\r\n                   <span>{safeRender(farmerData.contactNumber)}</span>\r\n                 </div>\r\n                <div className=\"detail-item\">\r\n                  <label>Email:</label>\r\n                  <span>{safeRender(farmerData.email)}</span>\r\n                </div>\r\n                <div className=\"detail-item\">\r\n                  <label>Father's Name:</label>\r\n                  <span>{safeRender(farmerData.fatherName)}</span>\r\n                </div>\r\n                <div className=\"detail-item\">\r\n                  <label>Nationality:</label>\r\n                  <span>{safeRender(farmerData.nationality)}</span>\r\n                </div>\r\n                                 <div className=\"detail-item\">\r\n                   <label>Alternative Contact:</label>\r\n                   <span>{safeRender(farmerData.alternativeContactNumber)}</span>\r\n                 </div>\r\n                 <div className=\"detail-item\">\r\n                   <label>Alternative Relation:</label>\r\n                   <span>{safeRender(farmerData.alternativeRelationType)}</span>\r\n                 </div>\r\n              </div>\r\n            </div>\r\n\r\n                         {/* Address Information */}\r\n             <div className=\"detail-section\">\r\n               <h3>Address Information</h3>\r\n               <div className=\"detail-grid\">\r\n                 <div className=\"detail-item\">\r\n                   <label>State:</label>\r\n                   <span>{safeRender(farmerData.state)}</span>\r\n                 </div>\r\n                 <div className=\"detail-item\">\r\n                   <label>District:</label>\r\n                   <span>{safeRender(farmerData.district)}</span>\r\n                 </div>\r\n                 <div className=\"detail-item full-width\">\r\n                   <label>Complete Address:</label>\r\n                   <span>{`${safeRender(farmerData.district)}, ${safeRender(farmerData.state)}`.replace(/,\\s*,/g, ',').replace(/^,\\s*/, '').replace(/,\\s*$/, '')}</span>\r\n                 </div>\r\n               </div>\r\n             </div>\r\n\r\n                         {/* Assignment Information */}\r\n             <div className=\"detail-section\">\r\n               <h3>Assignment Information</h3>\r\n               <div className=\"detail-grid\">\r\n                 <div className=\"detail-item\">\r\n                   <label>KYC Status:</label>\r\n                   <span className={`kyc-status-badge ${safeRender(farmerData.kycStatus)?.toLowerCase()}`}>\r\n                     {safeRender(farmerData.kycStatus) || 'PENDING'}\r\n                   </span>\r\n                 </div>\r\n                 {farmerData.assignedEmployee && (\r\n                   <div className=\"detail-item\">\r\n                     <label>Assigned Employee:</label>\r\n                     <span>{typeof farmerData.assignedEmployee === 'object' ? \r\n                       `${safeRender(farmerData.assignedEmployee.firstName)} ${safeRender(farmerData.assignedEmployee.lastName)}` : \r\n                       safeRender(farmerData.assignedEmployee)}</span>\r\n                   </div>\r\n                 )}\r\n                 {farmerData.assignedEmployeeId && (\r\n                   <div className=\"detail-item\">\r\n                     <label>Assigned Employee ID:</label>\r\n                     <span>{safeRender(farmerData.assignedEmployeeId)}</span>\r\n                   </div>\r\n                 )}\r\n               </div>\r\n             </div>\r\n\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewFarmerRegistrationDetails; "],"names":["_ref","item","onEdit","onDelete","onView","onKycUpdate","showDelete","customActions","isOpen","setIsOpen","useState","dropdownRef","useRef","toggleRef","menuPos","setMenuPos","top","left","useEffect","handleClickOutside","event","portal","document","getElementById","current","contains","target","updatePos","rect","getBoundingClientRect","bottom","window","scrollY","Math","min","right","scrollX","innerWidth","addEventListener","removeEventListener","actions","useMemo","actionList","push","label","icon","className","onClick","Array","isArray","forEach","action","console","log","hasView","hasEdit","hasDelete","hasKyc","customCount","length","total","_jsxs","ref","children","_jsx","type","e","stopPropagation","next","createPortal","id","style","position","map","index","showCondition","handleActionClick","body","DataTable","React","data","columns","loading","emptyMessage","getStatusClass","useCallback","status","toLowerCase","safeRender","value","columnKey","row","name","title","keys","Object","key","join","undefined","alternativeFields","altField","String","error","tableData","firstRecord","totalRecords","availableFields","tableColumns","column","cellContent","render","normalizedStatus","ActionDropdown","displayName","employeeData","onClose","onUpdate","isInDashboard","onEmployeeSelect","isEditing","setIsEditing","currentStep","setCurrentStep","stepTitles","warn","formatDate","dateString","Date","toLocaleDateString","methods","useForm","defaultValues","firstName","lastName","email","phone","dateOfBirth","gender","address","city","state","pincode","employeeId","department","designation","joiningDate","salary","supervisor","highestQualification","institution","graduationYear","specialization","emergencyName","emergencyPhone","emergencyRelation","photo","idProof","addressProof","educationalCertificates","skills","languages","certifications","workExperience","references","register","handleSubmit","watch","setValue","trigger","clearErrors","formState","errors","steps","fields","handleNext","async","currentFields","handlePrevious","disabled","employeeColumns","sortable","employee","step","FormProvider","onSubmit","renderStepContent","required","message","pattern","relationType","relationName","altNumber","altNumberType","bankName","accountNumber","branchName","ifscCode","accept","onChange","files","src","URL","createObjectURL","alt","multiple","from","_Fragment","handleCancel","reset","editData","showForm","setShowForm","handleClose","FarmerRegistrationForm","_safeRender2","farmerData","onFarmerSelect","handleNextStep","totalSteps","handlePrevStep","width","salutation","middleName","contactNumber","fatherName","nationality","alternativeType","alternativeNumber","country","district","block","village","replace","education","experience","currentSurveyNumber","currentLandHolding","currentGeoTag","currentCrop","currentNetIncome","currentSoilTest","currentSoilTestCertificateFileName","proposedSurveyNumber","proposedLandHolding","proposedGeoTag","cropType","netIncome","proposedSoilTest","soilTestCertificate","currentWaterSource","currentDischargeLPH","currentSummerDischarge","currentBorewellLocation","proposedWaterSource","proposedDischargeLPH","proposedSummerDischarge","proposedBorewellLocation","passbookFile","documentType","documentNumber","documentFileName","farmerColumns","farmer","_safeRender","kycStatus","assignedEmployee","alternativeContactNumber","alternativeRelationType","assignedEmployeeId"],"sourceRoot":""}