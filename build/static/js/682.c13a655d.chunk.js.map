{"version":3,"file":"static/js/682.c13a655d.chunk.js","mappings":"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","sources":["pages/AdminDashboard.jsx","components/StatsCard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { farmersAPI, employeesAPI, adminAPI, superAdminAPI } from '../api/apiService';\r\nimport '../styles/Dashboard.css';\r\nimport FarmerForm from '../components/FarmerForm';\r\nimport FarmerRegistrationForm from '../components/FarmerRegistrationForm';\r\nimport EmployeeRegistrationForm from '../components/EmployeeRegistrationForm';\r\nimport AssignmentModal from '../components/AssignmentModal';\r\nimport KYCDocumentUpload from '../components/KYCDocumentUpload';\r\nimport ViewFarmerRegistrationDetails from '../components/ViewFarmerRegistrationDetails';\r\nimport ViewEditEmployeeDetails from '../components/ViewEditEmployeeDetails';\r\nimport StatsCard from '../components/StatsCard';\r\nimport DataTable from '../components/DataTable';\r\nimport UserProfileDropdown from '../components/UserProfileDropdown';\r\nimport ThemeDropdown from '../components/ThemeDropdown';\r\nimport RegistrationApprovalModal from '../components/RegistrationApprovalModal';\r\nimport RegistrationDetailModal from '../components/RegistrationDetailModal';\r\n\r\nconst AdminDashboard = () => {\r\n  const { user, logout } = useAuth();\r\n  const [activeTab, setActiveTab] = useState('overview');\r\n  const [farmers, setFarmers] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n  const [selectedEmployee, setSelectedEmployee] = useState('');\r\n  const [showAssignmentModal, setShowAssignmentModal] = useState(false);\r\n  const [showFarmerForm, setShowFarmerForm] = useState(false);\r\n  const [showEmployeeForm, setShowEmployeeForm] = useState(false);\r\n  const [showFarmerDetails, setShowFarmerDetails] = useState(false);\r\n  const [selectedFarmerData, setSelectedFarmerData] = useState(null);\r\n  const [showEmployeeDetails, setShowEmployeeDetails] = useState(false);\r\n  const [selectedEmployeeData, setSelectedEmployeeData] = useState(null);\r\n  const [showKYCDocumentUpload, setShowKYCDocumentUpload] = useState(false);\r\n  const [selectedFarmerForKYC, setSelectedFarmerForKYC] = useState(null);\r\n  const [editingFarmer, setEditingFarmer] = useState(null);\r\n  const [editingEmployee, setEditingEmployee] = useState(null);\r\n  const [registrations, setRegistrations] = useState([]);\r\n  const [showRegistrationModal, setShowRegistrationModal] = useState(false);\r\n  const [selectedRegistration, setSelectedRegistration] = useState(null);\r\n  const [showRegistrationDetailModal, setShowRegistrationDetailModal] = useState(false);\r\n  const [selectedRegistrationForDetail, setSelectedRegistrationForDetail] = useState(null);\r\n  const [showEmployeeRegistration, setShowEmployeeRegistration] = useState(false);\r\n  const [showFarmerRegistration, setShowFarmerRegistration] = useState(false);\r\n  const [registrationFilters, setRegistrationFilters] = useState({\r\n    role: '',\r\n    status: ''\r\n  });\r\n  const [filters, setFilters] = useState({\r\n    state: '',\r\n    district: '',\r\n    region: '',\r\n    kycStatus: '',\r\n    assignmentStatus: '',\r\n    employeeFilter: ''\r\n  });\r\n  const [showUserDropdown, setShowUserDropdown] = useState(false);\r\n\r\n  // Greeting function based on time of day\r\n  const getGreeting = () => {\r\n    const hour = new Date().getHours();\r\n    if (hour >= 5 && hour < 12) {\r\n      return 'Good Morning';\r\n    } else if (hour >= 12 && hour < 17) {\r\n      return 'Good Afternoon';\r\n    } else if (hour >= 17 && hour < 21) {\r\n      return 'Good Evening';\r\n    } else {\r\n      return 'Good Night';\r\n    }\r\n  };\r\n\r\n  // Load data from API\r\n  useEffect(() => {\r\n    fetchData();\r\n    \r\n    // Listen for KYC status updates from Employee Dashboard\r\n    const handleKYCUpdate = (event) => {\r\n      console.log('🔄 Admin Dashboard: KYC status updated, refreshing data...');\r\n      console.log('📊 KYC Update details:', event.detail);\r\n      // Wait 2 seconds for backend to update, then refresh\r\n      setTimeout(() => {\r\n        console.log('🔄 Refreshing Admin data after KYC update...');\r\n        fetchData();\r\n      }, 2000);\r\n    };\r\n    \r\n    window.addEventListener('kycStatusUpdated', handleKYCUpdate);\r\n    \r\n    return () => {\r\n      window.removeEventListener('kycStatusUpdated', handleKYCUpdate);\r\n    };\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      console.log('🔍 Admin: Starting to fetch real data from API...');\r\n      \r\n      // Fetch farmers, employees, and registrations from API using admin endpoints\r\n      const [farmersData, employeesData, registrationsData] = await Promise.all([\r\n        adminAPI.getFarmersWithKyc(),\r\n        adminAPI.getEmployeesWithStats(),\r\n        superAdminAPI.getRegistrationList()\r\n      ]);\r\n      \r\n      console.log('✅ Admin API Response:', { \r\n        farmersCount: farmersData?.length || 0,\r\n        employeesCount: employeesData?.length || 0,\r\n        registrationsCount: registrationsData?.length || 0\r\n      });\r\n      \r\n      // Use real data from APIs\r\n      setFarmers(farmersData || []);\r\n      setEmployees(employeesData || []);\r\n      setRegistrations(registrationsData || []);\r\n      \r\n      console.log('✅ Admin: Using real data from APIs');\r\n      console.log('- Farmers:', farmersData?.length || 0, 'records');\r\n      console.log('- Employees:', employeesData?.length || 0, 'records');\r\n      console.log('- Registrations:', registrationsData?.length || 0, 'records');\r\n      \r\n    } catch (error) {\r\n      console.error('❌ Admin error fetching data:', error);\r\n      console.log('❌ Using fallback endpoints due to API error');\r\n      \r\n      // Try basic admin endpoints as fallback\r\n      try {\r\n        const [fallbackFarmers, fallbackEmployees, fallbackRegistrations] = await Promise.all([\r\n          adminAPI.getAllFarmers(),\r\n          adminAPI.getAllEmployees(),\r\n          superAdminAPI.getRegistrationList()\r\n        ]);\r\n        \r\n        console.log('✅ Fallback API Response:', {\r\n          farmersCount: fallbackFarmers?.length || 0,\r\n          employeesCount: fallbackEmployees?.length || 0,\r\n          registrationsCount: fallbackRegistrations?.length || 0\r\n        });\r\n        \r\n        setFarmers(fallbackFarmers || []);\r\n        setEmployees(fallbackEmployees || []);\r\n        setRegistrations(fallbackRegistrations || []);\r\n        \r\n      } catch (fallbackError) {\r\n        console.error('❌ Fallback API also failed:', fallbackError);\r\n        // Set empty arrays if all APIs fail\r\n        setFarmers([]);\r\n        setEmployees([]);\r\n        setRegistrations([]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const loadMockData = () => {\r\n    const mockFarmers = [\r\n      {\r\n        id: 1,\r\n        name: 'Ramu Yadav',\r\n        phone: '9876543210',\r\n        state: 'Telangana',\r\n        district: 'Karimnagar',\r\n        region: 'Southern',\r\n        kycStatus: 'PENDING',\r\n        assignmentStatus: 'ASSIGNED',\r\n        assignedEmployee: 'harish reddy',\r\n        assignedDate: '2024-01-15'\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'Krishna Kumar',\r\n        phone: '9983733210',\r\n        state: 'Andhrapradesh',\r\n        district: 'rangareddy',\r\n        region: 'Southern',\r\n        kycStatus: 'PENDING',\r\n        assignmentStatus: 'ASSIGNED',\r\n        assignedEmployee: 'harish reddy',\r\n        assignedDate: '2024-01-18'\r\n      },\r\n      {\r\n        id: 3,\r\n        name: 'suman kurrapati',\r\n        phone: '9783733210',\r\n        state: 'Andhrapradesh',\r\n        district: 'kadapa',\r\n        region: 'Southern',\r\n        kycStatus: 'NOT_STARTED',\r\n        assignmentStatus: 'ASSIGNED',\r\n        assignedEmployee: 'harish reddy',\r\n        assignedDate: '2024-01-10'\r\n      },\r\n      {\r\n        id: 4,\r\n        name: 'vamsi krishna',\r\n        phone: '9783733210',\r\n        state: 'Andhrapradesh',\r\n        district: 'kadapa',\r\n        region: 'Southern',\r\n        kycStatus: 'NOT_STARTED',\r\n        assignmentStatus: 'ASSIGNED',\r\n        assignedEmployee: 'harish reddy',\r\n        assignedDate: '2024-01-20'\r\n      },\r\n      {\r\n        id: 5,\r\n        name: 'hari kumar chowdary',\r\n        phone: '6271979190',\r\n        state: 'Andhrapradesh',\r\n        district: 'Kadapa',\r\n        region: 'Southern',\r\n        kycStatus: 'NOT_STARTED',\r\n        assignmentStatus: 'ASSIGNED',\r\n        assignedEmployee: 'harish reddy',\r\n        assignedDate: '2024-01-25'\r\n      },\r\n      {\r\n        id: 6,\r\n        name: 'kumar sreenu chowdary',\r\n        phone: '6302949363',\r\n        state: 'Andhrapradesh',\r\n        district: 'kadpaa',\r\n        region: 'Southern',\r\n        kycStatus: 'NOT_STARTED',\r\n        assignmentStatus: 'ASSIGNED',\r\n        assignedEmployee: 'karthik kumar',\r\n        assignedDate: '2024-01-12'\r\n      },\r\n      {\r\n        id: 7,\r\n        name: 'Ainash kumar',\r\n        phone: '9798433210',\r\n        state: 'Andhrapradesh',\r\n        district: 'Kuppam',\r\n        region: 'Southern',\r\n        kycStatus: 'NOT_STARTED',\r\n        assignmentStatus: 'ASSIGNED',\r\n        assignedEmployee: 'harish reddy',\r\n        assignedDate: '2024-01-12'\r\n      }\r\n    ];\r\n\r\n    const mockEmployees = [\r\n      {\r\n        id: 1,\r\n        name: 'John Doe',\r\n        phone: '9876543201',\r\n        email: 'john.doe@company.com',\r\n        designation: 'KYC Officer',\r\n        state: 'Maharashtra',\r\n        district: 'Pune',\r\n        region: 'Western',\r\n        status: 'ACTIVE',\r\n        assignedFarmersCount: 15,\r\n        kycStats: {\r\n          approved: 8,\r\n          pending: 5,\r\n          referBack: 2,\r\n          rejected: 0\r\n        }\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'Jane Smith',\r\n        phone: '9876543202',\r\n        email: 'jane.smith@company.com',\r\n        designation: 'KYC Officer',\r\n        state: 'Gujarat',\r\n        district: 'Ahmedabad',\r\n        region: 'Western',\r\n        status: 'ACTIVE',\r\n        assignedFarmersCount: 12,\r\n        kycStats: {\r\n          approved: 6,\r\n          pending: 4,\r\n          referBack: 1,\r\n          rejected: 1\r\n        }\r\n      },\r\n      {\r\n        id: 3,\r\n        name: 'Mike Johnson',\r\n        phone: '9876543203',\r\n        email: 'mike.johnson@company.com',\r\n        designation: 'KYC Officer',\r\n        state: 'Punjab',\r\n        district: 'Amritsar',\r\n        region: 'Northern',\r\n        status: 'ACTIVE',\r\n        assignedFarmersCount: 8,\r\n        kycStats: {\r\n          approved: 5,\r\n          pending: 2,\r\n          referBack: 1,\r\n          rejected: 0\r\n        }\r\n      },\r\n      {\r\n        id: 4,\r\n        name: 'Sarah Wilson',\r\n        phone: '9876543204',\r\n        email: 'sarah.wilson@company.com',\r\n        designation: 'KYC Officer',\r\n        state: 'Karnataka',\r\n        district: 'Bangalore',\r\n        region: 'Southern',\r\n        status: 'ACTIVE',\r\n        assignedFarmersCount: 0,\r\n        kycStats: {\r\n          approved: 0,\r\n          pending: 0,\r\n          referBack: 0,\r\n          rejected: 0\r\n        }\r\n      }\r\n    ];\r\n\r\n    setFarmers(mockFarmers);\r\n    setEmployees(mockEmployees);\r\n  };\r\n\r\n  const loadMockRegistrationData = () => {\r\n    const mockRegistrations = [\r\n      {\r\n        id: 1,\r\n        name: 'Ramu Yadav',\r\n        email: 'ramu.yadav@example.com',\r\n        phoneNumber: '9876543210',\r\n        role: 'FARMER',\r\n        status: 'PENDING',\r\n        createdAt: '2024-01-15',\r\n        documents: ['Aadhar Card', 'PAN Card'],\r\n        kycStatus: 'PENDING'\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'Krishna Kumar',\r\n        email: 'krishna.kumar@example.com',\r\n        phoneNumber: '9983733210',\r\n        role: 'FARMER',\r\n        status: 'PENDING',\r\n        createdAt: '2024-01-14',\r\n        documents: ['Aadhar Card', 'PAN Card'],\r\n        kycStatus: 'PENDING'\r\n      },\r\n      {\r\n        id: 3,\r\n        name: 'Jane Smith',\r\n        email: 'jane.smith@example.com',\r\n        phoneNumber: '9876543211',\r\n        role: 'EMPLOYEE',\r\n        status: 'APPROVED',\r\n        createdAt: '2024-01-14',\r\n        documents: ['Aadhar Card', 'PAN Card', 'Educational Certificate'],\r\n        kycStatus: 'APPROVED'\r\n      },\r\n      {\r\n        id: 4,\r\n        name: 'Bob Wilson',\r\n        email: 'bob.wilson@example.com',\r\n        phoneNumber: '9876543212',\r\n        role: 'FARMER',\r\n        status: 'REJECTED',\r\n        createdAt: '2024-01-13',\r\n        documents: ['Aadhar Card'],\r\n        kycStatus: 'REJECTED',\r\n        rejectionReason: 'Incomplete documentation'\r\n      }\r\n    ];\r\n    setRegistrations(mockRegistrations);\r\n  };\r\n\r\n  const getFilteredFarmers = () => {\r\n    return (farmers || []).filter(farmer => {\r\n      const matchesState = !filters.state || farmer.state === filters.state;\r\n      const matchesDistrict = !filters.district || farmer.district === filters.district;\r\n      const matchesKycStatus = !filters.kycStatus || farmer.kycStatus === filters.kycStatus;\r\n      const matchesEmployee = !filters.employeeFilter || farmer.assignedEmployee === filters.employeeFilter;\r\n      \r\n      return matchesState && matchesDistrict && matchesKycStatus && matchesEmployee;\r\n    });\r\n  };\r\n\r\n  const getFilteredEmployees = () => {\r\n    return (employees || []).filter(employee => {\r\n      const matchesDistrict = !filters.district || employee.district === filters.district;\r\n      return matchesDistrict;\r\n    });\r\n  };\r\n\r\n  const getFilteredRegistrations = () => {\r\n    console.log('All registrations:', registrations);\r\n    // Apply filters\r\n    const filtered = (registrations || []).filter(registration => {\r\n      const roleMatch = !registrationFilters.role || registration.role === registrationFilters.role;\r\n      const statusMatch = !registrationFilters.status || registration.status === registrationFilters.status;\r\n      return roleMatch && statusMatch;\r\n    });\r\n    console.log('Filtered registrations:', filtered);\r\n    return filtered;\r\n  };\r\n\r\n  const handleViewRegistration = (registration) => {\r\n    setSelectedRegistrationForDetail(registration);\r\n    setShowRegistrationDetailModal(true);\r\n  };\r\n\r\n  const handleCloseRegistrationDetailModal = () => {\r\n    setShowRegistrationDetailModal(false);\r\n    setSelectedRegistrationForDetail(null);\r\n  };\r\n\r\n  const handleRegistrationUpdate = () => {\r\n    // Refresh the registration data\r\n    fetchData();\r\n  };\r\n\r\n  const handleApproveRegistration = async (registrationId) => {\r\n    try {\r\n      await superAdminAPI.approveUser(registrationId, 'FARMER'); // Default role, can be updated\r\n      setRegistrations(prev => prev.map(reg => \r\n        reg.id === registrationId ? { ...reg, status: 'APPROVED' } : reg\r\n      ));\r\n      alert('Registration approved successfully!');\r\n    } catch (error) {\r\n      console.error('Error approving registration:', error);\r\n      alert('Failed to approve registration. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleRejectRegistration = async (registrationId) => {\r\n    try {\r\n      await superAdminAPI.rejectUser(registrationId, 'Rejected by Admin');\r\n      setRegistrations(prev => prev.map(reg => \r\n        reg.id === registrationId ? { ...reg, status: 'REJECTED' } : reg\r\n      ));\r\n      alert('Registration rejected successfully!');\r\n    } catch (error) {\r\n      console.error('Error rejecting registration:', error);\r\n      alert('Failed to reject registration. Please try again.');\r\n    }\r\n  };\r\n\r\n  const getStats = () => {\r\n    const totalFarmers = farmers?.length || 0;\r\n    const totalEmployees = employees?.length || 0;\r\n    const unassignedFarmers = (farmers || []).filter(f => !f.assignedEmployee || f.assignedEmployee === 'Not Assigned').length;\r\n    \r\n    // Handle different KYC status formats\r\n    const pendingKYC = (farmers || []).filter(f => \r\n      f.kycStatus === 'PENDING' || f.kycStatus === 'pending' || \r\n      f.kycStatus === 'NOT_STARTED' || f.kycStatus === 'not_started'\r\n    ).length;\r\n    \r\n    const approvedKYC = (farmers || []).filter(f => \r\n      f.kycStatus === 'APPROVED' || f.kycStatus === 'approved'\r\n    ).length;\r\n    \r\n    const referBackKYC = (farmers || []).filter(f => \r\n      f.kycStatus === 'REFER_BACK' || f.kycStatus === 'refer_back'\r\n    ).length;\r\n    \r\n    const rejectedKYC = (farmers || []).filter(f => \r\n      f.kycStatus === 'REJECTED' || f.kycStatus === 'rejected'\r\n    ).length;\r\n\r\n    console.log('Admin Stats calculated from real data:');\r\n    console.log('- Total Farmers:', totalFarmers);\r\n    console.log('- Total Employees:', totalEmployees);\r\n    console.log('- Unassigned Farmers:', unassignedFarmers);\r\n    console.log('- Pending KYC:', pendingKYC);\r\n    console.log('- Approved KYC:', approvedKYC);\r\n    console.log('- Refer Back KYC:', referBackKYC);\r\n    console.log('- Rejected KYC:', rejectedKYC);\r\n\r\n    return {\r\n      totalFarmers,\r\n      totalEmployees,\r\n      unassignedFarmers,\r\n      pendingKYC,\r\n      approvedKYC,\r\n      referBackKYC,\r\n      rejectedKYC\r\n    };\r\n  };\r\n\r\n  const getTodoList = () => {\r\n    const unassignedFarmers = (farmers || []).filter(f => !f.assignedEmployee || f.assignedEmployee === 'Not Assigned');\r\n    const overdueKYC = (farmers || []).filter(f => {\r\n      if ((f.kycStatus === 'PENDING' || f.kycStatus === 'NOT_STARTED') && f.assignedEmployee && f.assignedEmployee !== 'Not Assigned') {\r\n        // For now, consider all pending KYC as overdue if assigned\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n    const employeesWithLargeQueues = (employees || []).filter(emp => {\r\n      const pendingCount = emp.pendingKyc || 0;\r\n      return pendingCount > 5; // Large queue if more than 5 pending\r\n    });\r\n\r\n    console.log('Admin Todo list calculated from real data:');\r\n    console.log('- Unassigned Farmers:', unassignedFarmers.length);\r\n    console.log('- Overdue KYC:', overdueKYC.length);\r\n    console.log('- Employees with Large Queues:', employeesWithLargeQueues.length);\r\n\r\n    return {\r\n      unassignedFarmers,\r\n      overdueKYC,\r\n      employeesWithLargeQueues\r\n    };\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n  };\r\n\r\n  const toggleUserDropdown = () => {\r\n    setShowUserDropdown(!showUserDropdown);\r\n  };\r\n\r\n  const handleChangePassword = () => {\r\n    // Navigate to change password page\r\n    window.location.href = '/change-password';\r\n  };\r\n\r\n  const handleViewFarmer = (farmer) => {\r\n    setSelectedFarmerData(farmer);\r\n    setShowFarmerDetails(true);\r\n  };\r\n\r\n  const handleCloseFarmerDetails = () => {\r\n    setShowFarmerDetails(false);\r\n    setSelectedFarmerData(null);\r\n  };\r\n\r\n  const handleViewEmployee = (employee) => {\r\n    setSelectedEmployeeData(employee);\r\n    setShowEmployeeDetails(true);\r\n  };\r\n\r\n  const handleCloseEmployeeDetails = () => {\r\n    setShowEmployeeDetails(false);\r\n    setSelectedEmployeeData(null);\r\n  };\r\n\r\n  const handleUpdateEmployee = (updatedData) => {\r\n    setEmployees(prev => prev.map(emp => \r\n      emp.id === updatedData.id ? updatedData : emp\r\n    ));\r\n    setShowEmployeeDetails(false);\r\n    setSelectedEmployeeData(null);\r\n  };\r\n\r\n  const handleKYCDocumentUpload = (farmer) => {\r\n    setSelectedFarmerForKYC(farmer);\r\n    setShowKYCDocumentUpload(true);\r\n  };\r\n\r\n  const handleCloseKYCDocumentUpload = () => {\r\n    setShowKYCDocumentUpload(false);\r\n    setSelectedFarmerForKYC(null);\r\n  };\r\n\r\n  const handleKYCApprove = (farmerId, documents) => {\r\n    setFarmers(prev => prev.map(farmer => \r\n      farmer.id === farmerId \r\n        ? { ...farmer, kycStatus: 'APPROVED' }\r\n        : farmer\r\n    ));\r\n    setShowKYCDocumentUpload(false);\r\n    setSelectedFarmerForKYC(null);\r\n  };\r\n\r\n  const handleKYCReject = (farmerId, reason, documents) => {\r\n    setFarmers(prev => prev.map(farmer => \r\n      farmer.id === farmerId \r\n        ? { ...farmer, kycStatus: 'REJECTED' }\r\n        : farmer\r\n    ));\r\n    setShowKYCDocumentUpload(false);\r\n    setSelectedFarmerForKYC(null);\r\n  };\r\n\r\n  const handleKYCReferBack = (farmerId, reason, documents) => {\r\n    setFarmers(prev => prev.map(farmer => \r\n      farmer.id === farmerId \r\n        ? { ...farmer, kycStatus: 'REFER_BACK' }\r\n        : farmer\r\n    ));\r\n    setShowKYCDocumentUpload(false);\r\n    setSelectedFarmerForKYC(null);\r\n  };\r\n\r\n  const handleEditFarmer = (farmer) => {\r\n    setEditingFarmer(farmer);\r\n    setShowFarmerForm(true);\r\n  };\r\n\r\n  const handleEditEmployee = (employee) => {\r\n    setEditingEmployee(employee);\r\n    setShowEmployeeForm(true);\r\n  };\r\n\r\n  const handleAssignFarmers = async (assignments) => {\r\n    try {\r\n      // Extract farmer IDs and employee ID from assignments\r\n      const farmerIds = assignments.map(a => a.farmerId);\r\n      const employeeId = assignments[0]?.employeeId;\r\n      \r\n      if (!employeeId || farmerIds.length === 0) {\r\n        alert('Please select an employee and at least one farmer');\r\n        return;\r\n      }\r\n      \r\n      // Try bulk assign first, then fallback to individual assignments\r\n      try {\r\n        // Call admin API to bulk assign farmers\r\n        await adminAPI.bulkAssignFarmers(farmerIds, employeeId);\r\n      } catch (bulkError) {\r\n        console.log('Bulk assign failed, trying individual assignments...');\r\n        // Fallback to individual assignments\r\n        for (const farmerId of farmerIds) {\r\n          try {\r\n            await adminAPI.assignFarmer(farmerId, employeeId);\r\n          } catch (individualError) {\r\n            console.error(`Failed to assign farmer ${farmerId}:`, individualError);\r\n          }\r\n        }\r\n      }\r\n      \r\n      // Update local state for each assignment\r\n      setFarmers(prev => prev.map(farmer => {\r\n        const assignment = assignments.find(a => a.farmerId === farmer.id);\r\n        if (assignment) {\r\n          return {\r\n            ...farmer,\r\n            assignmentStatus: 'ASSIGNED',\r\n            assignedEmployee: assignment.employeeName,\r\n            assignedDate: new Date().toISOString().split('T')[0]\r\n          };\r\n        }\r\n        return farmer;\r\n      }));\r\n      \r\n      setShowAssignmentModal(false);\r\n      alert('Farmers assigned successfully!');\r\n    } catch (error) {\r\n      console.error('Error assigning farmers:', error);\r\n      alert('Failed to assign farmers');\r\n    }\r\n  };\r\n\r\n    const renderOverview = () => {\r\n    const stats = getStats();\r\n\r\n    return (\r\n      <div className=\"overview-section\">\r\n        <div className=\"overview-header\">\r\n          <h2 className=\"overview-title\">Admin Dashboard Overview</h2>\r\n          <p className=\"overview-description\">\r\n            Manage farmers, employees, and assignments efficiently.\r\n          </p>\r\n        </div>\r\n\r\n        {/* Stats Cards */}\r\n        <div className=\"stats-grid\">\r\n          <StatsCard\r\n            title=\"FARMERS\"\r\n            value={stats.totalFarmers}\r\n            change=\"+12.4%\"\r\n            changeType=\"positive\"\r\n            icon=\"👥\"\r\n          />\r\n          <StatsCard\r\n            title=\"EMPLOYEES\"\r\n            value={stats.totalEmployees}\r\n            change=\"-3.0%\"\r\n            changeType=\"negative\"\r\n            icon=\"👨‍💼\"\r\n          />\r\n          <StatsCard\r\n            title=\"FPO\"\r\n            value=\"0\"\r\n            change=\"+0.0%\"\r\n            changeType=\"neutral\"\r\n            icon=\"🏢\"\r\n          />\r\n        </div>\r\n\r\n        {/* Recent Activities Section */}\r\n        <div className=\"bottom-sections\">\r\n          <div className=\"section-card\">\r\n            <div className=\"section-header\">\r\n              <h3>Recent Activities</h3>\r\n              <button className=\"section-link\" onClick={() => console.log('View All clicked')}>View All</button>\r\n            </div>\r\n            <div className=\"activities-list\">\r\n              <div className=\"activity-item\">\r\n                <div className=\"activity-content\">\r\n                  <div className=\"activity-text\">\r\n                    <span className=\"activity-dot success\"></span>\r\n                    Farmer profile updated\r\n                  </div>\r\n                  <div className=\"activity-time\">20m ago</div>\r\n                  <button className=\"activity-badge success\">SUCCESS</button>\r\n                </div>\r\n              </div>\r\n              <div className=\"activity-item\">\r\n                <div className=\"activity-content\">\r\n                  <div className=\"activity-text\">\r\n                    <span className=\"activity-dot error\"></span>\r\n                    Employee profile updated\r\n                  </div>\r\n                  <div className=\"activity-time\">10m ago</div>\r\n                  <button className=\"activity-badge success\">SUCCESS</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Quick Actions Section */}\r\n          <div className=\"section-card\">\r\n            <div className=\"section-header\">\r\n              <h3>Quick Actions</h3>\r\n            </div>\r\n            <div className=\"quick-actions-grid\">\r\n              <button className=\"quick-action-btn primary\">\r\n                <i className=\"fas fa-users\"></i>\r\n                View Users\r\n              </button>\r\n              <button className=\"quick-action-btn secondary\">\r\n                <i className=\"fas fa-tractor\"></i>\r\n                View Farmers\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n    const renderFarmers = () => {\r\n    const filteredFarmers = getFilteredFarmers();\r\n\r\n    return (\r\n      <div className=\"overview-section\">\r\n        {!showFarmerRegistration ? (\r\n          <>\r\n            <div className=\"overview-header\">\r\n              <h2 className=\"overview-title\">Farmer Management</h2>\r\n              <p className=\"overview-description\">\r\n                View and manage all farmer profiles with KYC status and assignments.\r\n              </p>\r\n              <div className=\"overview-actions\">\r\n                <button \r\n                  className=\"action-btn primary\"\r\n                  onClick={() => setShowFarmerRegistration(true)}\r\n                >\r\n                    Add Farmer\r\n                </button>\r\n                <button \r\n                  className=\"action-btn secondary\"\r\n                  onClick={() => setShowAssignmentModal(true)}\r\n                >\r\n                    Assign Farmers\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n            {/* Enhanced Filters */}\r\n            <div className=\"filters-section\">\r\n              <div className=\"filter-group\">\r\n                <label className=\"filter-label\">State</label>\r\n                <select \r\n                  value={filters.state} \r\n                  onChange={(e) => setFilters(prev => ({ ...prev, state: e.target.value }))}\r\n                  className=\"filter-select\"\r\n                >\r\n                  <option value=\"\">All States</option>\r\n                  <option value=\"Telangana\">Telangana</option>\r\n                  <option value=\"Andhrapradesh\">Andhrapradesh</option>\r\n                  <option value=\"Maharashtra\">Maharashtra</option>\r\n                  <option value=\"Gujarat\">Gujarat</option>\r\n                  <option value=\"Punjab\">Punjab</option>\r\n                  <option value=\"Uttar Pradesh\">Uttar Pradesh</option>\r\n                  <option value=\"Tamil Nadu\">Tamil Nadu</option>\r\n                </select>\r\n              </div>\r\n              \r\n              <div className=\"filter-group\">\r\n                <label className=\"filter-label\">District</label>\r\n                <select \r\n                  value={filters.district} \r\n                  onChange={(e) => setFilters(prev => ({ ...prev, district: e.target.value }))}\r\n                  className=\"filter-select\"\r\n                >\r\n                  <option value=\"\">All Districts</option>\r\n                  <option value=\"Karimnagar\">Karimnagar</option>\r\n                  <option value=\"rangareddy\">Rangareddy</option>\r\n                  <option value=\"kadapa\">Kadapa</option>\r\n                  <option value=\"Kadapa\">Kadapa</option>\r\n                  <option value=\"kadpaa\">Kadpaa</option>\r\n                  <option value=\"Kuppam\">Kuppam</option>\r\n                  <option value=\"Pune\">Pune</option>\r\n                  <option value=\"Ahmedabad\">Ahmedabad</option>\r\n                  <option value=\"Amritsar\">Amritsar</option>\r\n                  <option value=\"Lucknow\">Lucknow</option>\r\n                  <option value=\"Chennai\">Chennai</option>\r\n                </select>\r\n              </div>\r\n              \r\n              <div className=\"filter-group\">\r\n                <label className=\"filter-label\">KYC Status</label>\r\n                <select \r\n                  value={filters.kycStatus} \r\n                  onChange={(e) => setFilters(prev => ({ ...prev, kycStatus: e.target.value }))}\r\n                  className=\"filter-select\"\r\n                >\r\n                  <option value=\"\">All KYC Status</option>\r\n                  <option value=\"APPROVED\">Approved</option>\r\n                  <option value=\"PENDING\">Pending</option>\r\n                  <option value=\"NOT_STARTED\">Not Started</option>\r\n                  <option value=\"REFER_BACK\">Refer Back</option>\r\n                  <option value=\"REJECTED\">Rejected</option>\r\n                </select>\r\n              </div>\r\n              \r\n              <div className=\"filter-group\">\r\n                <label className=\"filter-label\">Assignment Status</label>\r\n                <select \r\n                  value={filters.assignmentStatus} \r\n                  onChange={(e) => setFilters(prev => ({ ...prev, assignmentStatus: e.target.value }))}\r\n                  className=\"filter-select\"\r\n                >\r\n                  <option value=\"\">All Assignment Status</option>\r\n                  <option value=\"ASSIGNED\">Assigned</option>\r\n                  <option value=\"UNASSIGNED\">Unassigned</option>\r\n                </select>\r\n              </div>\r\n              \r\n              <div className=\"filter-group\">\r\n                <label className=\"filter-label\">Assigned Employee</label>\r\n                <select \r\n                  value={filters.employeeFilter} \r\n                  onChange={(e) => setFilters(prev => ({ ...prev, employeeFilter: e.target.value }))}\r\n                  className=\"filter-select\"\r\n                >\r\n                  <option value=\"\">All Employees</option>\r\n                  {employees.map(emp => (\r\n                    <option key={emp.id} value={emp.name}>{emp.name}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              \r\n              <div className=\"filter-actions\">\r\n                <button \r\n                  className=\"filter-btn-clear\"\r\n                  onClick={() => setFilters({\r\n                    state: '',\r\n                    district: '',\r\n                    region: '',\r\n                    kycStatus: '',\r\n                    assignmentStatus: '',\r\n                    employeeFilter: ''\r\n                  })}\r\n                >\r\n                  <i className=\"fas fa-times\"></i>\r\n                  Clear Filters\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Farmers Table */}\r\n      <DataTable\r\n              data={filteredFarmers}\r\n        columns={[\r\n          { key: 'name', label: 'Name' },\r\n                { key: 'contactNumber', label: 'Phone' },\r\n          { key: 'state', label: 'State' },\r\n          { key: 'district', label: 'District' },\r\n          { \r\n            key: 'kycStatus', \r\n            label: 'KYC Status',\r\n            render: (value) => {\r\n              if (!value) return 'NOT_STARTED';\r\n              if (value === 'PENDING' || value === 'pending') return 'PENDING';\r\n              if (value === 'APPROVED' || value === 'approved') return 'APPROVED';\r\n              if (value === 'REFER_BACK' || value === 'refer_back') return 'REFER_BACK';\r\n              if (value === 'REJECTED' || value === 'rejected') return 'REJECTED';\r\n              if (value === 'NOT_STARTED' || value === 'not_started') return 'NOT_STARTED';\r\n              return value.toUpperCase();\r\n            }\r\n          },\r\n          { key: 'assignedEmployee', label: 'Assigned Employee' }\r\n        ]}\r\n        customActions={[\r\n          {\r\n                  label: 'View',\r\n                  className: 'action-btn-small info',\r\n                  onClick: handleViewFarmer\r\n                },\r\n                {\r\n                  label: 'Edit',\r\n                  className: 'action-btn-small primary',\r\n                  onClick: handleEditFarmer\r\n                },\r\n                {\r\n                  label: 'KYC',\r\n                  className: 'action-btn-small warning',\r\n            onClick: handleKYCDocumentUpload\r\n          }\r\n        ]}\r\n      />\r\n          </>\r\n        ) : (\r\n          <div className=\"farmer-registration-section\">\r\n            <div className=\"section-header\">\r\n              <div>\r\n                <h2 className=\"section-title\">Add New Farmer</h2>\r\n                <p className=\"section-description\">\r\n                  Fill in the farmer details to create a new farmer account.\r\n                </p>\r\n              </div>\r\n              <div className=\"section-actions\">\r\n                <button \r\n                  className=\"action-btn-small secondary\"\r\n                  onClick={() => setShowFarmerRegistration(false)}\r\n                >\r\n                  <i className=\"fas fa-arrow-left\"></i>\r\n                  Back to Farmers\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <FarmerRegistrationForm \r\n              isInDashboard={true}\r\n              onClose={() => setShowFarmerRegistration(false)}\r\n              onSubmit={async (farmerData) => {\r\n                try {\r\n                  const newFarmer = await farmersAPI.createFarmer(farmerData);\r\n                  setFarmers(prev => [...prev, newFarmer]);\r\n                  alert('Farmer created successfully!');\r\n                  setShowFarmerRegistration(false);\r\n                } catch (error) {\r\n                  console.error('Error creating farmer:', error);\r\n                  alert('Failed to create farmer. Please try again.');\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n    </div>\r\n  );\r\n  };\r\n\r\n  const renderRegistration = () => {\r\n    const filteredRegistrations = getFilteredRegistrations();\r\n\r\n    return (\r\n      <div className=\"registration-section\">\r\n        <div className=\"section-header\">\r\n          <div>\r\n            <h2 className=\"section-title\">Registration Management</h2>\r\n            <p className=\"section-description\">\r\n              Review and manage user registration requests.\r\n            </p>\r\n          </div>\r\n          <div className=\"section-actions\">\r\n            <button \r\n              className=\"action-btn-small primary\"\r\n              onClick={() => {\r\n                console.log('🔄 Manually refreshing data...');\r\n                fetchData();\r\n              }}\r\n            >\r\n              <i className=\"fas fa-sync-alt\"></i>\r\n              Refresh Data\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Filters */}\r\n      <div className=\"filters-section\">\r\n          <div className=\"filter-group\">\r\n          <select \r\n              className=\"filter-select\"\r\n              value={registrationFilters.role}\r\n              onChange={(e) => setRegistrationFilters(prev => ({ ...prev, role: e.target.value }))}\r\n            >\r\n              <option value=\"\">All Roles</option>\r\n              <option value=\"FARMER\">Farmer</option>\r\n              <option value=\"EMPLOYEE\">Employee</option>\r\n              <option value=\"ADMIN\">Admin</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"filter-group\">\r\n            <select \r\n              className=\"filter-select\"\r\n              value={registrationFilters.status}\r\n              onChange={(e) => setRegistrationFilters(prev => ({ ...prev, status: e.target.value }))}\r\n            >\r\n              <option value=\"\">All Status</option>\r\n              <option value=\"PENDING\">Pending</option>\r\n              <option value=\"APPROVED\">Approved</option>\r\n              <option value=\"REJECTED\">Rejected</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n        {/* Registration Table */}\r\n      <DataTable\r\n          data={filteredRegistrations}\r\n        columns={[\r\n          { key: 'name', label: 'Name' },\r\n          { key: 'email', label: 'Email' },\r\n            { key: 'phoneNumber', label: 'Phone' },\r\n            { key: 'role', label: 'Role' },\r\n            { key: 'status', label: 'Status' }\r\n          ]}\r\n          customActions={[\r\n            {\r\n              label: 'View',\r\n              className: 'action-btn-small info',\r\n              onClick: handleViewRegistration\r\n            },\r\n            {\r\n              label: 'Approve',\r\n              className: 'action-btn-small success',\r\n              onClick: (registration) => handleApproveRegistration(registration.id),\r\n              show: (registration) => registration.status === 'PENDING'\r\n            },\r\n            {\r\n              label: 'Reject',\r\n              className: 'action-btn-small danger',\r\n              onClick: (registration) => handleRejectRegistration(registration.id),\r\n              show: (registration) => registration.status === 'PENDING'\r\n            }\r\n          ]}\r\n      />\r\n    </div>\r\n  );\r\n  };\r\n\r\n  const renderEmployees = () => {\r\n    const filteredEmployees = getFilteredEmployees();\r\n\r\n  return (\r\n      <div className=\"overview-section\">\r\n        {!showEmployeeRegistration ? (\r\n          <>\r\n            <div className=\"overview-header\">\r\n              <h2 className=\"overview-title\">Employee Management</h2>\r\n              <p className=\"overview-description\">\r\n                View and manage employee profiles with KYC assignment statistics.\r\n              </p>\r\n              <div className=\"overview-actions\">\r\n                <button \r\n                  className=\"action-btn primary\"\r\n                  onClick={() => setShowEmployeeRegistration(true)}\r\n                >\r\n                  Add Employee\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n            {/* Employee Stats */}\r\n            <div className=\"employee-stats\">\r\n              <h3>Employee KYC Progress</h3>\r\n              <div className=\"employee-stats-grid\">\r\n                {employees.map(employee => {\r\n                  // Calculate real stats from farmers data\r\n                  const assignedFarmers = (farmers || []).filter(f => \r\n                    f.assignedEmployee === employee.name || \r\n                    f.assignedEmployee === employee.contactNumber ||\r\n                    f.assignedEmployeeId === employee.id\r\n                  );\r\n                  \r\n                  const approvedCount = assignedFarmers.filter(f => \r\n                    f.kycStatus === 'APPROVED' || f.kycStatus === 'approved'\r\n                  ).length;\r\n                  \r\n                  const pendingCount = assignedFarmers.filter(f => \r\n                    f.kycStatus === 'PENDING' || f.kycStatus === 'pending' || \r\n                    f.kycStatus === 'NOT_STARTED' || f.kycStatus === 'not_started'\r\n                  ).length;\r\n                  \r\n                  const referBackCount = assignedFarmers.filter(f => \r\n                    f.kycStatus === 'REFER_BACK' || f.kycStatus === 'refer_back'\r\n                  ).length;\r\n                  \r\n                  const rejectedCount = assignedFarmers.filter(f => \r\n                    f.kycStatus === 'REJECTED' || f.kycStatus === 'rejected'\r\n                  ).length;\r\n                  \r\n                  return (\r\n                    <div key={employee.id} className=\"employee-stat-card\">\r\n                      <div className=\"employee-info\">\r\n                        <h4>{employee.name}</h4>\r\n                        <p>{employee.designation} - {employee.district}</p>\r\n                      </div>\r\n                      <div className=\"employee-kyc-stats\">\r\n                        <div className=\"kyc-stat\">\r\n                          <span className=\"stat-number\">{assignedFarmers.length}</span>\r\n                          <span className=\"stat-label\">Total Assigned</span>\r\n                        </div>\r\n                        <div className=\"kyc-stat\">\r\n                          <span className=\"stat-number approved\">{approvedCount}</span>\r\n                          <span className=\"stat-label\">Approved</span>\r\n                        </div>\r\n                        <div className=\"kyc-stat\">\r\n                          <span className=\"stat-number pending\">{pendingCount}</span>\r\n                          <span className=\"stat-label\">Pending</span>\r\n                        </div>\r\n                        <div className=\"kyc-stat\">\r\n                          <span className=\"stat-number refer-back\">{referBackCount}</span>\r\n                          <span className=\"stat-label\">Refer Back</span>\r\n                        </div>\r\n                        <div className=\"kyc-stat\">\r\n                          <span className=\"stat-number rejected\">{rejectedCount}</span>\r\n                          <span className=\"stat-label\">Rejected</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </div>\r\n          </div>\r\n\r\n            {/* Employees Table */}\r\n          <DataTable\r\n            data={filteredEmployees.map(employee => {\r\n              // Calculate real stats from farmers data\r\n              const assignedFarmers = (farmers || []).filter(f => \r\n                f.assignedEmployee === employee.name || \r\n                f.assignedEmployee === employee.contactNumber ||\r\n                f.assignedEmployeeId === employee.id\r\n              );\r\n              \r\n              const approvedCount = assignedFarmers.filter(f => \r\n                f.kycStatus === 'APPROVED' || f.kycStatus === 'approved'\r\n              ).length;\r\n              \r\n              const pendingCount = assignedFarmers.filter(f => \r\n                f.kycStatus === 'PENDING' || f.kycStatus === 'pending' || \r\n                f.kycStatus === 'NOT_STARTED' || f.kycStatus === 'not_started'\r\n              ).length;\r\n              \r\n              return {\r\n                ...employee,\r\n                totalAssigned: assignedFarmers.length,\r\n                approvedKyc: approvedCount,\r\n                pendingKyc: pendingCount\r\n              };\r\n            })}\r\n            columns={[\r\n              { key: 'name', label: 'Name' },\r\n              { key: 'contactNumber', label: 'Contact' },\r\n              { key: 'email', label: 'Email' },\r\n              { key: 'state', label: 'State' },\r\n              { key: 'district', label: 'District' },\r\n              { key: 'totalAssigned', label: 'Assigned Farmers' },\r\n              { key: 'approvedKyc', label: 'Approved KYC' },\r\n              { key: 'pendingKyc', label: 'Pending KYC' }\r\n            ]}\r\n            customActions={[\r\n              {\r\n                label: 'View',\r\n                className: 'action-btn-small info',\r\n                onClick: handleViewEmployee\r\n              },\r\n              {\r\n                label: 'Edit',\r\n                className: 'action-btn-small primary',\r\n                onClick: handleEditEmployee\r\n              }\r\n            ]}\r\n          />\r\n          </>\r\n        ) : (\r\n          <div className=\"employee-registration-section\">\r\n            <div className=\"section-header\">\r\n              <div>\r\n                <h2 className=\"section-title\">Add New Employee</h2>\r\n                <p className=\"section-description\">\r\n                  Fill in the employee details to create a new employee account.\r\n                </p>\r\n              </div>\r\n              <div className=\"section-actions\">\r\n        <button \r\n                  className=\"action-btn-small secondary\"\r\n                  onClick={() => setShowEmployeeRegistration(false)}\r\n        >\r\n                  <i className=\"fas fa-arrow-left\"></i>\r\n                  Back to Employees\r\n        </button>\r\n              </div>\r\n            </div>\r\n\r\n            <EmployeeRegistrationForm \r\n              isInDashboard={true}\r\n              onClose={() => setShowEmployeeRegistration(false)}\r\n              onSubmit={async (employeeData) => {\r\n                try {\r\n                  const newEmployee = await employeesAPI.createEmployee(employeeData);\r\n                  setEmployees(prev => [...prev, newEmployee]);\r\n                  alert('Employee created successfully!');\r\n                  setShowEmployeeRegistration(false);\r\n                } catch (error) {\r\n                  console.error('Error creating employee:', error);\r\n                  alert('Failed to create employee. Please try again.');\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderKYCOverview = () => {\r\n    const stats = getStats();\r\n    \r\n    return (\r\n      <div className=\"overview-section\">\r\n        <div className=\"overview-header\">\r\n          <h2 className=\"overview-title\">KYC Overview</h2>\r\n          <p className=\"overview-description\">\r\n            Comprehensive view of KYC status across all farmers and employees.\r\n          </p>\r\n        </div>\r\n\r\n        {/* KYC Status Breakdown */}\r\n        <div className=\"kyc-breakdown\">\r\n          <h3>KYC Status Breakdown</h3>\r\n          <div className=\"kyc-stats-grid\">\r\n            <div className=\"kyc-stat-card approved\">\r\n              <span className=\"kyc-stat-number\">{stats.approvedKYC}</span>\r\n              <span className=\"kyc-stat-label\">Approved</span>\r\n            </div>\r\n            <div className=\"kyc-stat-card pending\">\r\n              <span className=\"kyc-stat-number\">{stats.pendingKYC}</span>\r\n              <span className=\"kyc-stat-label\">Pending</span>\r\n            </div>\r\n            <div className=\"kyc-stat-card refer-back\">\r\n              <span className=\"kyc-stat-number\">{stats.referBackKYC}</span>\r\n              <span className=\"kyc-stat-label\">Refer Back</span>\r\n            </div>\r\n            <div className=\"kyc-stat-card rejected\">\r\n              <span className=\"kyc-stat-number\">{stats.rejectedKYC}</span>\r\n              <span className=\"kyc-stat-label\">Rejected</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Employee KYC Progress */}\r\n        <div className=\"employee-stats\">\r\n          <h3>Employee KYC Progress</h3>\r\n          <div className=\"employee-stats-grid\">\r\n            {employees.map(employee => {\r\n              // Calculate real stats from farmers data\r\n              const assignedFarmers = (farmers || []).filter(f => \r\n                f.assignedEmployee === employee.name || \r\n                f.assignedEmployee === employee.contactNumber ||\r\n                f.assignedEmployeeId === employee.id\r\n              );\r\n              \r\n              const approvedCount = assignedFarmers.filter(f => \r\n                f.kycStatus === 'APPROVED' || f.kycStatus === 'approved'\r\n              ).length;\r\n              \r\n              const pendingCount = assignedFarmers.filter(f => \r\n                f.kycStatus === 'PENDING' || f.kycStatus === 'pending' || \r\n                f.kycStatus === 'NOT_STARTED' || f.kycStatus === 'not_started'\r\n              ).length;\r\n              \r\n              const referBackCount = assignedFarmers.filter(f => \r\n                f.kycStatus === 'REFER_BACK' || f.kycStatus === 'refer_back'\r\n              ).length;\r\n              \r\n              const rejectedCount = assignedFarmers.filter(f => \r\n                f.kycStatus === 'REJECTED' || f.kycStatus === 'rejected'\r\n              ).length;\r\n              \r\n              return (\r\n                <div key={employee.id} className=\"employee-stat-card\">\r\n                  <div className=\"employee-info\">\r\n                    <h4>{employee.name}</h4>\r\n                    <p>{employee.designation} - {employee.district}</p>\r\n                  </div>\r\n                  <div className=\"employee-kyc-stats\">\r\n                    <div className=\"kyc-stat\">\r\n                      <span className=\"stat-number\">{assignedFarmers.length}</span>\r\n                      <span className=\"stat-label\">Total Assigned</span>\r\n                    </div>\r\n                    <div className=\"kyc-stat\">\r\n                      <span className=\"stat-number approved\">{approvedCount}</span>\r\n                      <span className=\"stat-label\">Approved</span>\r\n                    </div>\r\n                    <div className=\"kyc-stat\">\r\n                      <span className=\"stat-number pending\">{pendingCount}</span>\r\n                      <span className=\"stat-label\">Pending</span>\r\n                    </div>\r\n                    <div className=\"kyc-stat\">\r\n                      <span className=\"stat-number refer-back\">{referBackCount}</span>\r\n                      <span className=\"stat-label\">Refer Back</span>\r\n                    </div>\r\n                    <div className=\"kyc-stat\">\r\n                      <span className=\"stat-number rejected\">{rejectedCount}</span>\r\n                      <span className=\"stat-label\">Rejected</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        {/* KYC Progress Overview */}\r\n        <div className=\"kyc-progress-section\">\r\n          <h3>KYC Progress Overview</h3>\r\n          <div className=\"kyc-progress-grid\">\r\n            <div className=\"progress-card approved\">\r\n              <div className=\"progress-circle\">\r\n                <div className=\"progress-number\">{stats.approvedKYC}</div>\r\n              </div>\r\n              <div className=\"progress-label\">Approved KYC</div>\r\n            </div>\r\n            <div className=\"progress-card pending\">\r\n              <div className=\"progress-circle\">\r\n                <div className=\"progress-number\">{stats.pendingKYC}</div>\r\n              </div>\r\n              <div className=\"progress-label\">Pending KYC</div>\r\n            </div>\r\n            <div className=\"progress-card refer-back\">\r\n              <div className=\"progress-circle\">\r\n                <div className=\"progress-number\">{stats.referBackKYC}</div>\r\n              </div>\r\n              <div className=\"progress-label\">Refer Back</div>\r\n            </div>\r\n            <div className=\"progress-card rejected\">\r\n              <div className=\"progress-circle\">\r\n                <div className=\"progress-number\">{stats.rejectedKYC}</div>\r\n              </div>\r\n              <div className=\"progress-label\">Rejected KYC</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      {/* Top Bar with Date, Theme and Profile */}\r\n      <div className=\"top-bar\">\r\n        <div className=\"top-bar-left\">\r\n          <div className=\"logo-container\">\r\n            <div className=\"logo-icon\" aria-hidden=\"true\">\r\n              <svg width=\"88\" height=\"48\" viewBox=\"0 0 88 64\" xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" aria-label=\"Sunflowers logo\">\r\n                <g stroke=\"#15803d\" strokeWidth=\"2\" fill=\"none\" strokeLinecap=\"round\">\r\n                  <path d=\"M18 38 C18 46 18 54 18 62\"/>\r\n                  <path d=\"M44 38 C44 46 44 54 44 62\"/>\r\n                  <path d=\"M70 38 C70 46 70 54 70 62\"/>\r\n                  <path d=\"M56 38 C56 47 57 56 57 62\" opacity=\"0.6\"/>\r\n                  <path d=\"M18 48 C22 46 24 44 26 42\"/>\r\n                  <path d=\"M44 48 C40 46 38 44 36 42\"/>\r\n                  <path d=\"M70 48 C66 46 64 44 62 42\"/>\r\n                </g>\r\n                <g>\r\n                  <g transform=\"translate(18 26)\">\r\n                    <ellipse cx=\"0\" cy=\"0\" rx=\"5\" ry=\"10\" fill=\"#FACC15\" stroke=\"#D97706\" strokeWidth=\"2\"/>\r\n                    <ellipse cx=\"0\" cy=\"0\" rx=\"5\" ry=\"10\" fill=\"#FACC15\" stroke=\"#D97706\" strokeWidth=\"2\" transform=\"rotate(30)\"/>\r\n                    <ellipse cx=\"0\" cy=\"0\" rx=\"5\" ry=\"10\" fill=\"#FACC15\" stroke=\"#D97706\" strokeWidth=\"2\" transform=\"rotate(60)\"/>\r\n                    <ellipse cx=\"0\" cy=\"0\" rx=\"5\" ry=\"10\" fill=\"#FACC15\" stroke=\"#D97706\" strokeWidth=\"2\" transform=\"rotate(90)\"/>\r\n                    <ellipse cx=\"0\" cy=\"0\" rx=\"5\" ry=\"10\" fill=\"#FACC15\" stroke=\"#D97706\" strokeWidth=\"2\" transform=\"rotate(120)\"/>\r\n                    <ellipse cx=\"0\" cy=\"0\" rx=\"5\" ry=\"10\" fill=\"#FACC15\" stroke=\"#D97706\" strokeWidth=\"2\" transform=\"rotate(150)\"/>\r\n                    <circle cx=\"0\" cy=\"0\" r=\"8\" fill=\"#8B5E3C\" stroke=\"#A16207\" strokeWidth=\"2\"/>\r\n                  </g>\r\n                  <g transform=\"translate(44 24)\">\r\n                    <ellipse cx=\"0\" cy=\"0\" rx=\"5\" ry=\"10\" fill=\"#FACC15\" stroke=\"#D97706\" strokeWidth=\"2\"/>\r\n                    <ellipse cx=\"0\" cy=\"0\" rx=\"5\" ry=\"10\" fill=\"#FACC15\" stroke=\"#D97706\" strokeWidth=\"2\" transform=\"rotate(45)\"/>\r\n                    <ellipse cx=\"0\" cy=\"0\" rx=\"5\" ry=\"10\" fill=\"#FACC15\" stroke=\"#D97706\" strokeWidth=\"2\" transform=\"rotate(90)\"/>\r\n                    <ellipse cx=\"0\" cy=\"0\" rx=\"5\" ry=\"10\" fill=\"#FACC15\" stroke=\"#D97706\" strokeWidth=\"2\" transform=\"rotate(135)\"/>\r\n                    <circle cx=\"0\" cy=\"0\" r=\"8\" fill=\"#8B5E3C\" stroke=\"#A16207\" strokeWidth=\"2\"/>\r\n                  </g>\r\n                  <g transform=\"translate(70 26)\">\r\n                    <ellipse cx=\"0\" cy=\"0\" rx=\"5\" ry=\"10\" fill=\"#FACC15\" stroke=\"#D97706\" strokeWidth=\"2\"/>\r\n                    <ellipse cx=\"0\" cy=\"0\" rx=\"5\" ry=\"10\" fill=\"#FACC15\" stroke=\"#D97706\" strokeWidth=\"2\" transform=\"rotate(30)\"/>\r\n                    <ellipse cx=\"0\" cy=\"0\" rx=\"5\" ry=\"10\" fill=\"#FACC15\" stroke=\"#D97706\" strokeWidth=\"2\" transform=\"rotate(60)\"/>\r\n                    <ellipse cx=\"0\" cy=\"0\" rx=\"5\" ry=\"10\" fill=\"#FACC15\" stroke=\"#D97706\" strokeWidth=\"2\" transform=\"rotate(90)\"/>\r\n                    <ellipse cx=\"0\" cy=\"0\" rx=\"5\" ry=\"10\" fill=\"#FACC15\" stroke=\"#D97706\" strokeWidth=\"2\" transform=\"rotate(120)\"/>\r\n                    <circle cx=\"0\" cy=\"0\" r=\"8\" fill=\"#8B5E3C\" stroke=\"#A16207\" strokeWidth=\"2\"/>\r\n                  </g>\r\n                  <g transform=\"translate(56 20) scale(0.8)\">\r\n                    <ellipse cx=\"0\" cy=\"0\" rx=\"5\" ry=\"10\" fill=\"#FACC15\" stroke=\"#D97706\" strokeWidth=\"2\"/>\r\n                    <ellipse cx=\"0\" cy=\"0\" rx=\"5\" ry=\"10\" fill=\"#FACC15\" stroke=\"#D97706\" strokeWidth=\"2\" transform=\"rotate(30)\"/>\r\n                    <ellipse cx=\"0\" cy=\"0\" rx=\"5\" ry=\"10\" fill=\"#FACC15\" stroke=\"#D97706\" strokeWidth=\"2\" transform=\"rotate(60)\"/>\r\n                    <ellipse cx=\"0\" cy=\"0\" rx=\"5\" ry=\"10\" fill=\"#FACC15\" stroke=\"#D97706\" strokeWidth=\"2\" transform=\"rotate(90)\"/>\r\n                    <circle cx=\"0\" cy=\"0\" r=\"8\" fill=\"#8B5E3C\" stroke=\"#A16207\" strokeWidth=\"2\"/>\r\n                  </g>\r\n                </g>\r\n              </svg>\r\n            </div>\r\n            <div className=\"logo-text\">\r\n              <h1 className=\"logo-title\">DATE Digital</h1>\r\n              <p className=\"logo-subtitle\">Agristack Platform</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"date-display\">\r\n            {new Date().toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' })}\r\n          </div>\r\n        </div>\r\n        <div className=\"top-bar-right\">\r\n          <ThemeDropdown />\r\n          <UserProfileDropdown />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Sidebar */}\r\n      <aside className=\"dashboard-sidebar\">\r\n        <div className=\"sidebar-header\">\r\n          <div className=\"logo\">\r\n            <div className=\"logo-text\">DATE</div>\r\n            <div className=\"logo-subtitle\">Admin</div>\r\n          </div>\r\n        </div>\r\n        <nav className=\"sidebar-nav\">\r\n          <button className={`nav-item ${activeTab === 'overview' ? 'active' : ''}`} onClick={() => setActiveTab('overview')}>📊 Overview</button>\r\n          <button className={`nav-item ${activeTab === 'kyc-overview' ? 'active' : ''}`} onClick={() => setActiveTab('kyc-overview')}>🪪 KYC Overview</button>\r\n          <button className={`nav-item ${activeTab === 'farmers' ? 'active' : ''}`} onClick={() => setActiveTab('farmers')}>👨‍🌾 Farmers</button>\r\n          <button className={`nav-item ${activeTab === 'employees' ? 'active' : ''}`} onClick={() => setActiveTab('employees')}>👥 Employees</button>\r\n          <button className={`nav-item ${activeTab === 'registration' ? 'active' : ''}`} onClick={() => setActiveTab('registration')}>📝 Registrations</button>\r\n        </nav>\r\n      </aside>\r\n\r\n      {/* Main */}\r\n      <main className=\"dashboard-main\">\r\n        <div className=\"dashboard-content\">\r\n          <header className=\"dashboard-header\">\r\n            <div className=\"header-center\">\r\n              <div className=\"welcome-message\">\r\n                <h2 className=\"greeting\">{getGreeting()}, {user?.name || user?.email || 'Admin'}! 🎋</h2>\r\n                <p className=\"welcome-text\">Welcome to DATE Digital Agristack - Manage farmers, employees and registrations efficiently.</p>\r\n              </div>\r\n            </div>\r\n          </header>\r\n\r\n          {/* Render forms with priority over tab content */}\r\n          {showFarmerForm ? (\r\n            <div className=\"dashboard-form-container\">\r\n              <FarmerForm \r\n                isInDashboard={true}\r\n                editData={editingFarmer}\r\n                onClose={() => {\r\n                  setShowFarmerForm(false);\r\n                  setEditingFarmer(null);\r\n                }}\r\n                onSubmit={async (farmerData) => {\r\n                  try {\r\n                    if (editingFarmer) {\r\n                      const updatedFarmer = await farmersAPI.updateFarmer(editingFarmer.id, farmerData);\r\n                      setFarmers(prev => prev.map(farmer => \r\n                        farmer.id === editingFarmer.id ? updatedFarmer : farmer\r\n                      ));\r\n                      alert('Farmer updated successfully!');\r\n                    } else {\r\n                      const newFarmer = await farmersAPI.createFarmer(farmerData);\r\n                      setFarmers(prev => [...prev, newFarmer]);\r\n                      alert('Farmer created successfully!');\r\n                    }\r\n                    setShowFarmerForm(false);\r\n                    setEditingFarmer(null);\r\n                  } catch (error) {\r\n                    console.error('Error saving farmer:', error);\r\n                    alert('Failed to save farmer. Please try again.');\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n          ) : showEmployeeForm ? (\r\n            <div className=\"dashboard-form-container\">\r\n              <EmployeeRegistrationForm \r\n                isInDashboard={true}\r\n                editData={editingEmployee}\r\n                onClose={() => {\r\n                  setShowEmployeeForm(false);\r\n                  setEditingEmployee(null);\r\n                }}\r\n                onSubmit={async (employeeData) => {\r\n                  try {\r\n                    if (editingEmployee) {\r\n                      const updatedEmployee = await employeesAPI.updateEmployee(editingEmployee.id, employeeData);\r\n                      setEmployees(prev => prev.map(employee => \r\n                        employee.id === editingEmployee.id ? updatedEmployee : employee\r\n                      ));\r\n                      alert('Employee updated successfully!');\r\n                    } else {\r\n                      const newEmployee = await employeesAPI.createEmployee(employeeData);\r\n                      setEmployees(prev => [...prev, newEmployee]);\r\n                      alert('Employee created successfully!');\r\n                    }\r\n                    setShowEmployeeForm(false);\r\n                    setEditingEmployee(null);\r\n                  } catch (error) {\r\n                    console.error('Error saving employee:', error);\r\n                    alert('Failed to save employee. Please try again.');\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {activeTab === 'overview' && renderOverview()}\r\n              {activeTab === 'kyc-overview' && renderKYCOverview()}\r\n              {activeTab === 'farmers' && renderFarmers()}\r\n              {activeTab === 'employees' && renderEmployees()}\r\n              {activeTab === 'registration' && renderRegistration()}\r\n            </>\r\n          )}\r\n        </div>\r\n      </main>\r\n\r\n      {/* Modals */}\r\n\r\n      {showAssignmentModal && (\r\n        <AssignmentModal \r\n          farmers={farmers.filter(f => {\r\n            // Check if farmer is unassigned based on backend data structure\r\n            return !f.assignedEmployee || \r\n                   f.assignedEmployee === 'Not Assigned' || \r\n                   f.assignedEmployee === null ||\r\n                   f.assignedEmployee === undefined ||\r\n                   f.assignedEmployee === '';\r\n          })}\r\n          employees={employees}\r\n          onClose={() => setShowAssignmentModal(false)}\r\n          onAssign={handleAssignFarmers}\r\n        />\r\n      )}\r\n\r\n      {showFarmerDetails && selectedFarmerData && (\r\n                   <ViewFarmerRegistrationDetails\r\n                     farmerData={selectedFarmerData}\r\n                     onClose={handleCloseFarmerDetails}\r\n                   />\r\n                 )}\r\n\r\n      {showEmployeeDetails && selectedEmployeeData && (\r\n                   <ViewEditEmployeeDetails\r\n          employee={selectedEmployeeData}\r\n                     onClose={handleCloseEmployeeDetails}\r\n                     onUpdate={handleUpdateEmployee}\r\n                   />\r\n                 )}\r\n\r\n      {showKYCDocumentUpload && selectedFarmerForKYC && (\r\n                   <KYCDocumentUpload\r\n                     farmer={selectedFarmerForKYC}\r\n                     onClose={handleCloseKYCDocumentUpload}\r\n                     onApprove={handleKYCApprove}\r\n                     onReject={handleKYCReject}\r\n                     onReferBack={handleKYCReferBack}\r\n                   />\r\n                 )}\r\n\r\n      {showRegistrationDetailModal && selectedRegistrationForDetail && (\r\n        <RegistrationDetailModal\r\n          registration={selectedRegistrationForDetail}\r\n          onClose={handleCloseRegistrationDetailModal}\r\n          onUpdate={handleRegistrationUpdate}\r\n          onApprove={handleApproveRegistration}\r\n          onReject={handleRejectRegistration}\r\n                   />\r\n                 )}\r\n               </div>\r\n             );\r\n};\r\n\r\nexport default AdminDashboard; ","import React from 'react';\r\n\r\nconst StatsCard = ({ title, value, icon, color = 'blue' }) => {\r\n  return (\r\n    <div className={`stats-card-component ${color}`}>\r\n      <div className=\"stats-card-icon\">{icon}</div>\r\n      <div className=\"stats-card-content\">\r\n        <h3 className=\"stats-card-title\">{title}</h3>\r\n        <p className=\"stats-card-value\">{value}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatsCard; "],"names":["AdminDashboard","user","logout","useAuth","activeTab","setActiveTab","useState","farmers","setFarmers","employees","setEmployees","selectedEmployee","setSelectedEmployee","showAssignmentModal","setShowAssignmentModal","showFarmerForm","setShowFarmerForm","showEmployeeForm","setShowEmployeeForm","showFarmerDetails","setShowFarmerDetails","selectedFarmerData","setSelectedFarmerData","showEmployeeDetails","setShowEmployeeDetails","selectedEmployeeData","setSelectedEmployeeData","showKYCDocumentUpload","setShowKYCDocumentUpload","selectedFarmerForKYC","setSelectedFarmerForKYC","editingFarmer","setEditingFarmer","editingEmployee","setEditingEmployee","registrations","setRegistrations","showRegistrationModal","setShowRegistrationModal","selectedRegistration","setSelectedRegistration","showRegistrationDetailModal","setShowRegistrationDetailModal","selectedRegistrationForDetail","setSelectedRegistrationForDetail","showEmployeeRegistration","setShowEmployeeRegistration","showFarmerRegistration","setShowFarmerRegistration","registrationFilters","setRegistrationFilters","role","status","filters","setFilters","state","district","region","kycStatus","assignmentStatus","employeeFilter","showUserDropdown","setShowUserDropdown","useEffect","fetchData","handleKYCUpdate","event","console","log","detail","setTimeout","window","addEventListener","removeEventListener","async","farmersData","employeesData","registrationsData","Promise","all","adminAPI","getFarmersWithKyc","getEmployeesWithStats","superAdminAPI","getRegistrationList","farmersCount","length","employeesCount","registrationsCount","error","fallbackFarmers","fallbackEmployees","fallbackRegistrations","getAllFarmers","getAllEmployees","fallbackError","handleViewRegistration","registration","handleApproveRegistration","approveUser","registrationId","prev","map","reg","id","alert","handleRejectRegistration","rejectUser","getStats","totalFarmers","totalEmployees","unassignedFarmers","filter","f","assignedEmployee","pendingKYC","approvedKYC","referBackKYC","rejectedKYC","handleViewFarmer","farmer","handleViewEmployee","employee","handleKYCDocumentUpload","handleEditFarmer","handleEditEmployee","_jsxs","className","children","_jsx","width","height","viewBox","xmlns","stroke","strokeWidth","fill","strokeLinecap","d","opacity","transform","cx","cy","rx","ry","r","Date","toLocaleDateString","weekday","year","month","day","ThemeDropdown","UserProfileDropdown","onClick","getGreeting","hour","getHours","name","email","FarmerForm","isInDashboard","editData","onClose","onSubmit","updatedFarmer","farmersAPI","updateFarmer","farmerData","newFarmer","createFarmer","EmployeeRegistrationForm","updatedEmployee","employeesAPI","updateEmployee","employeeData","newEmployee","createEmployee","_Fragment","renderOverview","stats","StatsCard","title","value","change","changeType","icon","renderKYCOverview","assignedFarmers","contactNumber","assignedEmployeeId","approvedCount","pendingCount","referBackCount","rejectedCount","designation","renderFarmers","filteredFarmers","matchesState","matchesDistrict","matchesKycStatus","matchesEmployee","FarmerRegistrationForm","onChange","e","target","emp","DataTable","data","columns","key","label","render","toUpperCase","customActions","renderEmployees","filteredEmployees","totalAssigned","approvedKyc","pendingKyc","renderRegistration","filteredRegistrations","getFilteredRegistrations","filtered","roleMatch","statusMatch","show","AssignmentModal","undefined","onAssign","_assignments$","farmerIds","assignments","a","farmerId","employeeId","bulkAssignFarmers","bulkError","assignFarmer","individualError","assignment","find","employeeName","assignedDate","toISOString","split","ViewFarmerRegistrationDetails","handleCloseFarmerDetails","ViewEditEmployeeDetails","handleCloseEmployeeDetails","onUpdate","updatedData","KYCDocumentUpload","handleCloseKYCDocumentUpload","onApprove","handleKYCApprove","documents","onReject","handleKYCReject","reason","onReferBack","handleKYCReferBack","RegistrationDetailModal","handleCloseRegistrationDetailModal","handleRegistrationUpdate","_ref","color"],"sourceRoot":""}