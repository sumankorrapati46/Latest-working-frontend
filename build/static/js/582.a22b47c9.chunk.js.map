{"version":3,"file":"static/js/582.a22b47c9.chunk.js","mappings":"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","sources":["components/SearchFilter.jsx","hooks/useDebounce.js","components/DeleteModal.jsx","pages/SuperAdminDashboard.jsx","hooks/useApi.js","components/NotificationToast.jsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { useDebounce } from '../hooks/useDebounce';\r\nimport '../styles/SearchFilter.css';\r\n\r\nconst SearchFilter = ({ \r\n  onSearch, \r\n  onFilter, \r\n  filters = [], \r\n  placeholder = \"Search...\",\r\n  showAdvancedFilters = false,\r\n  className = \"\"\r\n}) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [activeFilters, setActiveFilters] = useState({});\r\n  const [showFilters, setShowFilters] = useState(false);\r\n  \r\n  // Debounce search term to avoid excessive API calls\r\n  const debouncedSearchTerm = useDebounce(searchTerm, 300);\r\n\r\n  // Handle search input change\r\n  const handleSearchChange = useCallback((e) => {\r\n    setSearchTerm(e.target.value);\r\n  }, []);\r\n\r\n  // Handle filter change\r\n  const handleFilterChange = useCallback((filterKey, value) => {\r\n    const newFilters = {\r\n      ...activeFilters,\r\n      [filterKey]: value\r\n    };\r\n    \r\n    // Remove empty filters\r\n    if (!value || value === '') {\r\n      delete newFilters[filterKey];\r\n    }\r\n    \r\n    setActiveFilters(newFilters);\r\n    onFilter?.(newFilters);\r\n  }, [activeFilters, onFilter]);\r\n\r\n  // Handle search submission\r\n  const handleSearchSubmit = useCallback((e) => {\r\n    e.preventDefault();\r\n    onSearch?.(debouncedSearchTerm);\r\n  }, [debouncedSearchTerm, onSearch]);\r\n\r\n  // Clear all filters\r\n  const clearFilters = useCallback(() => {\r\n    setActiveFilters({});\r\n    setSearchTerm('');\r\n    onFilter?.({});\r\n    onSearch?.('');\r\n  }, [onFilter, onSearch]);\r\n\r\n  // Get active filters count\r\n  const activeFiltersCount = Object.keys(activeFilters).length + (searchTerm ? 1 : 0);\r\n\r\n  return (\r\n    <div className={`search-filter-container ${className}`}>\r\n      {/* Search Bar */}\r\n      <form onSubmit={handleSearchSubmit} className=\"search-form\">\r\n        <div className=\"search-input-group\">\r\n          <input\r\n            type=\"text\"\r\n            value={searchTerm}\r\n            onChange={handleSearchChange}\r\n            placeholder={placeholder}\r\n            className=\"search-input\"\r\n          />\r\n          <button type=\"submit\" className=\"search-button\">\r\n            🔍\r\n          </button>\r\n        </div>\r\n        \r\n        {/* Filter Toggle */}\r\n        {filters.length > 0 && (\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => setShowFilters(!showFilters)}\r\n            className={`filter-toggle ${showFilters ? 'active' : ''}`}\r\n          >\r\n            Filters {activeFiltersCount > 0 && `(${activeFiltersCount})`}\r\n          </button>\r\n        )}\r\n      </form>\r\n\r\n      {/* Advanced Filters */}\r\n      {showFilters && filters.length > 0 && (\r\n        <div className=\"filters-panel\">\r\n          <div className=\"filters-grid\">\r\n            {filters.map((filter) => (\r\n              <div key={filter.key} className=\"filter-group\">\r\n                <label className=\"filter-label\">{filter.label}</label>\r\n                {filter.type === 'select' ? (\r\n                  <select\r\n                    value={activeFilters[filter.key] || ''}\r\n                    onChange={(e) => handleFilterChange(filter.key, e.target.value)}\r\n                    className=\"filter-select\"\r\n                  >\r\n                    <option value=\"\">All {filter.label}</option>\r\n                    {filter.options?.map((option) => (\r\n                      <option key={option.value} value={option.value}>\r\n                        {option.label}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                ) : filter.type === 'date' ? (\r\n                  <input\r\n                    type=\"date\"\r\n                    value={activeFilters[filter.key] || ''}\r\n                    onChange={(e) => handleFilterChange(filter.key, e.target.value)}\r\n                    className=\"filter-input\"\r\n                  />\r\n                ) : (\r\n                  <input\r\n                    type=\"text\"\r\n                    value={activeFilters[filter.key] || ''}\r\n                    onChange={(e) => handleFilterChange(filter.key, e.target.value)}\r\n                    placeholder={`Filter by ${filter.label}`}\r\n                    className=\"filter-input\"\r\n                  />\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          \r\n          {/* Filter Actions */}\r\n          <div className=\"filter-actions\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={clearFilters}\r\n              className=\"clear-filters-btn\"\r\n            >\r\n              Clear All\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchFilter; ","import { useState, useEffect } from 'react';\r\n\r\nexport const useDebounce = (value, delay) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n}; ","import React, { useState } from 'react';\nimport '../styles/DeleteModal.css';\n\nconst DeleteModal = ({ item, type, onClose, onConfirm }) => {\n  const [reason, setReason] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    setLoading(true);\n\n    try {\n      await onConfirm({ ...item, reason });\n      onClose();\n    } catch (error) {\n      console.error('Error deleting item:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getItemName = () => {\n    if (type === 'farmer') {\n      return item?.name || 'Farmer';\n    } else if (type === 'employee') {\n      return item?.name || 'Employee';\n    }\n    return 'Item';\n  };\n\n  const getItemDetails = () => {\n    if (type === 'farmer') {\n      return {\n        name: item?.name,\n        phone: item?.phone,\n        state: item?.state,\n        district: item?.district\n      };\n    } else if (type === 'employee') {\n      return {\n        name: item?.name,\n        email: item?.email,\n        phone: item?.phone,\n        designation: item?.designation\n      };\n    }\n    return {};\n  };\n\n  const details = getItemDetails();\n\n  return (\n    <div className=\"delete-modal-overlay\">\n      <div className=\"delete-modal-content\">\n        <div className=\"delete-modal-header\">\n          <h2>Confirm Delete</h2>\n          <button className=\"delete-modal-close-btn\" onClick={onClose}>×</button>\n        </div>\n\n        <div className=\"delete-modal-warning\">\n          <div className=\"delete-modal-warning-icon\">⚠️</div>\n          <h3>Are you sure you want to delete this {type}?</h3>\n          <p>This action cannot be undone.</p>\n        </div>\n\n        <div className=\"delete-modal-item-details\">\n          <h4>{getItemName()} Details:</h4>\n          <div className=\"delete-modal-details-grid\">\n            {Object.entries(details).map(([key, value]) => (\n              <div key={key} className=\"delete-modal-detail-item\">\n                <span className=\"delete-modal-label\">{key.charAt(0).toUpperCase() + key.slice(1)}:</span>\n                <span className=\"delete-modal-value\">{value || 'N/A'}</span>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <form onSubmit={handleSubmit} className=\"delete-modal-form\">\n          <div className=\"delete-modal-form-group\">\n            <label htmlFor=\"reason\">Reason for Deletion (Optional)</label>\n            <textarea\n              id=\"reason\"\n              value={reason}\n              onChange={(e) => setReason(e.target.value)}\n              placeholder=\"Enter reason for deletion...\"\n              rows=\"3\"\n            />\n          </div>\n\n          <div className=\"delete-modal-form-actions\">\n            <button \n              type=\"button\" \n              className=\"delete-modal-btn-secondary\" \n              onClick={onClose}\n            >\n              Cancel\n            </button>\n            <button \n              type=\"submit\" \n              className=\"delete-modal-btn-danger\"\n              disabled={loading}\n            >\n              {loading ? 'Deleting...' : `Delete ${getItemName()}`}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default DeleteModal; ","import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useTheme } from '../contexts/ThemeContext';\nimport { useApi } from '../hooks/useApi';\nimport { farmersAPI, employeesAPI, superAdminAPI, adminAPI } from '../api/apiService';\nimport DataTable from '../components/DataTable';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport NotificationToast from '../components/NotificationToast';\nimport SearchFilter from '../components/SearchFilter';\nimport ThemeDropdown from '../components/ThemeDropdown';\n\nimport RegistrationApprovalModal from '../components/RegistrationApprovalModal';\nimport RegistrationDetailModal from '../components/RegistrationDetailModal';\nimport ViewFarmerRegistrationDetails from '../components/ViewFarmerRegistrationDetails';\nimport AssignmentModal from '../components/AssignmentModal';\nimport FarmerForm from '../components/FarmerForm';\nimport ViewEditEmployeeDetails from '../components/ViewEditEmployeeDetails';\nimport EmployeeRegistrationForm from '../components/EmployeeRegistrationForm';\nimport KYCDocumentUpload from '../components/KYCDocumentUpload';\nimport DeleteModal from '../components/DeleteModal';\nimport UserProfileDropdown from '../components/UserProfileDropdown';\nimport ChangePasswordModal from '../components/ChangePasswordModal';\nimport ChangeUserIdModal from '../components/ChangeUserIdModal';\n\nimport '../styles/SuperAdminDashboard.css';\nimport '../styles/Themes.css';\n\nconst SuperAdminDashboard = () => {\n  const navigate = useNavigate();\n  const { user, logout } = useAuth();\n  const { currentTheme, getThemeLabel } = useTheme();\n  const { loading, error, executeApiCall } = useApi();\n  \n  // State management\n  const [farmers, setFarmers] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [registrations, setRegistrations] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [activeFilters, setActiveFilters] = useState({});\n  const [activeTab, setActiveTab] = useState('overview');\n  const [showUserDropdown, setShowUserDropdown] = useState(false);\n\n  // Modal states\n  const [showRegistrationApprovalModal, setShowRegistrationApprovalModal] = useState(false);\n  const [selectedRegistration, setSelectedRegistration] = useState(null);\n  const [showRegistrationDetailModal, setShowRegistrationDetailModal] = useState(false);\n  const [selectedRegistrationForDetail, setSelectedRegistrationForDetail] = useState(null);\n  const [showAssignmentModal, setShowAssignmentModal] = useState(false);\n  const [showFarmerForm, setShowFarmerForm] = useState(false);\n  const [editingFarmer, setEditingFarmer] = useState(null);\n  const [showEmployeeForm, setShowEmployeeForm] = useState(false);\n  const [editingEmployee, setEditingEmployee] = useState(null);\n  const [showEmployeeDetails, setShowEmployeeDetails] = useState(false);\n  const [selectedEmployeeData, setSelectedEmployeeData] = useState(null);\n  const [showKYCModal, setShowKYCModal] = useState(false);\n  const [selectedFarmerForKYC, setSelectedFarmerForKYC] = useState(null);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [itemToDelete, setItemToDelete] = useState(null);\n\n  // View component states\n  const [showViewFarmer, setShowViewFarmer] = useState(false);\n  const [showViewEmployee, setShowViewEmployee] = useState(false);\n  const [selectedFarmerForView, setSelectedFarmerForView] = useState(null);\n  const [selectedEmployeeForView, setSelectedEmployeeForView] = useState(null);\n  const [showFarmerDetails, setShowFarmerDetails] = useState(false);\n  const [selectedFarmerData, setSelectedFarmerData] = useState(null);\n\n  // Change Password state\n  const [showChangePassword, setShowChangePassword] = useState(false);\n  const [showChangeUserId, setShowChangeUserId] = useState(false);\n\n  // Notification state\n  const [notification, setNotification] = useState(null);\n\n  // Memoized greeting function\n  const getGreeting = useCallback(() => {\n    const hour = new Date().getHours();\n    if (hour >= 5 && hour < 12) return 'Good Morning';\n    if (hour >= 12 && hour < 17) return 'Good Afternoon';\n    if (hour >= 17 && hour < 21) return 'Good Evening';\n    return 'Good Night';\n  }, []);\n\n  // Memoized stats calculation\n  const stats = useMemo(() => {\n    const totalFarmers = farmers.length;\n    const totalEmployees = employees.length;\n    const totalRegistrations = registrations.length;\n    \n    const pendingRegistrations = registrations.filter(r => r.status === 'PENDING').length;\n    const approvedRegistrations = registrations.filter(r => r.status === 'APPROVED').length;\n    const rejectedRegistrations = registrations.filter(r => r.status === 'REJECTED').length;\n    \n    const farmersWithKYC = farmers.filter(f => f.kycStatus === 'APPROVED').length;\n    const farmersPendingKYC = farmers.filter(f => f.kycStatus === 'PENDING').length;\n    \n    return {\n      totalFarmers,\n      totalEmployees,\n      totalRegistrations,\n      pendingRegistrations,\n      approvedRegistrations,\n      rejectedRegistrations,\n      farmersWithKYC,\n      farmersPendingKYC\n    };\n  }, [farmers, employees, registrations]);\n\n  // Debug function to check authentication state\n  const debugAuthState = useCallback(() => {\n    const token = localStorage.getItem('token');\n    const user = localStorage.getItem('user');\n    \n    console.log('🔍 Debug Auth State:');\n    console.log('Token exists:', !!token);\n    console.log('User exists:', !!user);\n    console.log('Token length:', token?.length || 0);\n    console.log('User data:', user ? JSON.parse(user) : null);\n    console.log('AuthContext user:', user);\n    console.log('AuthContext isAuthenticated:', user?.isAuthenticated);\n    \n    if (token) {\n      try {\n        // Try to decode JWT token (without verification)\n        const payload = JSON.parse(atob(token.split('.')[1]));\n        console.log('JWT Payload:', payload);\n        console.log('JWT Expiration:', new Date(payload.exp * 1000));\n        console.log('JWT Issued at:', new Date(payload.iat * 1000));\n      } catch (e) {\n        console.log('JWT decode failed:', e.message);\n      }\n    }\n  }, [user]);\n\n  // Debug function to clear all tokens\n  const clearAllTokens = useCallback(() => {\n    console.log('🧹 Clearing all tokens and user data...');\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    sessionStorage.clear();\n    alert('All tokens cleared! Please log in again.');\n    window.location.href = '/login';\n  }, []);\n\n  // Test backend connectivity\n  const testBackendConnectivity = useCallback(async () => {\n    console.log('🧪 Testing Backend Connectivity...');\n    \n    try {\n      // Test 1: Simple ping to backend\n      console.log('🌐 Testing basic connectivity to http://localhost:8080...');\n      const pingResponse = await fetch('http://localhost:8080', { \n        method: 'GET',\n        mode: 'cors'\n      });\n      console.log('✅ Backend ping response:', pingResponse.status, pingResponse.statusText);\n      \n      // Test 2: Simple health check\n      console.log('🏥 Testing health endpoint...');\n      const healthResponse = await fetch('http://localhost:8080/api/health', {\n        method: 'GET',\n        mode: 'cors'\n      });\n      console.log('✅ Health check response:', healthResponse.status, healthResponse.statusText);\n      \n      // Test 3: Test without token\n      console.log('🔍 Testing registration endpoint without token...');\n      const noTokenResponse = await fetch('http://localhost:8080/api/super-admin/registration-list', {\n        method: 'GET',\n        mode: 'cors'\n      });\n      console.log('🔍 No token response:', noTokenResponse.status, noTokenResponse.statusText);\n      \n      // Test 4: Test with token\n      const token = localStorage.getItem('token');\n      if (token) {\n        console.log('🔐 Testing registration endpoint with token...');\n        const withTokenResponse = await fetch('http://localhost:8080/api/super-admin/registration-list', {\n          method: 'GET',\n          mode: 'cors',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log('🔐 With token response:', withTokenResponse.status, withTokenResponse.statusText);\n        \n        if (withTokenResponse.ok) {\n          const data = await withTokenResponse.json();\n          console.log('📊 Registration data:', data);\n        } else {\n          const errorText = await withTokenResponse.text();\n          console.log('❌ Error response:', errorText);\n        }\n      } else {\n        console.log('⚠️ No token found in localStorage');\n      }\n      \n    } catch (error) {\n      console.error('❌ Backend connectivity test failed:', error);\n      console.error('❌ Error details:', error.message);\n      \n      // Check if it's a CORS error\n      if (error.message.includes('CORS')) {\n        console.error('🚫 CORS error detected - backend might not be configured for CORS');\n      }\n      \n      // Check if it's a network error\n      if (error.message.includes('Failed to fetch')) {\n        console.error('🌐 Network error - backend might not be running or accessible');\n      }\n    }\n  }, []);\n\n  // Fetch data function\n  const fetchData = useCallback(async () => {\n    try {\n      console.log('🔄 Fetching dashboard data from backend...');\n      const [farmersData, employeesData, registrationsData] = await Promise.all([\n        executeApiCall(() => adminAPI.getFarmersWithKyc(), { cacheKey: 'farmers' }),\n        executeApiCall(() => employeesAPI.getAllEmployees(), { cacheKey: 'employees' }),\n        executeApiCall(() => superAdminAPI.getRegistrationList(), { cacheKey: 'registrations' })\n      ]);\n\n      // Debug: Log the actual farmer data structure\n      if (farmersData && farmersData.length > 0) {\n        console.log('🔍 Farmer data structure sample:', {\n          firstFarmer: farmersData[0],\n          availableFields: Object.keys(farmersData[0]),\n          totalFarmers: farmersData.length\n        });\n      }\n\n      setFarmers(farmersData || []);\n      setEmployees(employeesData || []);\n      setRegistrations(registrationsData || []);\n      \n      console.log('✅ Dashboard data loaded successfully:', {\n        farmers: farmersData?.length || 0,\n        employees: employeesData?.length || 0,\n        registrations: registrationsData?.length || 0\n      });\n      \n    } catch (error) {\n      console.error('❌ Error fetching dashboard data:', error);\n      setNotification({\n        type: 'error',\n        message: 'Failed to load dashboard data. Please try again.'\n      });\n    }\n  }, [executeApiCall]);\n\n  // Load data on mount\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  // Listen for KYC status updates\n  useEffect(() => {\n    const handleKYCUpdate = () => {\n      setTimeout(() => {\n        fetchData();\n        setNotification({\n          type: 'success',\n          message: 'Data refreshed after KYC update'\n        });\n      }, 2000);\n    };\n    \n    window.addEventListener('kycStatusUpdated', handleKYCUpdate);\n    return () => window.removeEventListener('kycStatusUpdated', handleKYCUpdate);\n  }, [fetchData]);\n\n  // Handle search\n  const handleSearch = useCallback((term) => {\n    setSearchTerm(term);\n  }, []);\n\n  // Handle filters\n  const handleFilters = useCallback((filters) => {\n    setActiveFilters(filters);\n  }, []);\n\n  // Filter data based on search and filters\n  const filteredData = useMemo(() => {\n    let filtered = {\n      farmers: [...farmers],\n      employees: [...employees],\n      registrations: [...registrations]\n    };\n\n    // Apply search\n    if (searchTerm) {\n      const searchLower = searchTerm.toLowerCase();\n      filtered.farmers = filtered.farmers.filter(f => \n        f.name?.toLowerCase().includes(searchLower) ||\n        f.email?.toLowerCase().includes(searchLower) ||\n        f.phoneNumber?.includes(searchTerm)\n      );\n      filtered.employees = filtered.employees.filter(e => \n        e.name?.toLowerCase().includes(searchLower) ||\n        e.email?.toLowerCase().includes(searchLower)\n      );\n      filtered.registrations = filtered.registrations.filter(r => \n        r.name?.toLowerCase().includes(searchLower) ||\n        r.email?.toLowerCase().includes(searchLower)\n      );\n    }\n\n    // Apply filters\n    Object.entries(activeFilters).forEach(([key, value]) => {\n      if (value) {\n        filtered.farmers = filtered.farmers.filter(f => f[key] === value);\n        filtered.employees = filtered.employees.filter(e => e[key] === value);\n        filtered.registrations = filtered.registrations.filter(r => r[key] === value);\n      }\n    });\n\n    return filtered;\n  }, [farmers, employees, registrations, searchTerm, activeFilters]);\n\n  // Handle actions\n  const handleAssignFarmers = useCallback(async (assignmentsOrFarmerIds, maybeEmployeeId) => {\n    try {\n      // Support both legacy signature (farmerIds, employeeId) and new payload from AssignmentModal\n      if (Array.isArray(assignmentsOrFarmerIds) && typeof assignmentsOrFarmerIds[0] === 'object') {\n        // assignments array from modal; map to API payload if needed\n        const farmerIds = assignmentsOrFarmerIds.map(a => a.farmerId);\n        const employeeId = assignmentsOrFarmerIds[0]?.employeeId || maybeEmployeeId;\n        await executeApiCall(() => superAdminAPI.bulkAssignFarmers(farmerIds, employeeId));\n      } else {\n        await executeApiCall(() => superAdminAPI.bulkAssignFarmers(assignmentsOrFarmerIds, maybeEmployeeId));\n      }\n      setNotification({\n        type: 'success',\n        message: 'Farmers assigned successfully'\n      });\n      fetchData();\n    } catch (error) {\n      setNotification({\n        type: 'error',\n        message: 'Failed to assign farmers'\n      });\n    }\n  }, [executeApiCall, fetchData]);\n\n  const handleDeleteItem = useCallback(async () => {\n    try {\n      const { item, type } = itemToDelete;\n      if (type === 'farmer') {\n        await executeApiCall(() => farmersAPI.deleteFarmer(item.id));\n        setFarmers(prev => prev.filter(f => f.id !== item.id));\n      } else if (type === 'employee') {\n        await executeApiCall(() => employeesAPI.deleteEmployee(item.id));\n        setEmployees(prev => prev.filter(e => e.id !== item.id));\n      }\n      \n      setNotification({\n        type: 'success',\n        message: `${type} deleted successfully`\n      });\n    } catch (error) {\n      setNotification({\n        type: 'error',\n        message: 'Failed to delete item'\n      });\n    } finally {\n      setShowDeleteModal(false);\n      setItemToDelete(null);\n    }\n  }, [itemToDelete, executeApiCall]);\n\n  // Table columns configuration\n  const farmerColumns = useMemo(() => [\n    { \n      key: 'name', \n      label: 'NAME', \n      className: 'col-name',\n      render: (value, row) => {\n        const name = value || row.fullName || row.userName || row.firstName || row.lastName || row.farmerName;\n        if (name) return name;\n        if (row.firstName || row.lastName) {\n          return `${row.firstName || ''} ${row.lastName || ''}`.trim();\n        }\n        return 'N/A';\n      }\n    },\n    { \n      key: 'phoneNumber', \n      label: 'PHONE', \n      className: 'col-phone',\n      render: (value, row) => {\n        const phone = value || row.phone || row.mobile || row.contactNumber || row.mobileNumber;\n        return phone || 'N/A';\n      }\n    },\n    { \n      key: 'state', \n      label: 'STATE', \n      className: 'col-state',\n      render: (value, row) => {\n        const state = value || row.stateName || row.state_name || row.farmerState;\n        return state || 'N/A';\n      }\n    },\n    { \n      key: 'district', \n      label: 'DISTRICT', \n      className: 'col-district',\n      render: (value, row) => {\n        const district = value || row.districtName || row.district_name || row.farmerDistrict;\n        return district || 'N/A';\n      }\n    },\n    { \n      key: 'kycStatus', \n      label: 'KYC STATUS', \n      type: 'status', \n      className: 'col-kyc-status',\n      render: (value, row) => {\n        const status = value || row.kyc_status || row.kycStatus || row.status;\n        return status || 'N/A';\n      }\n    },\n    { \n      key: 'assignedEmployee', \n      label: 'ASSIGNED EMPLOYEE', \n      className: 'col-assigned-employee',\n      render: (value, row) => {\n        if (typeof value === 'string') return value;\n        if (value && typeof value === 'object') {\n          return value.name || value.employeeName || value.assignedEmployeeName || 'Assigned';\n        }\n        const employee = row.assignedEmployeeName || row.employeeName || row.assignedTo || row.assignedEmployee;\n        if (employee && typeof employee === 'object') {\n          return employee.name || employee.employeeName || 'Assigned';\n        }\n        return employee || 'Unassigned';\n      }\n    }\n  ], []);\n\n  const employeeColumns = useMemo(() => [\n    { \n      key: 'name', \n      label: 'Name', \n      className: 'col-name',\n      render: (value, row) => {\n        const name = value || row.fullName || row.userName || row.firstName || row.lastName || row.employeeName;\n        if (name) return name;\n        \n        if (row.firstName || row.lastName) {\n          return `${row.firstName || ''} ${row.lastName || ''}`.trim();\n        }\n        \n        return 'N/A';\n      }\n    },\n    { \n      key: 'email', \n      label: 'Email', \n      className: 'col-email',\n      render: (value, row) => {\n        const email = value || row.emailAddress || row.userEmail || row.employeeEmail;\n        return email || 'N/A';\n      }\n    },\n    { \n      key: 'designation', \n      label: 'Designation', \n      className: 'col-role',\n      render: (value, row) => {\n        const designation = value || row.role || row.userRole || row.employeeRole || row.designation;\n        return designation || 'N/A';\n      }\n    },\n    { \n      key: 'assignedFarmers', \n      label: 'Assigned Farmers', \n      className: 'col-status',\n      render: (value, row) => {\n        if (typeof value === 'number') return value.toString();\n        if (Array.isArray(value)) return value.length.toString();\n        return value || '0';\n      }\n    },\n    { \n      key: 'status', \n      label: 'Status', \n      type: 'status', \n      className: 'col-status',\n      render: (value, row) => {\n        const status = value || row.employeeStatus || row.status || row.userStatus;\n        return status || 'N/A';\n      }\n    }\n  ], []);\n\n  const registrationColumns = useMemo(() => [\n    { \n      key: 'name', \n      label: 'Name', \n      className: 'col-name',\n      render: (value, row) => value || row.fullName || row.userName || row.firstName || 'N/A'\n    },\n    { \n      key: 'email', \n      label: 'Email', \n      className: 'col-email',\n      render: (value, row) => value || row.emailAddress || row.userEmail || 'N/A'\n    },\n    { \n      key: 'role', \n      label: 'Role', \n      className: 'col-role',\n      render: (value, row) => (value || row.userRole || row.type || row.userType || 'N/A')\n    },\n    { \n      key: 'status', \n      label: 'Status', \n      className: 'col-status',\n      type: 'status',\n      render: (value, row) => value || row.registrationStatus || row.approvalStatus || row.kycStatus || 'N/A'\n    },\n    { \n      key: 'registrationDate', \n      label: 'Registration Date', \n      className: 'col-date',\n      render: (value, row) => {\n        const v = value || row.createdAt || row.created_on || row.createdDate;\n        if (!v) return 'N/A';\n        try {\n          // handle ISO with time\n          const d = new Date(v);\n          if (!isNaN(d.getTime())) return d.toISOString().slice(0, 10);\n          // already a date-like string\n          return String(v).slice(0, 10);\n        } catch {\n          return String(v);\n        }\n      }\n    }\n  ], []);\n\n  // Filter options\n  const filterOptions = useMemo(() => [\n    {\n      key: 'state',\n      label: 'STATE',\n      type: 'select',\n      options: [\n        { value: 'all', label: 'All States' },\n        { value: 'Telangana', label: 'Telangana' },\n        { value: 'Andhrapradesh', label: 'Andhrapradesh' }\n      ]\n    },\n    {\n      key: 'district',\n      label: 'DISTRICT',\n      type: 'select',\n      options: [\n        { value: 'all', label: 'All Districts' },\n        { value: 'Karimnagar', label: 'Karimnagar' },\n        { value: 'rangareddy', label: 'Rangareddy' },\n        { value: 'kadapa', label: 'Kadapa' },\n        { value: 'Kadapa', label: 'Kadapa' },\n        { value: 'kadpaa', label: 'Kadpaa' }\n      ]\n    },\n    {\n      key: 'kycStatus',\n      label: 'KYC STATUS',\n      type: 'select',\n      options: [\n        { value: 'all', label: 'All KYC Status' },\n        { value: 'NOT_STARTED', label: 'Not Started' },\n        { value: 'PENDING', label: 'Pending' },\n        { value: 'APPROVED', label: 'Approved' },\n        { value: 'REJECTED', label: 'Rejected' }\n      ]\n    },\n    {\n      key: 'assignmentStatus',\n      label: 'ASSIGNMENT STATUS',\n      type: 'select',\n      options: [\n        { value: 'all', label: 'All Assignment Status' },\n        { value: 'ASSIGNED', label: 'Assigned' },\n        { value: 'UNASSIGNED', label: 'Unassigned' }\n      ]\n    },\n    {\n      key: 'assignedEmployee',\n      label: 'ASSIGNED EMPLOYEE',\n      type: 'select',\n      options: [\n        { value: 'all', label: 'All Employees' },\n        { value: 'dinakar lankipalli', label: 'dinakar lankipalli' },\n        { value: 'harish reddy', label: 'harish reddy' },\n        { value: 'karthik kumar', label: 'karthik kumar' }\n      ]\n    }\n  ], []);\n\n  if (loading && !farmers.length && !employees.length && !registrations.length) {\n    return <LoadingSpinner fullScreen text=\"Loading dashboard...\" />;\n  }\n\n  return (\n    <div className=\"dashboard\">\n      {/* Top Bar with Date and Theme */}\n      <div className=\"top-bar\">\n        <div className=\"top-bar-left\">\n          <div className=\"logo-container\">\n            <div className=\"logo-text\">\n              <h1 className=\"logo-title\"> DATE </h1>\n              <p className=\"logo-subtitle\">Digital Agristack Transaction Enterprises</p>\n            </div>\n          </div>\n          <div className=\"date-display\">\n            {new Date().toLocaleDateString('en-US', { \n              weekday: 'long',\n              year: 'numeric', \n              month: 'long', \n              day: 'numeric' \n            })}\n          </div>\n        </div>\n        <div className=\"top-bar-right\">\n          <ThemeDropdown />\n          <UserProfileDropdown \n            onShowChangePassword={() => setShowChangePassword(true)}\n            onShowChangeUserId={() => setShowChangeUserId(true)}\n          />\n        </div>\n      </div>\n      \n      {/* Main Content */}\n\n      {/* Sidebar */}\n      <aside className=\"dashboard-sidebar\">\n        <div className=\"sidebar-header\">\n          <div className=\"logo\">\n            <div className=\"logo-text\">Welcome !!!</div>\n            <div className=\"logo-subtitle\">Super Admin</div>\n          </div>\n        </div>\n        \n        <nav className=\"sidebar-nav\">\n          <button \n            className={`nav-item ${activeTab === 'overview' ? 'active' : ''}`}\n            onClick={() => setActiveTab('overview')}\n          >\n            📊 Overview\n          </button>\n          <button \n            className={`nav-item ${activeTab === 'farmers' ? 'active' : ''}`}\n            onClick={() => setActiveTab('farmers')}\n          >\n            👨‍🌾 Farmers\n          </button>\n          <button \n            className={`nav-item ${activeTab === 'employees' ? 'active' : ''}`}\n            onClick={() => setActiveTab('employees')}\n          >\n            👥 Employees\n          </button>\n          <button \n            className={`nav-item ${activeTab === 'registrations' ? 'active' : ''}`}\n            onClick={() => setActiveTab('registrations')}\n          >\n            📝 Registrations\n          </button>\n          <button \n            className=\"nav-item\"\n            onClick={() => navigate('/analytical-dashboard')}\n          >\n            📈 Dashboard\n          </button>\n        </nav>\n      </aside>\n\n      <main className=\"dashboard-main\">\n        <div className=\"dashboard-content\">\n          {/* Show greeting only on Overview tab and when not showing farmer details */}\n          {activeTab === 'overview' && !(\n            showFarmerDetails ||\n            showViewFarmer ||\n            showViewEmployee ||\n            showEmployeeDetails ||\n            showFarmerForm ||\n            showEmployeeForm ||\n            showRegistrationDetailModal ||\n            showAssignmentModal ||\n            showKYCModal ||\n            showDeleteModal\n          ) && (\n            <header className=\"dashboard-header\">\n              <div className=\"header-center\">\n                <div className=\"welcome-message\">\n                  <h2 className=\"greeting\">\n                    {getGreeting()}, {user?.name || user?.email || 'Super Admin'}! 🎋\n                  </h2>\n                  <p className=\"welcome-text\">\n                    Welcome to DATE Digital Agristack - Empowering your agricultural journey with data-driven insights.\n                  </p>\n                </div>\n              </div>\n            </header>\n          )}\n          {/* Render forms and views with priority over tab content */}\n          {showFarmerForm ? (\n            <div className=\"dashboard-form-container\">\n              <FarmerForm\n                isInDashboard={true}\n                farmer={editingFarmer}\n                onClose={() => {\n                  setShowFarmerForm(false);\n                  setEditingFarmer(null);\n                }}\n                onSave={(farmer) => {\n                  setNotification({\n                    type: 'success',\n                    message: editingFarmer ? 'Farmer updated successfully' : 'Farmer added successfully'\n                  });\n                  fetchData();\n                  setShowFarmerForm(false);\n                  setEditingFarmer(null);\n                }}\n              />\n            </div>\n          ) : showEmployeeForm ? (\n            <div className=\"dashboard-form-container\">\n              <EmployeeRegistrationForm\n                isInDashboard={true}\n                employee={editingEmployee}\n                onClose={() => {\n                  setShowEmployeeForm(false);\n                  setEditingEmployee(null);\n                }}\n                onSave={(employee) => {\n                  setNotification({\n                    type: 'success',\n                    message: editingEmployee ? 'Employee updated successfully' : 'Employee added successfully'\n                  });\n                  fetchData();\n                  setShowEmployeeForm(false);\n                  setEditingEmployee(null);\n                }}\n              />\n            </div>\n          ) : showFarmerDetails ? (\n            <div className=\"dashboard-form-container\">\n              {console.log('🔍 Rendering farmer details section, selectedFarmerData:', selectedFarmerData)}\n              <ViewFarmerRegistrationDetails\n                farmerData={selectedFarmerData}\n                onClose={() => {\n                  setShowFarmerDetails(false);\n                  setSelectedFarmerData(null);\n                }}\n                isInDashboard={true}\n                onFarmerSelect={(farmer) => setSelectedFarmerData(farmer)}\n              />\n            </div>\n          ) : showViewFarmer ? (\n            <div className=\"dashboard-form-container\">\n              <ViewFarmerRegistrationDetails\n                farmerData={selectedFarmerForView || farmers}\n                onClose={() => {\n                  if (selectedFarmerForView) {\n                    setSelectedFarmerForView(null);\n                  } else {\n                    setShowViewFarmer(false);\n                  }\n                }}\n                isInDashboard={true}\n                onFarmerSelect={(farmer) => setSelectedFarmerForView(farmer)}\n              />\n            </div>\n          ) : showViewEmployee ? (\n            <div className=\"dashboard-form-container\">\n              <ViewEditEmployeeDetails\n                employeeData={selectedEmployeeForView || employees}\n                onClose={() => {\n                  if (selectedEmployeeForView) {\n                    setSelectedEmployeeForView(null);\n                  } else {\n                    setShowViewEmployee(false);\n                  }\n                }}\n                onUpdate={(employee) => {\n                  setNotification({\n                    type: 'success',\n                    message: 'Employee updated successfully'\n                  });\n                  fetchData();\n                }}\n                isInDashboard={true}\n                onEmployeeSelect={(employee) => setSelectedEmployeeForView(employee)}\n              />\n            </div>\n          ) : showChangePassword ? (\n            <div className=\"dashboard-form-container\">\n              <ChangePasswordModal\n                isOpen={true}\n                onClose={() => setShowChangePassword(false)}\n                onSuccess={() => {\n                  setNotification({\n                    type: 'success',\n                    message: 'Password changed successfully!'\n                  });\n                  setShowChangePassword(false);\n                }}\n                isInDashboard={true}\n              />\n            </div>\n          ) : showChangeUserId ? (\n            <div className=\"dashboard-form-container\">\n              <ChangeUserIdModal\n                isOpen={true}\n                onClose={() => setShowChangeUserId(false)}\n                onSuccess={() => {\n                  setNotification({\n                    type: 'success',\n                    message: 'User ID changed successfully!'\n                  });\n                  setShowChangeUserId(false);\n                }}\n                isInDashboard={true}\n              />\n            </div>\n          ) : (\n            <>\n              {/* Overview Tab */}\n              {activeTab === 'overview' && !(\n                showFarmerDetails ||\n                showViewFarmer ||\n                showViewEmployee ||\n                showEmployeeDetails ||\n                showFarmerForm ||\n                showEmployeeForm ||\n                showRegistrationDetailModal ||\n                showAssignmentModal ||\n                showKYCModal ||\n                showDeleteModal\n              ) && (\n                <div className=\"overview-section\">\n                  <div className=\"overview-header\">\n                    <div>\n                      <h2 className=\"overview-title\">Super Admin Dashboard Overview</h2>\n                      <p className=\"overview-description\">Welcome back! Here's what's happening with your agricultural data.</p>\n                    </div>\n                    <div className=\"overview-actions\">\n                      <button \n                        className=\"action-btn refresh\"\n                        onClick={fetchData}\n                        disabled={loading}\n                      >\n                        {loading ? 'Loading...' : 'Refresh'}\n                      </button>\n                      \n                                             <button \n                         className=\"action-btn debug\"\n                         onClick={debugAuthState}\n                         style={{ backgroundColor: '#6c757d', color: 'white' }}\n                       >\n                         Debug Auth\n                       </button>\n                       \n                       <button \n                         className=\"action-btn test\"\n                         onClick={testBackendConnectivity}\n                         style={{ backgroundColor: '#17a2b8', color: 'white' }}\n                       >\n                         Test Backend\n                       </button>\n                       \n                       <button \n                         className=\"action-btn danger\"\n                         onClick={clearAllTokens}\n                         style={{ backgroundColor: '#dc3545', color: 'white' }}\n                       >\n                         Clear Tokens\n                       </button>\n                      \n                      <button className=\"action-btn this-month\">This Month</button>\n                      <button className=\"action-btn this-year\">This Year</button>\n                    </div>\n                  </div>\n\n                  {/* Stats Grid */}\n                  <div className=\"stats-grid\">\n                    <div className=\"stats-card card-emerald\">\n                      <h3>Total Farmers</h3>\n                      <div className=\"stats-number\">{stats.totalFarmers}</div>\n                      <div className=\"stats-change\">+25% from last month</div>\n                    </div>\n                    \n                    <div className=\"stats-card card-gold\">\n                      <h3>Total Employees</h3>\n                      <div className=\"stats-number\">{stats.totalEmployees}</div>\n                      <div className=\"stats-change\">+5% from last month</div>\n                    </div>\n                    \n                    <div className=\"stats-card card-orange\">\n                      <h3>Pending Registrations</h3>\n                      <div className=\"stats-number\">{stats.pendingRegistrations}</div>\n                      <div className=\"stats-change\">No change</div>\n                    </div>\n                    \n                    <div className=\"stats-card card-red\">\n                      <h3>KYC Pending</h3>\n                      <div className=\"stats-number\">{stats.farmersPendingKYC}</div>\n                      <div className=\"stats-change red\">All Required Cleared</div>\n                    </div>\n                  </div>\n\n                  {/* Additional sections */}\n                  <div className=\"dashboard-sections\">\n                    <div className=\"section recent-activities\">\n                      <div className=\"section-header\">\n                        <h3>Recent Activities</h3>\n                        <button className=\"view-all-btn\">View All</button>\n                      </div>\n                      <div className=\"activities-list\">\n                        <div className=\"activity-item\">\n                          <div className=\"activity-content\">\n                            <div className=\"activity-title\">New farmer registration approved</div>\n                            <div className=\"activity-time\">2 hours ago</div>\n                          </div>\n                          <span className=\"activity-status approved\">APPROVED</span>\n                        </div>\n                        <div className=\"activity-item\">\n                          <div className=\"activity-content\">\n                            <div className=\"activity-title\">KYC verification completed</div>\n                            <div className=\"activity-time\">4 hours ago</div>\n                          </div>\n                          <span className=\"activity-status completed\">COMPLETED</span>\n                        </div>\n                        <div className=\"activity-item\">\n                          <div className=\"activity-content\">\n                            <div className=\"activity-title\">Employee assigned to new farmers</div>\n                            <div className=\"activity-time\">6 hours ago</div>\n                          </div>\n                          <span className=\"activity-status pending\">PENDING</span>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"section quick-actions\">\n                      <div className=\"section-header\">\n                        <h3>Quick Actions</h3>\n                      </div>\n                      <div className=\"quick-actions-grid\">\n                        <button \n                          className=\"quick-action-btn qa-add\"\n                          onClick={() => setShowFarmerForm(true)}\n                        >\n                          Add Farmer\n                        </button>\n                        <button \n                          className=\"quick-action-btn qa-view-farmer\"\n                          onClick={() => setShowViewFarmer(true)}\n                        >\n                          View Farmer\n                        </button>\n                        <button \n                          className=\"quick-action-btn qa-add-employee\"\n                          onClick={() => setShowEmployeeForm(true)}\n                        >\n                          Add Employee\n                        </button>\n                        <button \n                          className=\"quick-action-btn qa-view-employee\"\n                          onClick={() => setShowViewEmployee(true)}\n                        >\n                          View Employee\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  \n                </div>\n              )}\n\n              {/* Search and Filters - Show for other tabs */}\n              {activeTab !== 'overview' && (\n                <SearchFilter\n                  onSearch={handleSearch}\n                  onFilter={handleFilters}\n                  filters={filterOptions}\n                  placeholder=\"Search farmers, employees, or registrations...\"\n                />\n              )}\n\n              {/* Farmers Tab */}\n              {activeTab === 'farmers' && (\n                <div className=\"tab-content\">\n                  <div className=\"tab-header\">\n                    <div className=\"header-info\">\n                      <h2 className=\"section-title\">Farmer Management</h2>\n                      <p className=\"section-description\">Manage farmer registrations and assignments.</p>\n                    </div>\n                    <div className=\"header-actions\">\n                      <button \n                        className=\"action-btn primary\"\n                        onClick={() => setShowFarmerForm(true)}\n                      >\n                        ➕ Add Farmer\n                      </button>\n                      <button \n                        className=\"action-btn secondary\"\n                        onClick={() => setShowAssignmentModal(true)}\n                      >\n                        📋 Assign Farmers\n                      </button>\n                      <button \n                        className=\"action-btn secondary\"\n                        onClick={fetchData}\n                      >\n                        🔄 Refresh Data\n                      </button>\n                    </div>\n                  </div>\n                  \n                  <DataTable\n                    data={filteredData.farmers}\n                    columns={farmerColumns}\n                    onEdit={(farmer) => {\n                      setEditingFarmer(farmer);\n                      setShowFarmerForm(true);\n                    }}\n                    onDelete={(farmer) => {\n                      setItemToDelete({ item: farmer, type: 'farmer' });\n                      setShowDeleteModal(true);\n                    }}\n                    onView={(farmer) => {\n                      console.log('🔍 View button clicked for farmer:', farmer);\n                      setSelectedFarmerData(farmer);\n                      setShowFarmerDetails(true);\n                    }}\n                    onKycUpdate={(farmer) => {\n                      setSelectedFarmerForKYC(farmer);\n                      setShowKYCModal(true);\n                    }}\n                    showDelete={true}\n                    loading={loading}\n                    emptyMessage=\"No farmers found\"\n                  />\n                </div>\n              )}\n\n              {/* Employees Tab */}\n              {activeTab === 'employees' && (\n                <div className=\"tab-content\">\n                  <div className=\"tab-header\">\n                    <h2>Employees Management</h2>\n                    <button \n                      className=\"action-btn primary\"\n                      onClick={() => setShowEmployeeForm(true)}\n                    >\n                      ➕ Add Employee\n                    </button>\n                  </div>\n                  \n                  <DataTable\n                    data={filteredData.employees}\n                    columns={employeeColumns}\n                    onEdit={(employee) => {\n                      setEditingEmployee(employee);\n                      setShowEmployeeForm(true);\n                    }}\n                    onDelete={(employee) => {\n                      setItemToDelete({ item: employee, type: 'employee' });\n                      setShowDeleteModal(true);\n                    }}\n                    onView={(employee) => {\n                      setSelectedEmployeeForView(employee);\n                      setShowViewEmployee(true);\n                    }}\n                    showDelete={true}\n                    loading={loading}\n                    emptyMessage=\"No employees found\"\n                  />\n                </div>\n              )}\n\n              {/* Registrations Tab */}\n              {activeTab === 'registrations' && (\n                <div className=\"tab-content\">\n                  <div className=\"tab-header\">\n                    <h2>Registration Management</h2>\n                  </div>\n                  \n                  <DataTable\n                    data={filteredData.registrations}\n                    columns={registrationColumns}\n                    onView={(registration) => {\n                      setSelectedRegistrationForDetail(registration);\n                      setShowRegistrationDetailModal(true);\n                    }}\n                    loading={loading}\n                    emptyMessage=\"No registrations found\"\n                  />\n                </div>\n              )}\n            </>\n          )}\n        </div>\n      </main>\n\n      {/* Modals */}\n\n      {showAssignmentModal && (\n        <AssignmentModal\n          farmers={farmers}\n          employees={employees}\n          onClose={() => setShowAssignmentModal(false)}\n          onAssign={async (assignments) => {\n            await handleAssignFarmers(assignments);\n            setShowAssignmentModal(false);\n          }}\n        />\n      )}\n\n      {showKYCModal && selectedFarmerForKYC && (\n        <KYCDocumentUpload\n          farmer={selectedFarmerForKYC}\n          onClose={() => {\n            setShowKYCModal(false);\n            setSelectedFarmerForKYC(null);\n          }}\n          onSave={() => {\n            setNotification({\n              type: 'success',\n              message: 'KYC documents uploaded successfully'\n            });\n            fetchData();\n            setShowKYCModal(false);\n            setSelectedFarmerForKYC(null);\n          }}\n        />\n      )}\n\n      {showEmployeeDetails && selectedEmployeeData && (\n        <ViewEditEmployeeDetails\n          employee={selectedEmployeeData}\n          onClose={() => {\n            setShowEmployeeDetails(false);\n            setSelectedEmployeeData(null);\n          }}\n          onEdit={(employee) => {\n            setEditingEmployee(employee);\n            setShowEmployeeForm(true);\n            setShowEmployeeDetails(false);\n            setSelectedEmployeeData(null);\n          }}\n        />\n      )}\n\n      {showRegistrationDetailModal && selectedRegistrationForDetail && (\n        <RegistrationDetailModal\n          registration={selectedRegistrationForDetail}\n          onClose={() => {\n            setShowRegistrationDetailModal(false);\n            setSelectedRegistrationForDetail(null);\n          }}\n        />\n      )}\n\n      {showDeleteModal && itemToDelete && (\n        <DeleteModal\n          item={itemToDelete.item}\n          type={itemToDelete.type}\n          onConfirm={handleDeleteItem}\n          onClose={() => {\n            setShowDeleteModal(false);\n            setItemToDelete(null);\n          }}\n        />\n      )}\n\n      {/* Notifications */}\n      {notification && (\n        <NotificationToast\n          type={notification.type}\n          message={notification.message}\n          onClose={() => setNotification(null)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default SuperAdminDashboard; ","import { useState, useCallback, useRef } from 'react';\r\n\r\nexport const useApi = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const cache = useRef(new Map());\r\n  const abortController = useRef(null);\r\n\r\n  const executeApiCall = useCallback(async (apiFunction, options = {}) => {\r\n    const {\r\n      cacheKey = null,\r\n      cacheTime = 5 * 60 * 1000, // 5 minutes\r\n      skipCache = false,\r\n      showError = true,\r\n      onSuccess = null,\r\n      onError = null\r\n    } = options;\r\n\r\n    // Cancel previous request if it exists\r\n    if (abortController.current) {\r\n      abortController.current.abort();\r\n    }\r\n\r\n    // Create new abort controller\r\n    abortController.current = new AbortController();\r\n\r\n    // Check cache first\r\n    if (cacheKey && !skipCache) {\r\n      const cached = cache.current.get(cacheKey);\r\n      if (cached && Date.now() - cached.timestamp < cacheTime) {\r\n        return cached.data;\r\n      }\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await apiFunction(abortController.current.signal);\r\n      \r\n      // Cache the response\r\n      if (cacheKey) {\r\n        cache.current.set(cacheKey, {\r\n          data: response,\r\n          timestamp: Date.now()\r\n        });\r\n      }\r\n\r\n      if (onSuccess) {\r\n        onSuccess(response);\r\n      }\r\n\r\n      return response;\r\n    } catch (err) {\r\n      if (err.name === 'AbortError') {\r\n        return; // Request was cancelled\r\n      }\r\n\r\n      const errorMessage = err.response?.data?.message || err.message || 'An error occurred';\r\n      setError(errorMessage);\r\n\r\n      if (onError) {\r\n        onError(err);\r\n      }\r\n\r\n      if (showError) {\r\n        console.error('API Error:', err);\r\n      }\r\n\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const clearCache = useCallback((key = null) => {\r\n    if (key) {\r\n      cache.current.delete(key);\r\n    } else {\r\n      cache.current.clear();\r\n    }\r\n  }, []);\r\n\r\n  const cancelRequest = useCallback(() => {\r\n    if (abortController.current) {\r\n      abortController.current.abort();\r\n    }\r\n  }, []);\r\n\r\n  return {\r\n    loading,\r\n    error,\r\n    executeApiCall,\r\n    clearCache,\r\n    cancelRequest\r\n  };\r\n}; ","import React, { useEffect, useState } from 'react';\r\nimport '../styles/NotificationToast.css';\r\n\r\nconst NotificationToast = ({ \r\n  message, \r\n  type = 'info', \r\n  duration = 5000, \r\n  onClose, \r\n  position = 'top-right' \r\n}) => {\r\n  const [isVisible, setIsVisible] = useState(true);\r\n  const [isExiting, setIsExiting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      handleClose();\r\n    }, duration);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [duration]);\r\n\r\n  const handleClose = () => {\r\n    setIsExiting(true);\r\n    setTimeout(() => {\r\n      setIsVisible(false);\r\n      onClose?.();\r\n    }, 300);\r\n  };\r\n\r\n  const getIcon = () => {\r\n    switch (type) {\r\n      case 'success':\r\n        return '✅';\r\n      case 'error':\r\n        return '❌';\r\n      case 'warning':\r\n        return '⚠️';\r\n      case 'info':\r\n      default:\r\n        return 'ℹ️';\r\n    }\r\n  };\r\n\r\n  if (!isVisible) return null;\r\n\r\n  return (\r\n    <div className={`notification-toast ${type} ${position} ${isExiting ? 'exiting' : ''}`}>\r\n      <div className=\"toast-content\">\r\n        <div className=\"toast-icon\">{getIcon()}</div>\r\n        <div className=\"toast-message\">{message}</div>\r\n        <button className=\"toast-close\" onClick={handleClose}>\r\n          ×\r\n        </button>\r\n      </div>\r\n      <div className=\"toast-progress\">\r\n        <div \r\n          className=\"progress-bar\" \r\n          style={{ \r\n            animationDuration: `${duration}ms`,\r\n            animationDelay: '300ms'\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationToast; "],"names":["_ref","onSearch","onFilter","filters","placeholder","showAdvancedFilters","className","searchTerm","setSearchTerm","useState","activeFilters","setActiveFilters","showFilters","setShowFilters","debouncedSearchTerm","useDebounce","value","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","handleSearchChange","useCallback","e","target","handleFilterChange","filterKey","newFilters","handleSearchSubmit","preventDefault","clearFilters","activeFiltersCount","Object","keys","length","_jsxs","children","onSubmit","_jsx","type","onChange","onClick","map","filter","_filter$options","label","key","options","option","item","onClose","onConfirm","reason","setReason","loading","setLoading","getItemName","name","details","phone","state","district","email","designation","entries","_ref2","charAt","toUpperCase","slice","async","error","console","htmlFor","id","rows","disabled","SuperAdminDashboard","navigate","useNavigate","user","logout","useAuth","currentTheme","getThemeLabel","useTheme","executeApiCall","useApi","setError","cache","useRef","Map","abortController","apiFunction","arguments","undefined","cacheKey","cacheTime","skipCache","showError","onSuccess","onError","current","abort","AbortController","cached","get","Date","now","timestamp","data","response","signal","set","err","_err$response","_err$response$data","errorMessage","message","clearCache","delete","clear","cancelRequest","farmers","setFarmers","employees","setEmployees","registrations","setRegistrations","activeTab","setActiveTab","showUserDropdown","setShowUserDropdown","showRegistrationApprovalModal","setShowRegistrationApprovalModal","selectedRegistration","setSelectedRegistration","showRegistrationDetailModal","setShowRegistrationDetailModal","selectedRegistrationForDetail","setSelectedRegistrationForDetail","showAssignmentModal","setShowAssignmentModal","showFarmerForm","setShowFarmerForm","editingFarmer","setEditingFarmer","showEmployeeForm","setShowEmployeeForm","editingEmployee","setEditingEmployee","showEmployeeDetails","setShowEmployeeDetails","selectedEmployeeData","setSelectedEmployeeData","showKYCModal","setShowKYCModal","selectedFarmerForKYC","setSelectedFarmerForKYC","showDeleteModal","setShowDeleteModal","itemToDelete","setItemToDelete","showViewFarmer","setShowViewFarmer","showViewEmployee","setShowViewEmployee","selectedFarmerForView","setSelectedFarmerForView","selectedEmployeeForView","setSelectedEmployeeForView","showFarmerDetails","setShowFarmerDetails","selectedFarmerData","setSelectedFarmerData","showChangePassword","setShowChangePassword","showChangeUserId","setShowChangeUserId","notification","setNotification","getGreeting","hour","getHours","stats","useMemo","totalFarmers","totalEmployees","totalRegistrations","pendingRegistrations","r","status","approvedRegistrations","rejectedRegistrations","farmersWithKYC","f","kycStatus","farmersPendingKYC","debugAuthState","token","localStorage","getItem","log","JSON","parse","isAuthenticated","payload","atob","split","exp","iat","clearAllTokens","removeItem","sessionStorage","alert","window","location","href","testBackendConnectivity","pingResponse","fetch","method","mode","statusText","healthResponse","noTokenResponse","withTokenResponse","headers","ok","json","errorText","text","includes","fetchData","farmersData","employeesData","registrationsData","Promise","all","adminAPI","getFarmersWithKyc","employeesAPI","getAllEmployees","superAdminAPI","getRegistrationList","firstFarmer","availableFields","handleKYCUpdate","addEventListener","removeEventListener","handleSearch","term","handleFilters","filteredData","filtered","searchLower","toLowerCase","_f$name","_f$email","_f$phoneNumber","phoneNumber","_e$name","_e$email","_r$name","_r$email","forEach","handleAssignFarmers","assignmentsOrFarmerIds","maybeEmployeeId","Array","isArray","_assignmentsOrFarmerI","farmerIds","a","farmerId","employeeId","bulkAssignFarmers","handleDeleteItem","farmersAPI","deleteFarmer","prev","deleteEmployee","farmerColumns","render","row","fullName","userName","firstName","lastName","farmerName","trim","mobile","contactNumber","mobileNumber","stateName","state_name","farmerState","districtName","district_name","farmerDistrict","kyc_status","employeeName","assignedEmployeeName","employee","assignedTo","assignedEmployee","employeeColumns","emailAddress","userEmail","employeeEmail","role","userRole","employeeRole","toString","employeeStatus","userStatus","registrationColumns","userType","registrationStatus","approvalStatus","v","createdAt","created_on","createdDate","d","isNaN","getTime","String","toISOString","filterOptions","toLocaleDateString","weekday","year","month","day","ThemeDropdown","UserProfileDropdown","onShowChangePassword","onShowChangeUserId","FarmerForm","isInDashboard","farmer","onSave","EmployeeRegistrationForm","ViewFarmerRegistrationDetails","farmerData","onFarmerSelect","ViewEditEmployeeDetails","employeeData","onUpdate","onEmployeeSelect","ChangePasswordModal","isOpen","ChangeUserIdModal","_Fragment","style","backgroundColor","color","SearchFilter","DataTable","columns","onEdit","onDelete","onView","onKycUpdate","showDelete","emptyMessage","registration","AssignmentModal","onAssign","assignments","KYCDocumentUpload","RegistrationDetailModal","DeleteModal","NotificationToast","LoadingSpinner","fullScreen","duration","position","isVisible","setIsVisible","isExiting","setIsExiting","timer","handleClose","getIcon","animationDuration","animationDelay"],"sourceRoot":""}