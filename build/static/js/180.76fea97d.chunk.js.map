{"version":3,"file":"static/js/180.76fea97d.chunk.js","mappings":"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","sources":["components/KYCModal.jsx","pages/EmployeeDashboard.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/Forms.css';\r\n\r\nconst KYCModal = ({ farmer, onClose, onApprove, onReject, onReferBack }) => {\r\n  const [reason, setReason] = useState('');\r\n  const [action, setAction] = useState('');\r\n  const [aadharNumber, setAadharNumber] = useState(farmer?.aadharNumber || '');\r\n  const [panNumber, setPanNumber] = useState(farmer?.panNumber || '');\r\n\r\n  const handleSubmit = () => {\r\n    if (!action) {\r\n      alert('Please select an action');\r\n      return;\r\n    }\r\n\r\n    if (action === 'approve' && (!aadharNumber.trim() || !panNumber.trim())) {\r\n      alert('Please fill both Aadhar Number and PAN Number before approving');\r\n      return;\r\n    }\r\n\r\n    if ((action === 'reject' || action === 'refer-back') && !reason.trim()) {\r\n      alert('Please provide a reason');\r\n      return;\r\n    }\r\n\r\n    switch (action) {\r\n      case 'approve':\r\n        onApprove(farmer.id, { aadharNumber, panNumber });\r\n        break;\r\n      case 'reject':\r\n        onReject(farmer.id, reason);\r\n        break;\r\n      case 'refer-back':\r\n        onReferBack(farmer.id, reason);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    \r\n    onClose();\r\n  };\r\n\r\n  if (!farmer) return null;\r\n\r\n  return (\r\n    <div className=\"kyc-modal-overlay\">\r\n      <div className=\"kyc-modal-content kyc-modal\">\r\n        <div className=\"kyc-modal-header\">\r\n          <h2>KYC Review - {farmer.name}</h2>\r\n          <button className=\"kyc-modal-close\" onClick={onClose}>×</button>\r\n        </div>\r\n        \r\n        <div className=\"kyc-modal-body\">\r\n          <div className=\"kyc-modal-farmer-info\">\r\n            <h3>Farmer Information</h3>\r\n            <div className=\"kyc-modal-info-grid\">\r\n              <div className=\"kyc-modal-info-item\">\r\n                <label>Name:</label>\r\n                <span>{farmer.name}</span>\r\n              </div>\r\n              <div className=\"kyc-modal-info-item\">\r\n                <label>Phone:</label>\r\n                <span>{farmer.phone}</span>\r\n              </div>\r\n              <div className=\"kyc-modal-info-item\">\r\n                <label>Location:</label>\r\n                <span>{farmer.location}</span>\r\n              </div>\r\n              <div className=\"kyc-modal-info-item\">\r\n                <label>Current Status:</label>\r\n                <span className={`kyc-modal-status-badge kyc-modal-status-${farmer.kycStatus?.toLowerCase()}`}>\r\n                  {farmer.kycStatus}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"kyc-modal-document-info\">\r\n            <h3>Required Documents</h3>\r\n            <div className=\"kyc-modal-form-grid\">\r\n              <div className=\"kyc-modal-form-group\">\r\n                <label>Aadhar Number:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={aadharNumber}\r\n                  onChange={(e) => setAadharNumber(e.target.value)}\r\n                  placeholder=\"Enter 12-digit Aadhar number\"\r\n                  maxLength=\"12\"\r\n                  className={aadharNumber.length > 0 && aadharNumber.length !== 12 ? 'kyc-modal-error' : ''}\r\n                />\r\n                {aadharNumber.length > 0 && aadharNumber.length !== 12 && (\r\n                  <span className=\"kyc-modal-error-text\">Aadhar number must be 12 digits</span>\r\n                )}\r\n              </div>\r\n              <div className=\"kyc-modal-form-group\">\r\n                <label>PAN Number:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={panNumber}\r\n                  onChange={(e) => setPanNumber(e.target.value.toUpperCase())}\r\n                  placeholder=\"Enter PAN number (e.g., ABCDE1234F)\"\r\n                  maxLength=\"10\"\r\n                  className={panNumber.length > 0 && panNumber.length !== 10 ? 'kyc-modal-error' : ''}\r\n                />\r\n                {panNumber.length > 0 && panNumber.length !== 10 && (\r\n                  <span className=\"kyc-modal-error-text\">PAN number must be 10 characters</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            {(!aadharNumber.trim() || !panNumber.trim()) && (\r\n              <div className=\"kyc-modal-document-warning\">\r\n                ⚠️ Both Aadhar Number and PAN Number are required for KYC approval\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"kyc-modal-kyc-actions\">\r\n            <h3>KYC Action</h3>\r\n            <div className=\"kyc-modal-action-buttons\">\r\n              <button \r\n                className={`kyc-modal-action-btn ${action === 'approve' ? 'active' : ''}`}\r\n                onClick={() => setAction('approve')}\r\n                disabled={!aadharNumber.trim() || !panNumber.trim() || aadharNumber.length !== 12 || panNumber.length !== 10}\r\n                title={(!aadharNumber.trim() || !panNumber.trim() || aadharNumber.length !== 12 || panNumber.length !== 10) ? 'Both Aadhar and PAN numbers must be filled correctly for approval' : ''}\r\n              >\r\n                ✅ Approve\r\n              </button>\r\n              <button \r\n                className={`kyc-modal-action-btn ${action === 'refer-back' ? 'active' : ''}`}\r\n                onClick={() => setAction('refer-back')}\r\n              >\r\n                📝 Refer Back\r\n              </button>\r\n              <button \r\n                className={`kyc-modal-action-btn ${action === 'reject' ? 'active' : ''}`}\r\n                onClick={() => setAction('reject')}\r\n              >\r\n                ❌ Reject\r\n              </button>\r\n            </div>\r\n\r\n            {(action === 'reject' || action === 'refer-back') && (\r\n              <div className=\"kyc-modal-reason-section\">\r\n                <label htmlFor=\"reason\">Reason:</label>\r\n                <textarea\r\n                  id=\"reason\"\r\n                  value={reason}\r\n                  onChange={(e) => setReason(e.target.value)}\r\n                  placeholder={`Enter reason for ${action === 'reject' ? 'rejection' : 'refer back'}...`}\r\n                  rows=\"4\"\r\n                  className=\"kyc-modal-reason-textarea\"\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"kyc-modal-footer\">\r\n          <button className=\"kyc-modal-action-btn kyc-modal-secondary\" onClick={onClose}>\r\n            Cancel\r\n          </button>\r\n          <button \r\n            className=\"kyc-modal-action-btn kyc-modal-primary\" \r\n            onClick={handleSubmit}\r\n            disabled={!action || \r\n              ((action === 'reject' || action === 'refer-back') && !reason.trim()) ||\r\n              (action === 'approve' && (!aadharNumber.trim() || !panNumber.trim() || aadharNumber.length !== 12 || panNumber.length !== 10))\r\n            }\r\n          >\r\n            Submit Action\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KYCModal; ","import React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport '../styles/Dashboard.css';\r\nimport ThemeDropdown from '../components/ThemeDropdown';\r\nimport FarmerForm from '../components/FarmerForm';\r\nimport KYCModal from '../components/KYCModal';\r\nimport ViewFarmerRegistrationDetails from '../components/ViewFarmerRegistrationDetails';\r\nimport ViewEditEmployeeDetails from '../components/ViewEditEmployeeDetails';\r\nimport StatsCard from '../components/StatsCard';\r\nimport DataTable from '../components/DataTable';\r\nimport UserProfileDropdown from '../components/UserProfileDropdown';\r\nimport { kycAPI, employeeAPI } from '../api/apiService';\r\n\r\nconst EmployeeDashboard = () => {\r\n  const { user, logout } = useAuth();\r\n  const [activeTab, setActiveTab] = useState('overview');\r\n  const [assignedFarmers, setAssignedFarmers] = useState([]);\r\n  const [showFarmerForm, setShowFarmerForm] = useState(false);\r\n  const [showKYCModal, setShowKYCModal] = useState(false);\r\n  const [selectedFarmer, setSelectedFarmer] = useState(null);\r\n  const [showFarmerDetails, setShowFarmerDetails] = useState(false);\r\n  const [selectedFarmerData, setSelectedFarmerData] = useState(null);\r\n  const [showEmployeeDetails, setShowEmployeeDetails] = useState(false);\r\n  const [selectedEmployeeData, setSelectedEmployeeData] = useState(null);\r\n  const [editingFarmer, setEditingFarmer] = useState(null);\r\n\r\n  // Greeting function based on time of day\r\n  const getGreeting = () => {\r\n    const hour = new Date().getHours();\r\n    if (hour >= 5 && hour < 12) {\r\n      return 'Good Morning';\r\n    } else if (hour >= 12 && hour < 17) {\r\n      return 'Good Afternoon';\r\n    } else if (hour >= 17 && hour < 21) {\r\n      return 'Good Evening';\r\n    } else {\r\n      return 'Good Night';\r\n    }\r\n  };\r\n\r\n  const [filters, setFilters] = useState({\r\n    kycStatus: '',\r\n    assignedDate: ''\r\n  });\r\n  const [showUserDropdown, setShowUserDropdown] = useState(false);\r\n\r\n  // Load data from API\r\n  useEffect(() => {\r\n    fetchAssignedFarmers();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n    const fetchAssignedFarmers = async () => {\r\n    try {\r\n      console.log('🔄 Fetching assigned farmers for employee...');\r\n      console.log('👤 Current user:', user);\r\n      \r\n      if (!user) {\r\n        console.error('❌ No user available');\r\n        setAssignedFarmers([]);\r\n        return;\r\n      }\r\n      \r\n      // Fetch from API using the correct endpoint\r\n      const response = await employeeAPI.getAssignedFarmers();\r\n      console.log('✅ API Response:', response);\r\n      \r\n      if (response && Array.isArray(response)) {\r\n        // Transform the API response to match our frontend format\r\n        const transformedData = response.map(farmer => ({\r\n          id: farmer.id,\r\n          name: farmer.name,\r\n          phone: farmer.contactNumber,\r\n          state: farmer.state,\r\n          district: farmer.district,\r\n          location: `${farmer.district}, ${farmer.state}`,\r\n          kycStatus: farmer.kycStatus || 'PENDING',\r\n          lastAction: farmer.kycReviewedDate || farmer.kycSubmittedDate || new Date().toISOString().split('T')[0],\r\n          notes: `KYC Status: ${farmer.kycStatus || 'PENDING'}`,\r\n          assignedEmployee: user.name || 'Employee'\r\n        }));\r\n        \r\n        setAssignedFarmers(transformedData);\r\n        console.log('✅ Assigned farmers loaded from API:', transformedData.length);\r\n      } else {\r\n        console.log('⚠️ No API data available');\r\n        setAssignedFarmers([]);\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ Error fetching assigned farmers:', error);\r\n      setAssignedFarmers([]);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const getFilteredFarmers = () => {\r\n    return assignedFarmers.filter(farmer => {\r\n      const matchesKycStatus = !filters.kycStatus || farmer.kycStatus === filters.kycStatus;\r\n      const matchesAssignedDate = !filters.assignedDate || farmer.assignedDate === filters.assignedDate;\r\n      \r\n      return matchesKycStatus && matchesAssignedDate;\r\n    });\r\n  };\r\n\r\n  const getStats = () => {\r\n    const totalAssigned = assignedFarmers.length;\r\n    const approved = assignedFarmers.filter(f => f.kycStatus === 'APPROVED').length;\r\n    const pending = assignedFarmers.filter(f => f.kycStatus === 'PENDING').length;\r\n    const referBack = assignedFarmers.filter(f => f.kycStatus === 'REFER_BACK').length;\r\n    const rejected = assignedFarmers.filter(f => f.kycStatus === 'REJECTED').length;\r\n\r\n    return {\r\n      totalAssigned,\r\n      approved,\r\n      pending,\r\n      referBack,\r\n      rejected\r\n    };\r\n  };\r\n\r\n  const getTodoList = () => {\r\n    const newAssignments = assignedFarmers.filter(f => {\r\n      // New assignments not yet viewed (assigned within last 3 days)\r\n      const assignedDate = new Date(f.assignedDate);\r\n      const today = new Date();\r\n      const daysDiff = (today - assignedDate) / (1000 * 60 * 60 * 24);\r\n      return daysDiff <= 3 && f.kycStatus === 'PENDING';\r\n    });\r\n\r\n    const pendingReviews = assignedFarmers.filter(f => f.kycStatus === 'PENDING');\r\n    const referBackCases = assignedFarmers.filter(f => f.kycStatus === 'REFER_BACK');\r\n\r\n        return {\r\n      newAssignments,\r\n      pendingReviews,\r\n      referBackCases\r\n    };\r\n  };\r\n\r\n  const handleKYCUpdate = async (farmerId, newStatus, reason = '', documents = null) => {\r\n    try {\r\n      console.log(`🔄 Updating KYC status for farmer ${farmerId} to ${newStatus}`);\r\n      \r\n      // Prepare approval data\r\n      const approvalData = {\r\n        reason: reason,\r\n        updatedBy: user?.name || 'Employee',\r\n        updatedAt: new Date().toISOString(),\r\n        ...(documents && { aadharNumber: documents.aadharNumber, panNumber: documents.panNumber })\r\n      };\r\n\r\n      console.log('📋 Approval data:', approvalData);\r\n\r\n      // Make API call\r\n      let response;\r\n      switch (newStatus) {\r\n        case 'APPROVED':\r\n          response = await kycAPI.approveKYC(farmerId, approvalData);\r\n          break;\r\n        case 'REJECTED':\r\n          response = await kycAPI.rejectKYC(farmerId, approvalData);\r\n          break;\r\n        case 'REFER_BACK':\r\n          response = await kycAPI.referBackKYC(farmerId, approvalData);\r\n          break;\r\n        default:\r\n          response = await kycAPI.approveKYC(farmerId, approvalData);\r\n      }\r\n      \r\n      console.log('✅ KYC API response:', response);\r\n      \r\n      // Update local state after successful API call\r\n      setAssignedFarmers(prev => prev.map(farmer => \r\n        farmer.id === farmerId \r\n          ? { \r\n          ...farmer,\r\n          kycStatus: newStatus,\r\n          lastAction: new Date().toISOString().split('T')[0],\r\n              notes: reason || `Status updated to ${newStatus} by ${user?.name || 'Employee'}`,\r\n              ...(documents && { aadharNumber: documents.aadharNumber, panNumber: documents.panNumber })\r\n            }\r\n          : farmer\r\n      ));\r\n      \r\n      // Show success message\r\n      alert(`KYC status updated to ${newStatus} successfully!`);\r\n      \r\n      // Trigger a global event to notify other dashboards\r\n      window.dispatchEvent(new CustomEvent('kycStatusUpdated', {\r\n        detail: { farmerId, newStatus, reason, documents }\r\n      }));\r\n      \r\n    } catch (error) {\r\n      console.error('❌ Error updating KYC status:', error);\r\n      alert(`Failed to update KYC status: ${error.response?.data || error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n  };\r\n\r\n  const toggleUserDropdown = () => {\r\n    setShowUserDropdown(!showUserDropdown);\r\n  };\r\n\r\n  const handleChangePassword = () => {\r\n    // Navigate to change password page\r\n    window.location.href = '/change-password';\r\n  };\r\n\r\n  const handleViewFarmer = (farmer) => {\r\n    setSelectedFarmerData(farmer);\r\n    setShowFarmerDetails(true);\r\n  };\r\n\r\n  const handleCloseFarmerDetails = () => {\r\n    setShowFarmerDetails(false);\r\n    setSelectedFarmerData(null);\r\n  };\r\n\r\n  const handleCloseEmployeeDetails = () => {\r\n    setShowEmployeeDetails(false);\r\n    setSelectedEmployeeData(null);\r\n  };\r\n\r\n  const handleUpdateEmployee = (updatedData) => {\r\n    // Update employee profile\r\n    setShowEmployeeDetails(false);\r\n    setSelectedEmployeeData(null);\r\n  };\r\n\r\n  const handleEditFarmer = (farmer) => {\r\n    setEditingFarmer(farmer);\r\n    setShowFarmerForm(true);\r\n  };\r\n\r\n  const renderOverview = () => {\r\n    const stats = getStats();\r\n    const todoList = getTodoList();\r\n\r\n    return (\r\n      <div className=\"overview-section\">\r\n        <div className=\"overview-header\">\r\n          <h2 className=\"overview-title\">Employee Dashboard Overview</h2>\r\n          <p className=\"overview-description\">\r\n            Manage your assigned farmers and KYC verification tasks efficiently.\r\n          </p>\r\n        </div>\r\n\r\n        {/* Stats Cards */}\r\n      <div className=\"stats-grid\">\r\n        <div className=\"stats-card assigned\">\r\n          <h3 className=\"stats-title\">Total Assigned</h3>\r\n          <div className=\"stats-number\">{stats.totalAssigned}</div>\r\n        </div>\r\n        <div className=\"stats-card approved\">\r\n          <h3 className=\"stats-title\">Approved</h3>\r\n          <div className=\"stats-number\">{stats.approved}</div>\r\n        </div>\r\n        <div className=\"stats-card pending\">\r\n          <h3 className=\"stats-title\">Pending</h3>\r\n          <div className=\"stats-number\">{stats.pending}</div>\r\n        </div>\r\n        <div className=\"stats-card refer\">\r\n          <h3 className=\"stats-title\">Refer Back</h3>\r\n          <div className=\"stats-number\">{stats.referBack}</div>\r\n        </div>\r\n      </div>\r\n\r\n        {/* KYC Progress Chart */}\r\n        <div className=\"kyc-progress-section\">\r\n          <h3>KYC Progress Summary</h3>\r\n          <div className=\"kyc-progress-grid\">\r\n            <div className=\"progress-card approved\">\r\n              <div className=\"progress-circle\">\r\n                <span className=\"progress-number\">{stats.approved}</span>\r\n                <span className=\"progress-label\">Approved</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"progress-card pending\">\r\n              <div className=\"progress-circle\">\r\n                <span className=\"progress-number\">{stats.pending}</span>\r\n                <span className=\"progress-label\">Pending</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"progress-card refer-back\">\r\n              <div className=\"progress-circle\">\r\n                <span className=\"progress-number\">{stats.referBack}</span>\r\n                <span className=\"progress-label\">Refer Back</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"progress-card rejected\">\r\n              <div className=\"progress-circle\">\r\n                <span className=\"progress-number\">{stats.rejected}</span>\r\n                <span className=\"progress-label\">Rejected</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n      </div>\r\n\r\n        {/* Todo List */}\r\n        <div className=\"todo-section\">\r\n        <h3>To-Do List</h3>\r\n          <div className=\"todo-grid\">\r\n            <div className=\"todo-card high-priority\">\r\n              <h4>New Assignments</h4>\r\n              <p>{todoList.newAssignments.length} new farmers assigned</p>\r\n              <button \r\n                className=\"action-btn-small primary\"\r\n                onClick={() => setActiveTab('farmers')}\r\n              >\r\n                Review New\r\n              </button>\r\n            </div>\r\n            <div className=\"todo-card medium-priority\">\r\n              <h4>Pending Reviews</h4>\r\n              <p>{todoList.pendingReviews.length} cases pending</p>\r\n              <button \r\n                className=\"action-btn-small warning\"\r\n                onClick={() => setActiveTab('farmers')}\r\n              >\r\n                Process Pending\r\n              </button>\r\n            </div>\r\n            <div className=\"todo-card urgent-priority\">\r\n              <h4>Refer Back Cases</h4>\r\n              <p>{todoList.referBackCases.length} need attention</p>\r\n              <button \r\n                className=\"action-btn-small info\"\r\n                onClick={() => setActiveTab('farmers')}\r\n              >\r\n                Review Refer Back\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderAssignedFarmers = () => {\r\n    const filteredFarmers = getFilteredFarmers();\r\n\r\n    return (\r\n      <div className=\"overview-section\">\r\n        <div className=\"overview-header\">\r\n          <h2 className=\"overview-title\">Assigned Farmers</h2>\r\n          <p className=\"overview-description\">\r\n            View and manage your assigned farmers with KYC verification tasks.\r\n          </p>\r\n          <div className=\"overview-actions\">\r\n            <button \r\n              className=\"action-btn primary\"\r\n              onClick={() => setShowFarmerForm(true)}\r\n            >\r\n              Add Farmer\r\n            </button>\r\n      </div>\r\n    </div>\r\n\r\n        {/* Filters */}\r\n      <div className=\"filters-section\">\r\n          <select \r\n            value={filters.kycStatus} \r\n            onChange={(e) => setFilters(prev => ({ ...prev, kycStatus: e.target.value }))}\r\n            className=\"filter-select\"\r\n          >\r\n            <option value=\"\">All KYC Status</option>\r\n            <option value=\"APPROVED\">Approved</option>\r\n            <option value=\"PENDING\">Pending</option>\r\n            <option value=\"REFER_BACK\">Refer Back</option>\r\n            <option value=\"REJECTED\">Rejected</option>\r\n          </select>\r\n          <select \r\n            value={filters.assignedDate} \r\n            onChange={(e) => setFilters(prev => ({ ...prev, assignedDate: e.target.value }))}\r\n            className=\"filter-select\"\r\n          >\r\n            <option value=\"\">All Assignment Dates</option>\r\n            <option value=\"2024-01-15\">Jan 15, 2024</option>\r\n            <option value=\"2024-01-18\">Jan 18, 2024</option>\r\n            <option value=\"2024-01-20\">Jan 20, 2024</option>\r\n            <option value=\"2024-01-25\">Jan 25, 2024</option>\r\n          </select>\r\n      </div>\r\n\r\n        {/* KYC Status Tabs */}\r\n        <div className=\"kyc-tabs-section\">\r\n          <div className=\"kyc-tabs\">\r\n            <button \r\n              className={`kyc-tab ${filters.kycStatus === '' ? 'active' : ''}`}\r\n              onClick={() => setFilters(prev => ({ ...prev, kycStatus: '' }))}\r\n            >\r\n              <span className=\"tab-icon\">📊</span>\r\n              <span className=\"tab-label\">All</span>\r\n              <span className=\"tab-count\">{filteredFarmers.length}</span>\r\n            </button>\r\n            <button \r\n              className={`kyc-tab approved ${filters.kycStatus === 'APPROVED' ? 'active' : ''}`}\r\n              onClick={() => setFilters(prev => ({ ...prev, kycStatus: 'APPROVED' }))}\r\n            >\r\n              <span className=\"tab-icon\">✅</span>\r\n              <span className=\"tab-label\">Approved</span>\r\n              <span className=\"tab-count\">{filteredFarmers.filter(f => f.kycStatus === 'APPROVED').length}</span>\r\n            </button>\r\n              <button \r\n              className={`kyc-tab pending ${filters.kycStatus === 'PENDING' ? 'active' : ''}`}\r\n              onClick={() => setFilters(prev => ({ ...prev, kycStatus: 'PENDING' }))}\r\n            >\r\n              <span className=\"tab-icon\">⏳</span>\r\n              <span className=\"tab-label\">Pending</span>\r\n              <span className=\"tab-count\">{filteredFarmers.filter(f => f.kycStatus === 'PENDING').length}</span>\r\n              </button>\r\n              <button \r\n              className={`kyc-tab rejected ${filters.kycStatus === 'REJECTED' ? 'active' : ''}`}\r\n              onClick={() => setFilters(prev => ({ ...prev, kycStatus: 'REJECTED' }))}\r\n              >\r\n              <span className=\"tab-icon\">❌</span>\r\n              <span className=\"tab-label\">Rejected</span>\r\n              <span className=\"tab-count\">{filteredFarmers.filter(f => f.kycStatus === 'REJECTED').length}</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n        {/* Farmers Table */}\r\n        <DataTable\r\n          data={filteredFarmers}\r\n          columns={[\r\n            { key: 'name', label: 'Name' },\r\n            { key: 'phone', label: 'Phone' },\r\n            { key: 'location', label: 'Location' },\r\n            { key: 'assignedDate', label: 'Assigned Date' },\r\n            { key: 'kycStatus', label: 'KYC Status' },\r\n            { key: 'lastAction', label: 'Last Action' }\r\n          ]}\r\n          customActions={[\r\n            {\r\n              label: 'View',\r\n              icon: '👁️',\r\n              className: 'info',\r\n              onClick: handleViewFarmer\r\n            },\r\n            {\r\n              label: 'Edit',\r\n              icon: '✏️',\r\n              className: 'primary',\r\n              onClick: handleEditFarmer\r\n            },\r\n            {\r\n              label: 'KYC',\r\n              icon: '📋',\r\n              className: 'warning',\r\n              onClick: (farmer) => {\r\n                setSelectedFarmer(farmer);\r\n                setShowKYCModal(true);\r\n              }\r\n            },\r\n            {\r\n              label: 'Approve',\r\n              icon: '✅',\r\n              className: 'success',\r\n              onClick: (farmer) => handleKYCUpdate(farmer.id, 'APPROVED'),\r\n              showCondition: (farmer) => farmer.kycStatus === 'PENDING' || farmer.kycStatus === 'REFER_BACK'\r\n            },\r\n            {\r\n              label: 'Refer Back',\r\n              icon: '🔄',\r\n              className: 'warning',\r\n              onClick: (farmer) => {\r\n                const reason = prompt('Enter reason for refer back:');\r\n                if (reason) {\r\n                  handleKYCUpdate(farmer.id, 'REFER_BACK', reason);\r\n                }\r\n              },\r\n              showCondition: (farmer) => farmer.kycStatus === 'PENDING'\r\n            },\r\n            {\r\n              label: 'Reject',\r\n              icon: '❌',\r\n              className: 'danger',\r\n              onClick: (farmer) => {\r\n                const reason = prompt('Enter reason for rejection:');\r\n                if (reason) {\r\n                  handleKYCUpdate(farmer.id, 'REJECTED', reason);\r\n                }\r\n              },\r\n              showCondition: (farmer) => farmer.kycStatus === 'PENDING' || farmer.kycStatus === 'REFER_BACK'\r\n            }\r\n          ]}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderKYCProgress = () => {\r\n    const stats = getStats();\r\n    const total = stats.totalAssigned;\r\n    const approvedPercentage = total > 0 ? Math.round((stats.approved / total) * 100) : 0;\r\n    const pendingPercentage = total > 0 ? Math.round((stats.pending / total) * 100) : 0;\r\n    const referBackPercentage = total > 0 ? Math.round((stats.referBack / total) * 100) : 0;\r\n    const rejectedPercentage = total > 0 ? Math.round((stats.rejected / total) * 100) : 0;\r\n\r\n    return (\r\n      <div className=\"overview-section\">\r\n        <div className=\"overview-header\">\r\n          <h2 className=\"overview-title\">KYC Progress Tracking</h2>\r\n          <p className=\"overview-description\">\r\n            Monitor your KYC verification progress and performance metrics.\r\n          </p>\r\n    </div>\r\n\r\n        {/* Progress Overview */}\r\n        <div className=\"progress-overview\">\r\n          <div className=\"progress-stats\">\r\n            <div className=\"progress-stat\">\r\n              <h3>Overall Progress</h3>\r\n          <div className=\"progress-bar\">\r\n            <div \r\n              className=\"progress-fill approved\" \r\n                  style={{ width: `${approvedPercentage}%` }}\r\n                ></div>\r\n                <div \r\n                  className=\"progress-fill pending\" \r\n                  style={{ width: `${pendingPercentage}%` }}\r\n                ></div>\r\n                <div \r\n                  className=\"progress-fill refer-back\" \r\n                  style={{ width: `${referBackPercentage}%` }}\r\n                ></div>\r\n                <div \r\n                  className=\"progress-fill rejected\" \r\n                  style={{ width: `${rejectedPercentage}%` }}\r\n            ></div>\r\n              </div>\r\n              <div className=\"progress-labels\">\r\n                <span>Approved: {approvedPercentage}%</span>\r\n                <span>Pending: {pendingPercentage}%</span>\r\n                <span>Refer Back: {referBackPercentage}%</span>\r\n                <span>Rejected: {rejectedPercentage}%</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Detailed Stats */}\r\n        <div className=\"detailed-stats\">\r\n          <div className=\"stat-card approved\">\r\n            <h4>Approved Cases</h4>\r\n            <div className=\"stat-content\">\r\n              <span className=\"stat-number\">{stats.approved}</span>\r\n              <span className=\"stat-percentage\">{approvedPercentage}%</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"stat-card pending\">\r\n            <h4>Pending Cases</h4>\r\n            <div className=\"stat-content\">\r\n              <span className=\"stat-number\">{stats.pending}</span>\r\n              <span className=\"stat-percentage\">{pendingPercentage}%</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"stat-card refer-back\">\r\n            <h4>Refer Back Cases</h4>\r\n            <div className=\"stat-content\">\r\n              <span className=\"stat-number\">{stats.referBack}</span>\r\n              <span className=\"stat-percentage\">{referBackPercentage}%</span>\r\n        </div>\r\n          </div>\r\n          <div className=\"stat-card rejected\">\r\n            <h4>Rejected Cases</h4>\r\n            <div className=\"stat-content\">\r\n              <span className=\"stat-number\">{stats.rejected}</span>\r\n              <span className=\"stat-percentage\">{rejectedPercentage}%</span>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n  };\r\n\r\n  const renderTodoList = () => {\r\n    const todoList = getTodoList();\r\n    \r\n    return (\r\n      <div className=\"overview-section\">\r\n        <div className=\"overview-header\">\r\n          <h2 className=\"overview-title\">To-Do List</h2>\r\n          <p className=\"overview-description\">\r\n            Manage your daily tasks and priorities for KYC verification.\r\n          </p>\r\n        </div>\r\n\r\n        {/* Todo Grid */}\r\n        <div className=\"todo-grid\">\r\n          <div className=\"todo-card high-priority\">\r\n            <div className=\"priority-badge high\">High Priority</div>\r\n            <h4>New KYC Reviews</h4>\r\n            <p>{todoList.newAssignments.length} new farmers need KYC verification</p>\r\n            <button \r\n              className=\"action-btn-small primary\"\r\n              onClick={() => setActiveTab('farmers')}\r\n            >\r\n              Review Now\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"todo-card medium-priority\">\r\n            <div className=\"priority-badge medium\">Medium Priority</div>\r\n            <h4>Pending Reviews</h4>\r\n            <p>{todoList.pendingReviews.length} cases awaiting your review</p>\r\n            <button \r\n              className=\"action-btn-small warning\"\r\n              onClick={() => setActiveTab('farmers')}\r\n            >\r\n              Process Pending\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"todo-card urgent-priority\">\r\n            <div className=\"priority-badge urgent\">Urgent</div>\r\n            <h4>Refer Back Cases</h4>\r\n            <p>{todoList.referBackCases.length} cases need immediate attention</p>\r\n            <button \r\n              className=\"action-btn-small danger\"\r\n              onClick={() => setActiveTab('farmers')}\r\n            >\r\n              Review Urgent\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Task Summary */}\r\n        <div className=\"task-summary\">\r\n          <h3>Task Summary</h3>\r\n          <div className=\"task-stats\">\r\n            <div className=\"task-stat assignments\">\r\n              <span className=\"task-number\">{todoList.newAssignments.length}</span>\r\n              <span className=\"task-label\">New Assignments</span>\r\n            </div>\r\n            <div className=\"task-stat pending\">\r\n              <span className=\"task-number\">{todoList.pendingReviews.length}</span>\r\n              <span className=\"task-label\">Pending Reviews</span>\r\n            </div>\r\n            <div className=\"task-stat referback\">\r\n              <span className=\"task-number\">{todoList.referBackCases.length}</span>\r\n              <span className=\"task-label\">Refer Back</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderKYCSummary = () => {\r\n    const stats = getStats();\r\n    \r\n    return (\r\n      <div className=\"overview-section\">\r\n        <div className=\"overview-header\">\r\n          <h2 className=\"overview-title\">KYC Summary</h2>\r\n          <p className=\"overview-description\">\r\n            Comprehensive overview of your KYC verification activities and performance.\r\n          </p>\r\n        </div>\r\n\r\n        {/* KYC Stats Grid */}\r\n        <div className=\"kyc-stats-grid\">\r\n          <div className=\"kyc-stat-card approved\">\r\n            <div className=\"kyc-stat-icon\">✅</div>\r\n            <div className=\"kyc-stat-content\">\r\n              <span className=\"kyc-stat-number\">{stats.approved}</span>\r\n              <span className=\"kyc-stat-label\">Approved</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"kyc-stat-card pending\">\r\n            <div className=\"kyc-stat-icon\">⏳</div>\r\n            <div className=\"kyc-stat-content\">\r\n              <span className=\"kyc-stat-number\">{stats.pending}</span>\r\n              <span className=\"kyc-stat-label\">Pending</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"kyc-stat-card refer-back\">\r\n            <div className=\"kyc-stat-icon\">📝</div>\r\n            <div className=\"kyc-stat-content\">\r\n              <span className=\"kyc-stat-number\">{stats.referBack}</span>\r\n              <span className=\"kyc-stat-label\">Refer Back</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"kyc-stat-card rejected\">\r\n            <div className=\"kyc-stat-icon\">❌</div>\r\n            <div className=\"kyc-stat-content\">\r\n              <span className=\"kyc-stat-number\">{stats.rejected}</span>\r\n              <span className=\"kyc-stat-label\">Rejected</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* KYC Performance Metrics */}\r\n        <div className=\"kyc-performance\">\r\n          <h3>Performance Metrics</h3>\r\n          <div className=\"performance-metrics\">\r\n            <div className=\"metric-card rate\">\r\n              <h4>Approval Rate</h4>\r\n              <span className=\"metric-value\">\r\n                {stats.totalAssigned > 0 ? Math.round((stats.approved / stats.totalAssigned) * 100) : 0}%\r\n              </span>\r\n            </div>\r\n            <div className=\"metric-card time\">\r\n              <h4>Processing Time</h4>\r\n              <span className=\"metric-value\">2.3 days</span>\r\n            </div>\r\n            <div className=\"metric-card success\">\r\n              <h4>Success Rate</h4>\r\n              <span className=\"metric-value\">\r\n                {stats.totalAssigned > 0 ? Math.round(((stats.approved + stats.pending) / stats.totalAssigned) * 100) : 0}%\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      {/* Top Bar matching Super Admin layout */}\r\n      <div className=\"top-bar\">\r\n        <div className=\"top-bar-left\">\r\n          <div className=\"logo-container\">\r\n            <div className=\"logo-text\">\r\n              <h1 className=\"logo-title\">DATE</h1>\r\n              <p className=\"logo-subtitle\">Digital Agristack Transaction Enterprises</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"date-display\">{new Date().toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' })}</div>\r\n        </div>\r\n        <div className=\"top-bar-right\">\r\n          <ThemeDropdown />\r\n          <UserProfileDropdown />\r\n        </div>\r\n      </div>\r\n      {/* Sidebar */}\r\n      <aside className=\"dashboard-sidebar\">\r\n        <div className=\"sidebar-header\">\r\n          <div className=\"logo\">\r\n            <div className=\"logo-text\">Welcome !!!</div>\r\n            <div className=\"logo-subtitle\">Employee</div>\r\n          </div>\r\n        </div>\r\n        <nav className=\"sidebar-nav\">\r\n          <button className={`nav-item ${activeTab === 'overview' ? 'active' : ''}`} onClick={() => setActiveTab('overview')}>📊 Overview</button>\r\n          <button className={`nav-item ${activeTab === 'farmers' ? 'active' : ''}`} onClick={() => setActiveTab('farmers')}>👨‍🌾 Assigned Farmers</button>\r\n          <button className={`nav-item ${activeTab === 'progress' ? 'active' : ''}`} onClick={() => setActiveTab('progress')}>📈 KYC Progress</button>\r\n          <button className={`nav-item ${activeTab === 'todo' ? 'active' : ''}`} onClick={() => setActiveTab('todo')}>📋 To-Do List</button>\r\n          <button className={`nav-item ${activeTab === 'kyc-summary' ? 'active' : ''}`} onClick={() => setActiveTab('kyc-summary')}>📝 KYC Summary</button>\r\n        </nav>\r\n      </aside>\r\n\r\n\r\n\r\n      {/* Main Content using shared frame */}\r\n      <div className=\"dashboard-main\">\r\n        <div className=\"dashboard-content\">\r\n          {activeTab === 'overview' && (\r\n          <header className=\"dashboard-header\">\r\n            <div className=\"header-center\">\r\n              <div className=\"welcome-message\">\r\n                <h2 className=\"greeting\">{getGreeting()}, {user?.name || user?.email || 'Employee'}! 🎋</h2>\r\n                <p className=\"welcome-text\">Manage your assigned farmers and KYC verification tasks efficiently.</p>\r\n              </div>\r\n            </div>\r\n          </header>\r\n          )}\r\n\r\n          {/* Render forms with priority over tab content */}\r\n          {showFarmerForm ? (\r\n            <div className=\"dashboard-form-container\">\r\n              <FarmerForm \r\n                isInDashboard={true}\r\n                editData={editingFarmer}\r\n                onClose={() => {\r\n                  setShowFarmerForm(false);\r\n                  setEditingFarmer(null);\r\n                }}\r\n                onSubmit={async (farmerData) => {\r\n                  try {\r\n                    // API call to create/update farmer\r\n                    setAssignedFarmers(prev => [...prev, { ...farmerData, id: Date.now() }]);\r\n                    setShowFarmerForm(false);\r\n                    setEditingFarmer(null);\r\n                    alert('Farmer saved successfully!');\r\n                  } catch (error) {\r\n                    console.error('Error saving farmer:', error);\r\n                    alert('Failed to save farmer. Please try again.');\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {activeTab === 'overview' && renderOverview()}\r\n              {activeTab === 'farmers' && renderAssignedFarmers()}\r\n              {activeTab === 'progress' && renderKYCProgress()}\r\n              {activeTab === 'todo' && renderTodoList()}\r\n              {activeTab === 'kyc-summary' && renderKYCSummary()}\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modals */}\r\n\r\n      {showKYCModal && selectedFarmer && (\r\n        <KYCModal\r\n          farmer={selectedFarmer}\r\n          onClose={() => {\r\n            setShowKYCModal(false);\r\n            setSelectedFarmer(null);\r\n          }}\r\n          onApprove={(farmerId, documents) => handleKYCUpdate(farmerId, 'APPROVED', '', documents)}\r\n          onReject={(farmerId, reason) => handleKYCUpdate(farmerId, 'REJECTED', reason)}\r\n          onReferBack={(farmerId, reason) => handleKYCUpdate(farmerId, 'REFER_BACK', reason)}\r\n        />\r\n      )}\r\n\r\n      {showFarmerDetails && selectedFarmerData && (\r\n        <ViewFarmerRegistrationDetails\r\n          farmerData={selectedFarmerData}\r\n          onClose={handleCloseFarmerDetails}\r\n        />\r\n      )}\r\n\r\n      {showEmployeeDetails && selectedEmployeeData && (\r\n        <ViewEditEmployeeDetails\r\n          employee={selectedEmployeeData}\r\n          onClose={handleCloseEmployeeDetails}\r\n          onUpdate={handleUpdateEmployee}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeDashboard; "],"names":["_ref","_farmer$kycStatus","farmer","onClose","onApprove","onReject","onReferBack","reason","setReason","useState","action","setAction","aadharNumber","setAadharNumber","panNumber","setPanNumber","_jsx","className","children","_jsxs","name","onClick","phone","location","kycStatus","toLowerCase","type","value","onChange","e","target","placeholder","maxLength","length","toUpperCase","trim","disabled","title","htmlFor","id","rows","handleSubmit","alert","EmployeeDashboard","user","logout","useAuth","activeTab","setActiveTab","assignedFarmers","setAssignedFarmers","showFarmerForm","setShowFarmerForm","showKYCModal","setShowKYCModal","selectedFarmer","setSelectedFarmer","showFarmerDetails","setShowFarmerDetails","selectedFarmerData","setSelectedFarmerData","showEmployeeDetails","setShowEmployeeDetails","selectedEmployeeData","setSelectedEmployeeData","editingFarmer","setEditingFarmer","filters","setFilters","assignedDate","showUserDropdown","setShowUserDropdown","useEffect","fetchAssignedFarmers","async","console","log","error","response","employeeAPI","getAssignedFarmers","Array","isArray","transformedData","map","contactNumber","state","district","lastAction","kycReviewedDate","kycSubmittedDate","Date","toISOString","split","notes","assignedEmployee","getStats","totalAssigned","approved","filter","f","pending","referBack","rejected","getTodoList","newAssignments","pendingReviews","referBackCases","handleKYCUpdate","farmerId","newStatus","arguments","undefined","documents","approvalData","updatedBy","updatedAt","kycAPI","approveKYC","rejectKYC","referBackKYC","prev","window","dispatchEvent","CustomEvent","detail","_error$response","data","message","handleViewFarmer","handleEditFarmer","toLocaleDateString","weekday","year","month","day","ThemeDropdown","UserProfileDropdown","getGreeting","hour","getHours","email","FarmerForm","isInDashboard","editData","onSubmit","farmerData","now","_Fragment","renderOverview","stats","todoList","renderAssignedFarmers","filteredFarmers","matchesKycStatus","matchesAssignedDate","DataTable","columns","key","label","customActions","icon","showCondition","prompt","renderKYCProgress","total","approvedPercentage","Math","round","pendingPercentage","referBackPercentage","rejectedPercentage","style","width","renderTodoList","renderKYCSummary","KYCModal","ViewFarmerRegistrationDetails","handleCloseFarmerDetails","ViewEditEmployeeDetails","employee","handleCloseEmployeeDetails","onUpdate","updatedData"],"sourceRoot":""}