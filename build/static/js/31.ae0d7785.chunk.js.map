{"version":3,"file":"static/js/31.ae0d7785.chunk.js","mappings":"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","sources":["components/KYCDocumentUpload.jsx","components/AssignmentModal.jsx","components/RegistrationDetailModal.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/KYCDocumentUpload.css';\r\n\r\nconst KYCDocumentUpload = ({ \r\n  isOpen, \r\n  onClose, \r\n  farmer, \r\n  onUpload, \r\n  onApprove, \r\n  onReject,\r\n  onReferBack \r\n}) => {\r\n  const [uploadedDocuments, setUploadedDocuments] = useState({\r\n    aadhaar: null,\r\n    pan: null,\r\n    landDocuments: null,\r\n    bankPassbook: null,\r\n    incomeCertificate: null,\r\n    casteCertificate: null,\r\n    otherDocuments: []\r\n  });\r\n  const [uploadProgress, setUploadProgress] = useState({});\r\n  const [kycStatus, setKycStatus] = useState('PENDING');\r\n  const [rejectionReason, setRejectionReason] = useState('');\r\n  const [referBackReason, setReferBackReason] = useState('');\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  if (!isOpen || !farmer) return null;\r\n\r\n  const handleFileUpload = (documentType, file) => {\r\n    if (!file) return;\r\n\r\n    // Simulate upload progress\r\n    setUploadProgress(prev => ({ ...prev, [documentType]: 0 }));\r\n    \r\n    const interval = setInterval(() => {\r\n      setUploadProgress(prev => {\r\n        const newProgress = prev[documentType] + 10;\r\n        if (newProgress >= 100) {\r\n          clearInterval(interval);\r\n          setUploadedDocuments(prev => ({\r\n            ...prev,\r\n            [documentType]: {\r\n              name: file.name,\r\n              size: file.size,\r\n              type: file.type,\r\n              uploadedAt: new Date().toISOString(),\r\n              url: URL.createObjectURL(file)\r\n            }\r\n          }));\r\n        }\r\n        return { ...prev, [documentType]: newProgress };\r\n      });\r\n    }, 100);\r\n\r\n    // Simulate API call\r\n    setTimeout(() => {\r\n      setUploadProgress(prev => ({ ...prev, [documentType]: 100 }));\r\n    }, 1000);\r\n  };\r\n\r\n  const handleMultipleFileUpload = (files) => {\r\n    Array.from(files).forEach(file => {\r\n      const newDoc = {\r\n        name: file.name,\r\n        size: file.size,\r\n        type: file.type,\r\n        uploadedAt: new Date().toISOString(),\r\n        url: URL.createObjectURL(file)\r\n      };\r\n      setUploadedDocuments(prev => ({\r\n        ...prev,\r\n        otherDocuments: [...prev.otherDocuments, newDoc]\r\n      }));\r\n    });\r\n  };\r\n\r\n  const removeDocument = (documentType, index = null) => {\r\n    if (index !== null) {\r\n      // Remove from otherDocuments array\r\n      setUploadedDocuments(prev => ({\r\n        ...prev,\r\n        otherDocuments: prev.otherDocuments.filter((_, i) => i !== index)\r\n      }));\r\n    } else {\r\n      // Remove single document\r\n      setUploadedDocuments(prev => ({\r\n        ...prev,\r\n        [documentType]: null\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleApprove = async () => {\r\n    setIsSubmitting(true);\r\n    try {\r\n      // Mock API call\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      setKycStatus('APPROVED');\r\n      onApprove && onApprove(farmer.id, uploadedDocuments);\r\n      alert('KYC approved successfully!');\r\n    } catch (error) {\r\n      console.error('Error approving KYC:', error);\r\n      alert('Error approving KYC');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleReject = async () => {\r\n    if (!rejectionReason.trim()) {\r\n      alert('Please provide a rejection reason');\r\n      return;\r\n    }\r\n    setIsSubmitting(true);\r\n    try {\r\n      // Mock API call\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      setKycStatus('REJECTED');\r\n      onReject && onReject(farmer.id, rejectionReason, uploadedDocuments);\r\n      alert('KYC rejected successfully!');\r\n    } catch (error) {\r\n      console.error('Error rejecting KYC:', error);\r\n      alert('Error rejecting KYC');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleReferBack = async () => {\r\n    if (!referBackReason.trim()) {\r\n      alert('Please provide a reason for referring back');\r\n      return;\r\n    }\r\n    setIsSubmitting(true);\r\n    try {\r\n      // Mock API call\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      setKycStatus('REFER_BACK');\r\n      onReferBack && onReferBack(farmer.id, referBackReason, uploadedDocuments);\r\n      alert('KYC referred back successfully!');\r\n    } catch (error) {\r\n      console.error('Error referring back KYC:', error);\r\n      alert('Error referring back KYC');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const getDocumentStatus = (documentType) => {\r\n    const doc = uploadedDocuments[documentType];\r\n    if (!doc) return 'missing';\r\n    return 'uploaded';\r\n  };\r\n\r\n  const getRequiredDocuments = () => [\r\n    { key: 'aadhaar', label: 'Aadhaar Card', required: true },\r\n    { key: 'pan', label: 'PAN Card', required: true },\r\n    { key: 'landDocuments', label: 'Land Documents', required: true },\r\n    { key: 'bankPassbook', label: 'Bank Passbook', required: true },\r\n    { key: 'incomeCertificate', label: 'Income Certificate', required: false },\r\n    { key: 'casteCertificate', label: 'Caste Certificate', required: false }\r\n  ];\r\n\r\n  const canApprove = () => {\r\n    const requiredDocs = getRequiredDocuments().filter(doc => doc.required);\r\n    return requiredDocs.every(doc => getDocumentStatus(doc.key) === 'uploaded');\r\n  };\r\n\r\n  return (\r\n    <div className=\"kyc-document-upload-component-modal\">\r\n      <div className=\"kyc-document-upload-overlay\" onClick={onClose}></div>\r\n      <div className=\"kyc-document-upload-content\">\r\n        <div className=\"kyc-document-upload-header\">\r\n          <h2>KYC Document Upload & Review</h2>\r\n          <button className=\"kyc-document-upload-close-btn\" onClick={onClose}>&times;</button>\r\n        </div>\r\n\r\n        <div className=\"kyc-document-upload-body\">\r\n          {/* Farmer Information */}\r\n          <div className=\"kyc-document-upload-farmer-info\">\r\n            <h3>Farmer Information</h3>\r\n            <div className=\"kyc-document-upload-info-grid\">\r\n              <div className=\"kyc-document-upload-info-item\">\r\n                <label>Name:</label>\r\n                <span>{farmer.name}</span>\r\n              </div>\r\n              <div className=\"kyc-document-upload-info-item\">\r\n                <label>Phone:</label>\r\n                <span>{farmer.phone}</span>\r\n              </div>\r\n              <div className=\"kyc-document-upload-info-item\">\r\n                <label>State:</label>\r\n                <span>{farmer.state}</span>\r\n              </div>\r\n              <div className=\"kyc-document-upload-info-item\">\r\n                <label>District:</label>\r\n                <span>{farmer.district}</span>\r\n              </div>\r\n              <div className=\"kyc-document-upload-info-item\">\r\n                <label>KYC Status:</label>\r\n                <span className={`kyc-document-upload-status-badge kyc-document-upload-status-${kycStatus.toLowerCase()}`}>\r\n                  {kycStatus}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Document Upload Section */}\r\n          <div className=\"kyc-document-upload-section\">\r\n            <h3>Required Documents</h3>\r\n            <div className=\"kyc-document-upload-document-grid\">\r\n              {getRequiredDocuments().map(doc => (\r\n                <div key={doc.key} className={`kyc-document-upload-document-item ${getDocumentStatus(doc.key)}`}>\r\n                  <div className=\"kyc-document-upload-document-header\">\r\n                    <h4>{doc.label}</h4>\r\n                    {doc.required && <span className=\"kyc-document-upload-required-badge\">Required</span>}\r\n                  </div>\r\n                  \r\n                  {uploadedDocuments[doc.key] ? (\r\n                    <div className=\"kyc-document-upload-uploaded-document\">\r\n                      <div className=\"kyc-document-upload-document-info\">\r\n                        <span className=\"kyc-document-upload-document-name\">{uploadedDocuments[doc.key].name}</span>\r\n                        <span className=\"kyc-document-upload-document-size\">\r\n                          {(uploadedDocuments[doc.key].size / 1024 / 1024).toFixed(2)} MB\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"kyc-document-upload-document-actions\">\r\n                        <button \r\n                          className=\"kyc-document-upload-view-btn\"\r\n                          onClick={() => window.open(uploadedDocuments[doc.key].url)}\r\n                        >\r\n                          👁️ View\r\n                        </button>\r\n                        <button \r\n                          className=\"kyc-document-upload-remove-btn\"\r\n                          onClick={() => removeDocument(doc.key)}\r\n                        >\r\n                          🗑️ Remove\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"kyc-document-upload-upload-area\">\r\n                      {uploadProgress[doc.key] !== undefined ? (\r\n                        <div className=\"kyc-document-upload-progress\">\r\n                          <div className=\"kyc-document-upload-progress-bar\">\r\n                            <div \r\n                              className=\"kyc-document-upload-progress-fill\" \r\n                              style={{ width: `${uploadProgress[doc.key]}%` }}\r\n                            ></div>\r\n                          </div>\r\n                          <span>{uploadProgress[doc.key]}%</span>\r\n                        </div>\r\n                      ) : (\r\n                        <>\r\n                          <input\r\n                            type=\"file\"\r\n                            id={`file-${doc.key}`}\r\n                            accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\"\r\n                            onChange={(e) => handleFileUpload(doc.key, e.target.files[0])}\r\n                            style={{ display: 'none' }}\r\n                          />\r\n                          <label htmlFor={`file-${doc.key}`} className=\"kyc-document-upload-upload-label\">\r\n                            <div className=\"kyc-document-upload-upload-icon\">📁</div>\r\n                            <span>Click to upload {doc.label}</span>\r\n                            <small>PDF, JPG, PNG, DOC (Max 10MB)</small>\r\n                          </label>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            {/* Additional Documents */}\r\n            <div className=\"kyc-document-upload-additional-documents\">\r\n              <h4>Additional Documents</h4>\r\n              <div className=\"kyc-document-upload-upload-area\">\r\n                <input\r\n                  type=\"file\"\r\n                  id=\"additional-files\"\r\n                  multiple\r\n                  accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\"\r\n                  onChange={(e) => handleMultipleFileUpload(e.target.files)}\r\n                  style={{ display: 'none' }}\r\n                />\r\n                <label htmlFor=\"additional-files\" className=\"kyc-document-upload-upload-label\">\r\n                  <div className=\"kyc-document-upload-upload-icon\">📁</div>\r\n                  <span>Upload Additional Documents</span>\r\n                  <small>Multiple files allowed</small>\r\n                </label>\r\n              </div>\r\n\r\n              {uploadedDocuments.otherDocuments.length > 0 && (\r\n                <div className=\"kyc-document-upload-additional-documents-list\">\r\n                  {uploadedDocuments.otherDocuments.map((doc, index) => (\r\n                    <div key={index} className=\"kyc-document-upload-additional-document\">\r\n                      <span className=\"kyc-document-upload-document-name\">{doc.name}</span>\r\n                      <div className=\"kyc-document-upload-document-actions\">\r\n                        <button \r\n                          className=\"kyc-document-upload-view-btn\"\r\n                          onClick={() => window.open(doc.url)}\r\n                        >\r\n                          👁️ View\r\n                        </button>\r\n                        <button \r\n                          className=\"kyc-document-upload-remove-btn\"\r\n                          onClick={() => removeDocument('otherDocuments', index)}\r\n                        >\r\n                          🗑️ Remove\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* KYC Actions */}\r\n          <div className=\"kyc-document-upload-kyc-actions\">\r\n            <h3>KYC Review Actions</h3>\r\n            \r\n            <div className=\"kyc-document-upload-action-buttons\">\r\n              <button\r\n                className={`kyc-document-upload-action-btn kyc-document-upload-approve-btn ${!canApprove() ? 'disabled' : ''}`}\r\n                onClick={handleApprove}\r\n                disabled={!canApprove() || isSubmitting}\r\n              >\r\n                {isSubmitting ? '⏳ Processing...' : '✅ Approve KYC'}\r\n              </button>\r\n\r\n              <button\r\n                className=\"kyc-document-upload-action-btn kyc-document-upload-refer-back-btn\"\r\n                onClick={() => document.getElementById('refer-back-reason').focus()}\r\n                disabled={isSubmitting}\r\n              >\r\n                🔄 Refer Back\r\n              </button>\r\n\r\n              <button\r\n                className=\"kyc-document-upload-action-btn kyc-document-upload-reject-btn\"\r\n                onClick={() => document.getElementById('rejection-reason').focus()}\r\n                disabled={isSubmitting}\r\n              >\r\n                ❌ Reject KYC\r\n              </button>\r\n            </div>\r\n\r\n            {/* Refer Back Reason */}\r\n            <div className=\"kyc-document-upload-reason-input\">\r\n              <label htmlFor=\"refer-back-reason\">Refer Back Reason:</label>\r\n              <textarea\r\n                id=\"refer-back-reason\"\r\n                value={referBackReason}\r\n                onChange={(e) => setReferBackReason(e.target.value)}\r\n                placeholder=\"Enter reason for referring back...\"\r\n                rows=\"3\"\r\n              />\r\n              {referBackReason && (\r\n                <button\r\n                  className=\"kyc-document-upload-submit-reason-btn\"\r\n                  onClick={handleReferBack}\r\n                  disabled={isSubmitting}\r\n                >\r\n                  {isSubmitting ? 'Processing...' : 'Submit Refer Back'}\r\n                </button>\r\n              )}\r\n            </div>\r\n\r\n            {/* Rejection Reason */}\r\n            <div className=\"kyc-document-upload-reason-input\">\r\n              <label htmlFor=\"rejection-reason\">Rejection Reason:</label>\r\n              <textarea\r\n                id=\"rejection-reason\"\r\n                value={rejectionReason}\r\n                onChange={(e) => setRejectionReason(e.target.value)}\r\n                placeholder=\"Enter reason for rejection...\"\r\n                rows=\"3\"\r\n              />\r\n              {rejectionReason && (\r\n                <button\r\n                  className=\"kyc-document-upload-submit-reason-btn kyc-document-upload-reject\"\r\n                  onClick={handleReject}\r\n                  disabled={isSubmitting}\r\n                >\r\n                  {isSubmitting ? 'Processing...' : 'Submit Rejection'}\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"kyc-document-upload-footer\">\r\n          <button className=\"kyc-document-upload-close-button\" onClick={onClose}>\r\n            Close\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KYCDocumentUpload; ","import React, { useState, useEffect } from 'react';\r\nimport '../styles/Forms.css';\r\n\r\nconst AssignmentModal = ({ farmers, employees, onClose, onAssign }) => {\r\n  const [selectedFarmers, setSelectedFarmers] = useState([]);\r\n  const [selectedEmployee, setSelectedEmployee] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Debug logging on mount\r\n  useEffect(() => {\r\n    console.log('=== ASSIGNMENT MODAL MOUNTED ===');\r\n    console.log('Employees on mount:', employees);\r\n    console.log('Employees count on mount:', employees?.length || 0);\r\n    if (employees && employees.length > 0) {\r\n      console.log('First employee on mount:', employees[0]);\r\n    }\r\n  }, []);\r\n\r\n  // Debug logging on every render\r\n  console.log('=== ASSIGNMENT MODAL DEBUG ===');\r\n  console.log('Employees received:', employees);\r\n  console.log('Employees count:', employees?.length || 0);\r\n  console.log('Employees type:', typeof employees);\r\n  console.log('Employees is array:', Array.isArray(employees));\r\n  if (employees && employees.length > 0) {\r\n    console.log('First employee:', employees[0]);\r\n    console.log('First employee name:', employees[0]?.name);\r\n    console.log('First employee designation:', employees[0]?.designation);\r\n    console.log('All employee names:', employees.map(emp => emp?.name));\r\n  }\r\n\r\n  const handleFarmerToggle = (farmerId) => {\r\n    setSelectedFarmers(prev => \r\n      prev.includes(farmerId)\r\n        ? prev.filter(id => id !== farmerId)\r\n        : [...prev, farmerId]\r\n    );\r\n  };\r\n\r\n  const handleSelectAll = () => {\r\n    if (selectedFarmers.length === farmers.length) {\r\n      setSelectedFarmers([]);\r\n    } else {\r\n      setSelectedFarmers(farmers.map(f => f.id));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!selectedEmployee || selectedFarmers.length === 0) {\r\n      alert('Please select an employee and at least one farmer');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const selectedEmployeeData = employees.find(emp => emp.id === parseInt(selectedEmployee));\r\n      const assignments = selectedFarmers.map(farmerId => {\r\n        const farmer = farmers.find(f => f.id === farmerId);\r\n        return {\r\n          farmerId,\r\n          employeeId: parseInt(selectedEmployee),\r\n          employeeName: selectedEmployeeData.name,\r\n          farmerName: farmer.name\r\n        };\r\n      });\r\n\r\n      await onAssign(assignments);\r\n    } catch (error) {\r\n      console.error('Error assigning farmers:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"assignment-modal-overlay\">\r\n      <div className=\"assignment-modal-content large\">\r\n        <div className=\"assignment-modal-header\">\r\n          <h2>Assign Farmers to Employee</h2>\r\n          <button className=\"assignment-modal-close-btn\" onClick={onClose}>×</button>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"assignment-modal-form\">\r\n          <div className=\"assignment-modal-section\">\r\n            <div className=\"assignment-modal-section-header\">\r\n              <h3>Select Employee</h3>\r\n            </div>\r\n            <div className=\"assignment-modal-form-group\">\r\n              <label htmlFor=\"employee\">Employee *</label>\r\n              <select\r\n                id=\"employee\"\r\n                value={selectedEmployee}\r\n                onChange={(e) => setSelectedEmployee(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\">Select Employee</option>\r\n                {(() => {\r\n                  console.log('=== RENDERING EMPLOYEE OPTIONS ===');\r\n                  console.log('Employees for rendering:', employees);\r\n                  console.log('Employees length for rendering:', employees?.length || 0);\r\n                  \r\n                  if (employees && employees.length > 0) {\r\n                    console.log('Rendering employee options:', employees.map(emp => ({\r\n                      id: emp.id,\r\n                      name: emp.name,\r\n                      designation: emp.designation,\r\n                      displayText: `${emp.name || 'Unknown'} - ${emp.designation || 'Employee'}`\r\n                    })));\r\n                  }\r\n                  \r\n                  return employees && employees.length > 0 ? employees.map(emp => (\r\n                    <option key={emp.id} value={emp.id}>\r\n                      {emp.name || 'Unknown'} - {emp.designation || 'Employee'}\r\n                    </option>\r\n                  )) : (\r\n                    <option value=\"\" disabled>No employees available</option>\r\n                  );\r\n                })()}\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"assignment-modal-section\">\r\n            <div className=\"assignment-modal-section-header\">\r\n              <h3>Select Farmers</h3>\r\n              <button \r\n                type=\"button\" \r\n                className=\"assignment-modal-btn-link\"\r\n                onClick={handleSelectAll}\r\n              >\r\n                {selectedFarmers.length === farmers.length ? 'Deselect All' : 'Select All'}\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"assignment-modal-farmers-list\">\r\n              {farmers.length === 0 ? (\r\n                <p className=\"assignment-modal-no-data\">No unassigned farmers available</p>\r\n              ) : (\r\n                farmers.map(farmer => (\r\n                  <div key={farmer.id} className=\"assignment-modal-farmer-item\">\r\n                    <label className=\"assignment-modal-checkbox-label\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={selectedFarmers.includes(farmer.id)}\r\n                        onChange={() => handleFarmerToggle(farmer.id)}\r\n                      />\r\n                      <span className=\"assignment-modal-checkmark\"></span>\r\n                      <div className=\"assignment-modal-farmer-info\">\r\n                        <strong>{farmer.name}</strong>\r\n                        <span>{farmer.phone}</span>\r\n                        <span>{farmer.state}, {farmer.district}</span>\r\n                      </div>\r\n                    </label>\r\n                  </div>\r\n                ))\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"assignment-modal-summary\">\r\n            <div className=\"assignment-modal-summary-item\">\r\n              <span>Selected Farmers:</span>\r\n              <strong>{selectedFarmers.length}</strong>\r\n            </div>\r\n            <div className=\"assignment-modal-summary-item\">\r\n              <span>Selected Employee:</span>\r\n              <strong>\r\n                {selectedEmployee ? employees.find(emp => emp.id === parseInt(selectedEmployee))?.name : 'None'}\r\n              </strong>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"assignment-modal-form-actions\">\r\n            <button \r\n              type=\"button\" \r\n              className=\"assignment-modal-btn-secondary\" \r\n              onClick={onClose}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button \r\n              type=\"submit\" \r\n              className=\"assignment-modal-btn-primary\"\r\n              disabled={loading || selectedFarmers.length === 0 || !selectedEmployee}\r\n            >\r\n              {loading ? 'Assigning...' : `Assign ${selectedFarmers.length} Farmer${selectedFarmers.length !== 1 ? 's' : ''}`}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AssignmentModal; ","import React, { useState } from 'react';\r\nimport { superAdminAPI } from '../api/apiService';\r\n\r\nconst RegistrationDetailModal = ({ registration, onClose, onUpdate }) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    status: registration?.status || '',\r\n    role: registration?.role || ''\r\n  });\r\n\r\n  const handleStatusChange = async (newStatus) => {\r\n    try {\r\n      if (newStatus === 'APPROVED') {\r\n        await superAdminAPI.approveUser(registration.id, registration.role);\r\n      } else if (newStatus === 'REJECTED') {\r\n        await superAdminAPI.rejectUser(registration.id, 'Rejected by admin');\r\n      } else {\r\n        // For other status changes (like PENDING), use the status update endpoint\r\n        await superAdminAPI.updateUserStatus(registration.id, newStatus);\r\n      }\r\n      \r\n      setFormData(prev => ({ ...prev, status: newStatus }));\r\n      onUpdate && onUpdate();\r\n      alert(`Registration ${newStatus.toLowerCase()} successfully!`);\r\n    } catch (error) {\r\n      console.error('Error updating registration status:', error);\r\n      alert(`Failed to update registration status: ${error.response?.data?.message || error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleRoleChange = async (newRole) => {\r\n    try {\r\n      await superAdminAPI.updateUser(registration.id, { role: newRole });\r\n      setFormData(prev => ({ ...prev, role: newRole }));\r\n      onUpdate && onUpdate();\r\n      alert('Role updated successfully!');\r\n    } catch (error) {\r\n      console.error('Error updating role:', error);\r\n      alert(`Failed to update role: ${error.response?.data?.message || error.message}`);\r\n    }\r\n  };\r\n\r\n  if (!registration) return null;\r\n\r\n  return (\r\n    <div className=\"registration-detail-modal-overlay\">\r\n      <div className=\"registration-detail-modal-content registration-detail-modal\">\r\n        <div className=\"registration-detail-modal-header\">\r\n          <h2>Registration Details</h2>\r\n          <button className=\"registration-detail-modal-close\" onClick={onClose}>×</button>\r\n        </div>\r\n        \r\n        <div className=\"registration-detail-modal-body\">\r\n          <div className=\"registration-detail-modal-registration-info\">\r\n            <div className=\"registration-detail-modal-info-section\">\r\n              <h3>Personal Information</h3>\r\n              <div className=\"registration-detail-modal-info-grid\">\r\n                <div className=\"registration-detail-modal-info-item\">\r\n                  <label>Name:</label>\r\n                  <span>{registration.name}</span>\r\n                </div>\r\n                <div className=\"registration-detail-modal-info-item\">\r\n                  <label>Email:</label>\r\n                  <span>{registration.email}</span>\r\n                </div>\r\n                <div className=\"registration-detail-modal-info-item\">\r\n                  <label>Phone:</label>\r\n                  <span>{registration.phoneNumber}</span>\r\n                </div>\r\n                <div className=\"registration-detail-modal-info-item\">\r\n                  <label>Gender:</label>\r\n                  <span>{registration.gender}</span>\r\n                </div>\r\n                <div className=\"registration-detail-modal-info-item\">\r\n                  <label>Date of Birth:</label>\r\n                  <span>{registration.dateOfBirth}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"registration-detail-modal-info-section\">\r\n              <h3>Account Information</h3>\r\n              <div className=\"registration-detail-modal-info-grid\">\r\n                <div className=\"registration-detail-modal-info-item\">\r\n                  <label>Role:</label>\r\n                  <div className=\"registration-detail-modal-editable-field\">\r\n                    {isEditing ? (\r\n                      <select \r\n                        value={formData.role} \r\n                        onChange={(e) => handleRoleChange(e.target.value)}\r\n                        className=\"registration-detail-modal-form-select\"\r\n                      >\r\n                        <option value=\"FARMER\">Farmer</option>\r\n                        <option value=\"EMPLOYEE\">Employee</option>\r\n                        <option value=\"ADMIN\">Admin</option>\r\n                        <option value=\"SUPER_ADMIN\">Super Admin</option>\r\n                      </select>\r\n                    ) : (\r\n                      <span className={`registration-detail-modal-status-badge registration-detail-modal-role-${registration.role.toLowerCase()}`}>\r\n                        {registration.role}\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"registration-detail-modal-info-item\">\r\n                  <label>Status:</label>\r\n                  <div className=\"registration-detail-modal-editable-field\">\r\n                    {isEditing ? (\r\n                      <select \r\n                        value={formData.status} \r\n                        onChange={(e) => handleStatusChange(e.target.value)}\r\n                        className=\"registration-detail-modal-form-select\"\r\n                      >\r\n                        <option value=\"PENDING\">Pending</option>\r\n                        <option value=\"APPROVED\">Approved</option>\r\n                        <option value=\"REJECTED\">Rejected</option>\r\n                      </select>\r\n                    ) : (\r\n                      <span className={`registration-detail-modal-status-badge registration-detail-modal-status-${registration.status.toLowerCase()}`}>\r\n                        {registration.status}\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"registration-detail-modal-info-item\">\r\n                  <label>KYC Status:</label>\r\n                  <span className={`registration-detail-modal-status-badge registration-detail-modal-kyc-${registration.kycStatus?.toLowerCase() || 'pending'}`}>\r\n                    {registration.kycStatus || 'PENDING'}\r\n                  </span>\r\n                </div>\r\n                <div className=\"registration-detail-modal-info-item\">\r\n                  <label>Registration Date:</label>\r\n                  <span>{new Date(registration.createdAt).toLocaleDateString()}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {registration.state && (\r\n              <div className=\"registration-detail-modal-info-section\">\r\n                <h3>Location Information</h3>\r\n                <div className=\"registration-detail-modal-info-grid\">\r\n                  <div className=\"registration-detail-modal-info-item\">\r\n                    <label>State:</label>\r\n                    <span>{registration.state}</span>\r\n                  </div>\r\n                  <div className=\"registration-detail-modal-info-item\">\r\n                    <label>District:</label>\r\n                    <span>{registration.district}</span>\r\n                  </div>\r\n                  <div className=\"registration-detail-modal-info-item\">\r\n                    <label>Region:</label>\r\n                    <span>{registration.region}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"registration-detail-modal-footer\">\r\n          <button \r\n            className={`registration-detail-modal-action-btn ${isEditing ? 'registration-detail-modal-secondary' : 'registration-detail-modal-primary'}`}\r\n            onClick={() => setIsEditing(!isEditing)}\r\n          >\r\n            {isEditing ? 'Cancel Editing' : 'Edit Registration'}\r\n          </button>\r\n          <button className=\"registration-detail-modal-action-btn registration-detail-modal-secondary\" onClick={onClose}>\r\n            Close\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationDetailModal; "],"names":["_ref","isOpen","onClose","farmer","onUpload","onApprove","onReject","onReferBack","uploadedDocuments","setUploadedDocuments","useState","aadhaar","pan","landDocuments","bankPassbook","incomeCertificate","casteCertificate","otherDocuments","uploadProgress","setUploadProgress","kycStatus","setKycStatus","rejectionReason","setRejectionReason","referBackReason","setReferBackReason","isSubmitting","setIsSubmitting","removeDocument","documentType","index","arguments","length","undefined","prev","filter","_","i","getDocumentStatus","canApprove","key","label","required","doc","every","_jsxs","className","children","_jsx","onClick","name","phone","state","district","toLowerCase","map","size","toFixed","window","open","url","style","width","_Fragment","type","id","accept","onChange","e","handleFileUpload","file","interval","setInterval","newProgress","clearInterval","uploadedAt","Date","toISOString","URL","createObjectURL","setTimeout","target","files","display","htmlFor","multiple","handleMultipleFileUpload","Array","from","forEach","newDoc","async","Promise","resolve","alert","error","console","disabled","document","getElementById","focus","value","placeholder","rows","trim","_employees$find","farmers","employees","onAssign","selectedFarmers","setSelectedFarmers","selectedEmployee","setSelectedEmployee","loading","setLoading","_employees$","_employees$2","useEffect","log","isArray","designation","emp","onSubmit","preventDefault","selectedEmployeeData","find","parseInt","assignments","farmerId","f","employeeId","employeeName","farmerName","displayText","handleSelectAll","checked","includes","handleFarmerToggle","_registration$kycStat","registration","onUpdate","isEditing","setIsEditing","formData","setFormData","status","role","email","phoneNumber","gender","dateOfBirth","superAdminAPI","updateUser","newRole","_error$response2","_error$response2$data","response","data","message","handleRoleChange","newStatus","approveUser","rejectUser","updateUserStatus","_error$response","_error$response$data","handleStatusChange","createdAt","toLocaleDateString","region"],"sourceRoot":""}