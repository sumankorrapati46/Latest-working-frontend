{"version":3,"file":"static/js/471.32565b11.chunk.js","mappings":"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","sources":["api/apiService.js","components/FarmerRegistrationForm.jsx"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8080/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    console.log('🔐 API Request - Token from localStorage:', token ? 'Present' : 'Missing');\n    console.log('🔐 API Request - URL:', config.url);\n    console.log('🔐 API Request - Method:', config.method);\n    \n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n      console.log('🔐 API Request - Authorization header added');\n    } else {\n      console.log('⚠️ API Request - No token found in localStorage');\n    }\n    return config;\n  },\n  (error) => {\n    console.error('❌ API Request interceptor error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    console.error('❌ API Response Error:', {\n      status: error.response?.status,\n      statusText: error.response?.statusText,\n      url: error.config?.url,\n      method: error.config?.method,\n      message: error.message\n    });\n    \n    if (error.response?.status === 401 || error.response?.status === 403) {\n      console.error('🔐 Authentication failed - clearing tokens and redirecting to login');\n      \n      // Comprehensive token clearing\n      const keysToRemove = [\n        'token', 'user', 'authToken', 'jwtToken', 'accessToken', \n        'refreshToken', 'auth', 'session', 'login'\n      ];\n      \n      keysToRemove.forEach(key => {\n        localStorage.removeItem(key);\n        sessionStorage.removeItem(key);\n      });\n      \n      // Clear all storage\n      localStorage.clear();\n      sessionStorage.clear();\n      \n      // Clear all cookies\n      document.cookie.split(\";\").forEach(function(c) { \n        document.cookie = c.replace(/^ +/, \"\").replace(/=.*/, \"=;expires=\" + new Date().toUTCString() + \";path=/\"); \n      });\n      \n      // Only redirect if not already on login page\n      if (!window.location.pathname.includes('/login')) {\n        window.location.href = '/login';\n      }\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Authentication API calls\nexport const authAPI = {\n  // Login\n  login: async (credentials) => {\n    const response = await api.post('/auth/login', credentials);\n    return response.data;\n  },\n\n  // Get user profile\n  getProfile: async () => {\n    const response = await api.get('/auth/profile');\n    return response.data;\n  },\n\n  // Register user\n  register: async (userData) => {\n    const response = await api.post('/auth/register', userData);\n    return response.data;\n  },\n\n  // Send OTP\n  sendOTP: async (email) => {\n    const response = await api.post('/auth/send-otp', { emailOrPhone: email });\n    return response.data;\n  },\n\n  // Verify OTP\n  verifyOTP: async (otpData) => {\n    const response = await api.post('/auth/verify-otp', { \n      emailOrPhone: otpData.email, \n      otp: otpData.otp \n    });\n    return response.data;\n  },\n\n  // Resend OTP\n  resendOTP: async (email) => {\n    const response = await api.post('/auth/resend-otp', { emailOrPhone: email });\n    return response.data;\n  },\n\n  // Forgot password\n  forgotPassword: async (emailOrPhone) => {\n    const response = await api.post('/auth/forgot-password', { emailOrPhone });\n    return response.data;\n  },\n\n  // Forgot user ID\n  forgotUserId: async (emailOrPhone) => {\n    const response = await api.post('/auth/forgot-user-id', { emailOrPhone });\n    return response.data;\n  },\n\n  // Reset password\n  resetPassword: async (resetData) => {\n    const response = await api.post('/auth/reset-password', resetData);\n    return response.data;\n  },\n\n  // Change password\n  changePassword: async (passwordData) => {\n    const response = await api.post('/auth/change-password', passwordData);\n    return response.data;\n  },\n\n  // Reset password (for first-time password change)\n  resetPasswordConfirm: async (resetData) => {\n    const response = await api.post('/auth/reset-password/confirm', resetData);\n    return response.data;\n  },\n\n  // Change user ID\n  changeUserId: async (userIdData) => {\n    const response = await api.post('/auth/change-user-id', userIdData);\n    return response.data;\n  },\n\n  // Get countries\n  getCountries: async () => {\n    const response = await api.get('/auth/countries');\n    return response.data;\n  },\n\n  // Get states\n  getStates: async (countryId) => {\n    const response = await api.post('/auth/states', { countryId });\n    return response.data;\n  }\n};\n\n// Super Admin API calls\nexport const superAdminAPI = {\n  // Get all users (registrations)\n  getAllUsers: async () => {\n    const response = await api.get('/super-admin/registration-list');\n    return response.data;\n  },\n\n  // Get registration list with filters\n  getRegistrationList: async (filters = {}) => {\n    const response = await api.get('/super-admin/registration-list', { params: filters });\n    return response.data;\n  },\n\n  // Get registration list by status\n  getRegistrationListByStatus: async (status) => {\n    const response = await api.get('/super-admin/registration-list/filter', { params: { status } });\n    return response.data;\n  },\n\n  // Search registrations\n  searchRegistrations: async (query) => {\n    const response = await api.get('/super-admin/registration-list/search', { params: { query } });\n    return response.data;\n  },\n\n  // Get pending registrations\n  getPendingRegistrations: async () => {\n    const response = await api.get('/super-admin/pending-registrations');\n    return response.data;\n  },\n\n  // Get approved users\n  getApprovedUsers: async () => {\n    const response = await api.get('/super-admin/approved-users');\n    return response.data;\n  },\n\n  // Get users by role\n  getUsersByRole: async (role) => {\n    const response = await api.get(`/super-admin/users/by-role/${role}`);\n    return response.data;\n  },\n\n  // Get pending users by role\n  getPendingUsersByRole: async (role) => {\n    const response = await api.get(`/super-admin/pending-users/by-role/${role}`);\n    return response.data;\n  },\n\n  // Approve user\n  approveUser: async (userId, role) => {\n    const response = await api.put(`/auth/users/${userId}/approve`, { role });\n    return response.data;\n  },\n\n  // Reject user (update status to REJECTED)\n  rejectUser: async (userId, reason) => {\n    const response = await api.put(`/auth/users/${userId}/status`, { status: 'REJECTED' });\n    return response.data;\n  },\n\n  // Delete user\n  deleteUser: async (userId) => {\n    const response = await api.delete(`/super-admin/users/${userId}`);\n    return response.data;\n  },\n\n  // Update user\n  updateUser: async (userId, userData) => {\n    const response = await api.put(`/super-admin/users/${userId}`, userData);\n    return response.data;\n  },\n\n  // Update user status\n  updateUserStatus: async (userId, status) => {\n    const response = await api.put(`/auth/users/${userId}/status`, { status });\n    return response.data;\n  },\n\n  // Get dashboard stats\n  getDashboardStats: async () => {\n    const response = await api.get('/super-admin/dashboard/stats');\n    return response.data;\n  },\n\n  // Bulk assign farmers to employee\n  bulkAssignFarmers: async (farmerIds, employeeId) => {\n    const response = await api.post('/super-admin/bulk-assign-farmers', { farmerIds, employeeId });\n    return response.data;\n  },\n\n  // Single assign farmer to employee (fallback)\n  assignFarmer: async (farmerId, employeeId) => {\n    const response = await api.post('/super-admin/assign-farmer', null, { \n      params: { farmerId, employeeId } \n    });\n    return response.data;\n  }\n};\n\n// Farmers API calls\nexport const farmersAPI = {\n  // Get all farmers\n  getAllFarmers: async (filters = {}) => {\n    const response = await api.get('/super-admin/farmers', { params: filters });\n    return response.data;\n  },\n\n  // Get farmer by ID\n  getFarmerById: async (id) => {\n    const response = await api.get(`/super-admin/farmers/${id}`);\n    return response.data;\n  },\n\n  // Create farmer\n  createFarmer: async (farmerData) => {\n    const response = await api.post('/super-admin/farmers', farmerData);\n    return response.data;\n  },\n\n  // Update farmer\n  updateFarmer: async (id, farmerData) => {\n    const response = await api.put(`/super-admin/farmers/${id}`, farmerData);\n    return response.data;\n  },\n\n  // Delete farmer\n  deleteFarmer: async (id) => {\n    const response = await api.delete(`/super-admin/farmers/${id}`);\n    return response.data;\n  },\n\n  // Assign farmer to employee\n  assignFarmer: async (farmerId, employeeId) => {\n    const response = await api.post(`/super-admin/farmers/${farmerId}/assign`, { employeeId });\n    return response.data;\n  },\n\n  // Get farmer statistics\n  getFarmerStats: async () => {\n    const response = await api.get('/super-admin/farmers/stats');\n    return response.data;\n  }\n};\n\n// Admin-specific API calls\nexport const adminAPI = {\n  // Get all farmers for admin\n  getAllFarmers: async (filters = {}) => {\n    const response = await api.get('/admin/farmers', { params: filters });\n    return response.data;\n  },\n\n  // Get all employees for admin\n  getAllEmployees: async (filters = {}) => {\n    const response = await api.get('/admin/employees', { params: filters });\n    return response.data;\n  },\n\n  // Get farmers with KYC status\n  getFarmersWithKyc: async () => {\n    const response = await api.get('/admin/farmers-with-kyc');\n    return response.data;\n  },\n\n  // Get employees with stats\n  getEmployeesWithStats: async () => {\n    const response = await api.get('/admin/employees-with-stats');\n    return response.data;\n  },\n\n  // Get farmers by employee\n  getFarmersByEmployee: async (employeeId) => {\n    const response = await api.get(`/admin/employees/${employeeId}/assigned-farmers`);\n    return response.data;\n  },\n\n  // Get todo list for admin\n  getTodoList: async () => {\n    const response = await api.get('/admin/todo-list');\n    return response.data;\n  },\n\n  // Get enhanced todo list\n  getEnhancedTodoList: async () => {\n    const response = await api.get('/admin/enhanced-todo-list');\n    return response.data;\n  },\n\n  // Get dashboard stats\n  getDashboardStats: async () => {\n    const response = await api.get('/admin/dashboard-stats');\n    return response.data;\n  },\n\n  // Filter farmers\n  filterFarmers: async (filters = {}) => {\n    const response = await api.get('/admin/farmers/filter', { params: filters });\n    return response.data;\n  },\n\n  // Get locations\n  getLocations: async () => {\n    const response = await api.get('/admin/locations');\n    return response.data;\n  },\n\n  // Bulk assign farmers to employee\n  bulkAssignFarmers: async (farmerIds, employeeId) => {\n    const response = await api.post('/admin/bulk-assign-farmers', { farmerIds, employeeId });\n    return response.data;\n  },\n\n  // Single assign farmer to employee (fallback)\n  assignFarmer: async (farmerId, employeeId) => {\n    const response = await api.post('/admin/assign-farmer', null, { \n      params: { farmerId, employeeId } \n    });\n    return response.data;\n  },\n\n  // Get assignment history\n  getAssignmentHistory: async (filters = {}) => {\n    const response = await api.get('/admin/assignment-history', { params: filters });\n    return response.data;\n  },\n\n  // Get farmers by assignment status\n  getFarmersByAssignmentStatus: async (assignmentStatus) => {\n    const response = await api.get('/admin/farmers/by-assignment-status', { \n      params: { assignmentStatus } \n    });\n    return response.data;\n  },\n\n  // Get all registrations for admin\n  getAllRegistrations: async (filters = {}) => {\n    const response = await api.get('/admin/registration-list', { params: filters });\n    return response.data;\n  },\n\n  // Get registration list by status for admin\n  getRegistrationListByStatus: async (status) => {\n    const response = await api.get('/admin/registration-list/filter', { params: { status } });\n    return response.data;\n  },\n\n  // Approve registration for admin\n  approveRegistration: async (registrationId, approvalData) => {\n    const response = await api.post(`/admin/registrations/${registrationId}/approve`, approvalData);\n    return response.data;\n  },\n\n  // Reject registration for admin\n  rejectRegistration: async (registrationId, rejectionData) => {\n    const response = await api.post(`/admin/registrations/${registrationId}/reject`, rejectionData);\n    return response.data;\n  }\n};\n\n// Employees API calls\nexport const employeesAPI = {\n  // Get all employees\n  getAllEmployees: async (filters = {}) => {\n    const response = await api.get('/super-admin/employees', { params: filters });\n    return response.data;\n  },\n\n  // Get employee by ID\n  getEmployeeById: async (id) => {\n    const response = await api.get(`/super-admin/employees/${id}`);\n    return response.data;\n  },\n\n  // Create employee\n  createEmployee: async (employeeData) => {\n    const response = await api.post('/super-admin/employees', employeeData);\n    return response.data;\n  },\n\n  // Update employee\n  updateEmployee: async (id, employeeData) => {\n    const response = await api.put(`/super-admin/employees/${id}`, employeeData);\n    return response.data;\n  },\n\n  // Delete employee\n  deleteEmployee: async (id) => {\n    const response = await api.delete(`/super-admin/employees/${id}`);\n    return response.data;\n  },\n\n  // Get employee statistics\n  getEmployeeStats: async () => {\n    const response = await api.get('/super-admin/employees/stats');\n    return response.data;\n  }\n};\n\n// Employee-specific API calls (for employee dashboard)\nexport const employeeAPI = {\n  // Get assigned farmers for employee\n  getAssignedFarmers: async () => {\n    const response = await api.get('/employee/assigned-farmers');\n    return response.data;\n  },\n\n  // Get farmer details by ID\n  getFarmerById: async (farmerId) => {\n    const response = await api.get(`/employee/farmers/${farmerId}`);\n    return response.data;\n  },\n\n  // Update farmer information\n  updateFarmer: async (farmerId, farmerData) => {\n    const response = await api.put(`/employee/farmers/${farmerId}`, farmerData);\n    return response.data;\n  },\n\n  // Get employee profile\n  getProfile: async () => {\n    const response = await api.get('/employee/profile');\n    return response.data;\n  },\n\n  // Update employee profile\n  updateProfile: async (profileData) => {\n    const response = await api.put('/employee/profile', profileData);\n    return response.data;\n  }\n};\n\n// KYC API calls\nexport const kycAPI = {\n  // Approve KYC\n  approveKYC: async (farmerId, approvalData) => {\n    const response = await api.post(`/kyc/${farmerId}/approve`, approvalData);\n    return response.data;\n  },\n\n  // Reject KYC\n  rejectKYC: async (farmerId, rejectionData) => {\n    const response = await api.post(`/kyc/${farmerId}/reject`, rejectionData);\n    return response.data;\n  },\n\n  // Refer back KYC\n  referBackKYC: async (farmerId, referralData) => {\n    const response = await api.post(`/kyc/${farmerId}/refer-back`, referralData);\n    return response.data;\n  },\n\n  // Get KYC status\n  getKYCStatus: async (farmerId) => {\n    const response = await api.get(`/kyc/${farmerId}/status`);\n    return response.data;\n  },\n\n  // Upload KYC documents\n  uploadKYCDocuments: async (farmerId, documents) => {\n    // Create FormData for file upload\n    const formData = new FormData();\n    \n    // Add files to FormData\n    Object.keys(documents).forEach(key => {\n      if (documents[key]) {\n        if (Array.isArray(documents[key])) {\n          // Handle multiple files\n          documents[key].forEach((file, index) => {\n            formData.append(`${key}[${index}]`, file);\n          });\n        } else {\n          // Handle single file\n          formData.append(key, documents[key]);\n        }\n      }\n    });\n\n    // Use separate axios instance for file uploads (no Content-Type header)\n    const uploadApi = axios.create({\n      baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8080/api',\n      timeout: 30000, // Longer timeout for file uploads\n    });\n\n    // Add auth token to upload requests\n    uploadApi.interceptors.request.use((config) => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    });\n\n    const response = await uploadApi.post(`/kyc/${farmerId}/upload`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  },\n\n  // Get KYC history\n  getKYCHistory: async (farmerId) => {\n    const response = await api.get(`/kyc/${farmerId}/history`);\n    return response.data;\n  },\n\n  // Get KYC document download URL\n  getKYCDocumentUrl: async (farmerId, documentType) => {\n    const response = await api.get(`/kyc/${farmerId}/documents/${documentType}/download`);\n    return response.data;\n  },\n\n  // Delete KYC document\n  deleteKYCDocument: async (farmerId, documentType) => {\n    const response = await api.delete(`/kyc/${farmerId}/documents/${documentType}`);\n    return response.data;\n  }\n};\n\nexport default api;","import React, { useState, useEffect } from 'react';\r\nimport { useForm, FormProvider } from 'react-hook-form';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/FarmerRegistration.css';\r\n\r\nconst FarmerRegistrationForm = ({ isInDashboard = false, editData = null, onClose, onSubmit: onSubmitProp }) => {\r\n  const navigate = useNavigate();\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const [photoPreviewStep0, setPhotoPreviewStep0] = useState(null);\r\n  const [photoPreviewStep3, setPhotoPreviewStep3] = useState(null);\r\n  const [selectedPhotoName, setSelectedPhotoName] = useState('');\r\n  const [selectedDoc, setSelectedDoc] = useState('');\r\n  const [cropCategoryStep3, setCropCategoryStep3] = useState('');\r\n  const [cropCategoryStep4, setCropCategoryStep4] = useState('');\r\n  const [selectedIrrigationTab, setSelectedIrrigationTab] = useState('Current');\r\n  const [farmerData] = useState(editData);\r\n  const [photoPreview] = useState(editData?.photo || null);\r\n\r\n  // Initialize photo name if editing\r\n  useEffect(() => {\r\n    if (editData?.photoFileName) {\r\n      setSelectedPhotoName(editData.photoFileName);\r\n    }\r\n  }, [editData]);\r\n\r\n  const totalSteps = 8;\r\n\r\n  const methods = useForm({\r\n    defaultValues: {\r\n      // Step 0 - Personal Details\r\n      salutation: editData?.salutation || '',\r\n      firstName: editData?.firstName || '',\r\n      middleName: editData?.middleName || '',\r\n      lastName: editData?.lastName || '',\r\n      gender: editData?.gender || '',\r\n      nationality: editData?.nationality || '',\r\n      dateOfBirth: editData?.dateOfBirth || '',\r\n      contactNumber: editData?.contactNumber || '',\r\n      fatherName: editData?.fatherName || '',\r\n      alternativeType: editData?.alternativeType || '',\r\n      alternativeNumber: editData?.alternativeNumber || '',\r\n      photo: editData?.photo || null,\r\n\r\n      // Step 1 - Address\r\n      country: editData?.country || 'India',\r\n      state: editData?.state || '',\r\n      district: editData?.district || '',\r\n      block: editData?.block || '',\r\n      village: editData?.village || '',\r\n      pincode: editData?.pincode || '',\r\n\r\n      // Step 2 - Professional Details\r\n      education: editData?.education || '',\r\n      experience: editData?.experience || '',\r\n\r\n      // Step 3 - Current Crop Details\r\n      currentSurveyNumber: editData?.currentSurveyNumber || '',\r\n      currentLandHolding: editData?.currentLandHolding || '',\r\n      currentGeoTag: editData?.currentGeoTag || '',\r\n      currentCrop: editData?.currentCrop || '',\r\n      currentNetIncome: editData?.currentNetIncome || '',\r\n      currentSoilTest: editData?.currentSoilTest || '',\r\n      currentSoilTestCertificateFileName: editData?.currentSoilTestCertificateFileName || null,\r\n\r\n      // Step 4 - Proposed Crop Details\r\n      proposedSurveyNumber: editData?.proposedSurveyNumber || '',\r\n      proposedLandHolding: editData?.proposedLandHolding || '',\r\n      proposedGeoTag: editData?.proposedGeoTag || '',\r\n      cropType: editData?.cropType || '',\r\n      netIncome: editData?.netIncome || '',\r\n      proposedSoilTest: editData?.proposedSoilTest || '',\r\n      soilTestCertificate: editData?.soilTestCertificate || null,\r\n\r\n      // Step 5 - Irrigation Details\r\n      currentWaterSource: editData?.currentWaterSource || '',\r\n      currentDischargeLPH: editData?.currentDischargeLPH || '',\r\n      currentSummerDischarge: editData?.currentSummerDischarge || '',\r\n      currentBorewellLocation: editData?.currentBorewellLocation || '',\r\n      proposedWaterSource: editData?.proposedWaterSource || '',\r\n      proposedDischargeLPH: editData?.proposedDischargeLPH || '',\r\n      proposedSummerDischarge: editData?.proposedSummerDischarge || '',\r\n      proposedBorewellLocation: editData?.proposedBorewellLocation || '',\r\n\r\n      // Step 6 - Bank Details\r\n      bankName: editData?.bankName || '',\r\n      accountNumber: editData?.accountNumber || '',\r\n      branchName: editData?.branchName || '',\r\n      ifscCode: editData?.ifscCode || '',\r\n      passbookFile: editData?.passbookFile || null,\r\n\r\n      // Step 7 - Documents\r\n      documentType: editData?.documentType || '',\r\n      documentNumber: editData?.documentNumber || '',\r\n      documentFileName: editData?.documentFileName || null,\r\n    }\r\n  });\r\n\r\n  const { register, handleSubmit, watch, setValue, trigger, clearErrors, formState: { errors } } = methods;\r\n\r\n  const cropOptions = {\r\n    'Cereals': ['Rice', 'Wheat', 'Maize', 'Sorghum', 'Pearl Millet', 'Finger Millet'],\r\n    'Pulses': ['Chickpea', 'Pigeon Pea', 'Lentil', 'Mung Bean', 'Urad Bean', 'Cowpea'],\r\n    'Oilseeds': ['Groundnut', 'Soybean', 'Sunflower', 'Sesame', 'Mustard', 'Safflower'],\r\n    'Vegetables': ['Tomato', 'Onion', 'Potato', 'Brinjal', 'Cabbage', 'Cauliflower'],\r\n    'Fruits': ['Mango', 'Banana', 'Orange', 'Apple', 'Grape', 'Pomegranate'],\r\n    'Cash Crops': ['Cotton', 'Sugarcane', 'Tobacco', 'Jute', 'Tea', 'Coffee']\r\n  };\r\n\r\n  const waterSourceOptions = [\r\n    'Borewell',\r\n    'Open Well',\r\n    'Canal',\r\n    'River',\r\n    'Pond',\r\n    'Rainfed',\r\n    'Drip Irrigation',\r\n    'Sprinkler Irrigation'\r\n  ];\r\n\r\n  const stepTitles = [\r\n    'Personal Details',\r\n    'Address Information',\r\n    'Professional Details',\r\n    'Current Crop Details',\r\n    'Proposed Crop Details',\r\n    'Irrigation Details',\r\n    'Bank Details',\r\n    'Documents'\r\n  ];\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      console.log('Form submitted with data:', data);\r\n      \r\n      // Call the onSubmit prop which should handle API call and state update\r\n      if (onSubmitProp) {\r\n        await onSubmitProp(data);\r\n      } else {\r\n        // Fallback for standalone mode\r\n        if (isInDashboard) {\r\n          onClose && onClose();\r\n        } else {\r\n          navigate('/admin/dashboard');\r\n        }\r\n        alert('Farmer registration completed successfully!');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error submitting form:', error);\r\n      alert('Error submitting form. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`farmer-registration-container ${isInDashboard ? 'dashboard-mode' : ''}`}>\r\n      <div className=\"farmer-registration-card\">\r\n        {/* Header */}\r\n        <div className=\"form-header\">\r\n          <div className=\"header-content\">\r\n            <div className=\"header-left\">\r\n              <h2 className=\"form-title\">\r\n                {editData ? 'Edit Farmer Details' : 'Add New Farmer'}\r\n              </h2>\r\n              <p className=\"form-subtitle\">\r\n                Step {currentStep + 1} of {totalSteps}: {stepTitles[currentStep]}\r\n              </p>\r\n            </div>\r\n            \r\n            {/* Back Button */}\r\n            {isInDashboard && (\r\n              <button \r\n                className=\"back-button\" \r\n                onClick={onClose}\r\n                type=\"button\"\r\n              >\r\n                ← Back\r\n              </button>\r\n            )}\r\n          </div>\r\n          \r\n          {/* Progress Bar */}\r\n          <div className=\"progress-container\">\r\n            <div className=\"progress-bar\">\r\n              <div \r\n                className=\"progress-fill\" \r\n                style={{ width: `${((currentStep + 1) / totalSteps) * 100}%` }}\r\n              ></div>\r\n            </div>\r\n            <span className=\"progress-text\">{currentStep + 1} / {totalSteps}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <FormProvider {...methods}>\r\n          <form onSubmit={methods.handleSubmit(onSubmit)} className=\"farmer-registration-form\">\r\n            {/* Step 0 - Personal Details */}\r\n            {currentStep === 0 && (\r\n              <div className=\"form-step\">\r\n                <div className=\"step-content\">\r\n                  <div className=\"form-grid\">\r\n                    <div className=\"form-column\">\r\n                      {/* Photo Upload */}\r\n                      <div className=\"form-group photo-upload\">\r\n                        <label className=\"form-label\">\r\n                          Photo <span className=\"optional\">(Optional)</span>\r\n                        </label>\r\n                        <div className=\"photo-container\">\r\n                          <div className=\"photo-preview-box\">\r\n                            {photoPreviewStep0 ? (\r\n                              <img src={photoPreviewStep0} alt=\"Preview\" className=\"photo-preview\" />\r\n                            ) : photoPreview ? (\r\n                              <img src={photoPreview} alt=\"Farmer\" className=\"photo-preview\" />\r\n                            ) : (\r\n                              <div className=\"photo-placeholder\">\r\n                                <span className=\"upload-icon\">📷</span>\r\n                                <span>Upload Photo</span>\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                          <input\r\n                            type=\"file\"\r\n                            accept=\"image/*\"\r\n                            className=\"photo-input\"\r\n                            {...register(\"photo\")}\r\n                            onChange={(e) => {\r\n                              const file = e.target.files[0];\r\n                              if (file) {\r\n                                setPhotoPreviewStep0(URL.createObjectURL(file));\r\n                                setValue(\"photo\", file, { shouldValidate: true });\r\n                                setSelectedPhotoName(file.name);\r\n                                clearErrors(\"photo\");\r\n                              }\r\n                            }}\r\n                          />\r\n                          {selectedPhotoName && (\r\n                            <div className=\"file-name\">{selectedPhotoName}</div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <label className=\"form-label\">Salutation <span className=\"required\">*</span></label>\r\n                        <select className=\"form-input\" {...register(\"salutation\", { required: \"Salutation is required\" })}>\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"Mr.\">Mr.</option>\r\n                          <option value=\"Mrs.\">Mrs.</option>\r\n                          <option value=\"Ms.\">Ms.</option>\r\n                          <option value=\"Miss.\">Miss.</option>\r\n                          <option value=\"Dr.\">Dr.</option>\r\n                        </select>\r\n                        {errors.salutation && <span className=\"error-message\">{errors.salutation.message}</span>}\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <label className=\"form-label\">First Name <span className=\"required\">*</span></label>\r\n                        <input\r\n                          className=\"form-input\"\r\n                          placeholder=\"Enter first name\"\r\n                          {...register(\"firstName\", { required: \"First Name is required\" })}\r\n                        />\r\n                        {errors.firstName && <span className=\"error-message\">{errors.firstName.message}</span>}\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <label className=\"form-label\">Middle Name <span className=\"required\">*</span></label>\r\n                        <input\r\n                          className=\"form-input\"\r\n                          placeholder=\"Enter middle name\"\r\n                          {...register(\"middleName\", { required: \"Middle Name is required\" })}\r\n                        />\r\n                        {errors.middleName && <span className=\"error-message\">{errors.middleName.message}</span>}\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <label className=\"form-label\">Last Name <span className=\"required\">*</span></label>\r\n                        <input\r\n                          className=\"form-input\"\r\n                          placeholder=\"Enter last name\"\r\n                          {...register(\"lastName\", { required: \"Last Name is required\" })}\r\n                        />\r\n                        {errors.lastName && <span className=\"error-message\">{errors.lastName.message}</span>}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-column\">\r\n                      <div className=\"form-group\">\r\n                        <label className=\"form-label\">Gender <span className=\"required\">*</span></label>\r\n                        <select className=\"form-input\" {...register(\"gender\", { required: \"Gender is required\" })}>\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"Male\">Male</option>\r\n                          <option value=\"Female\">Female</option>\r\n                          <option value=\"Transgender\">Transgender</option>\r\n                        </select>\r\n                        {errors.gender && <span className=\"error-message\">{errors.gender.message}</span>}\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <label className=\"form-label\">Nationality <span className=\"required\">*</span></label>\r\n                        <select className=\"form-input\" {...register(\"nationality\", { required: \"Nationality is required\" })}>\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"Indian\">Indian</option>\r\n                        </select>\r\n                        {errors.nationality && <span className=\"error-message\">{errors.nationality.message}</span>}\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <label className=\"form-label\">Date of Birth <span className=\"required\">*</span></label>\r\n                        <input\r\n                          type=\"date\"\r\n                          className=\"form-input\"\r\n                          {...register(\"dateOfBirth\", { required: \"Date of Birth is required\" })}\r\n                        />\r\n                        {errors.dateOfBirth && <span className=\"error-message\">{errors.dateOfBirth.message}</span>}\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <label className=\"form-label\">Contact Number <span className=\"optional\">(Optional)</span></label>\r\n                        <input\r\n                          type=\"tel\"\r\n                          maxLength={10}\r\n                          className=\"form-input\"\r\n                          placeholder=\"Enter 10-digit number\"\r\n                          {...register(\"contactNumber\")}\r\n                        />\r\n                        {errors.contactNumber && <span className=\"error-message\">{errors.contactNumber.message}</span>}\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <label className=\"form-label\">Father Name <span className=\"optional\">(Optional)</span></label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-input\"\r\n                          placeholder=\"Enter father's name\"\r\n                          {...register(\"fatherName\")}\r\n                        />\r\n                        {errors.fatherName && <span className=\"error-message\">{errors.fatherName.message}</span>}\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <label className=\"form-label\">Alternative Type <span className=\"optional\">(Optional)</span></label>\r\n                        <select className=\"form-input\" {...register(\"alternativeType\")}>\r\n                          <option value=\"\">Select Relation</option>\r\n                          <option value=\"Father\">Father</option>\r\n                          <option value=\"Mother\">Mother</option>\r\n                          <option value=\"Brother\">Brother</option>\r\n                          <option value=\"Sister\">Sister</option>\r\n                          <option value=\"Son\">Son</option>\r\n                          <option value=\"Daughter\">Daughter</option>\r\n                          <option value=\"Spouse\">Spouse</option>\r\n                          <option value=\"Other\">Other</option>\r\n                        </select>\r\n                        {errors.alternativeType && <span className=\"error-message\">{errors.alternativeType.message}</span>}\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <label className=\"form-label\">Alternative Number <span className=\"optional\">(Optional)</span></label>\r\n                        <input\r\n                          type=\"tel\"\r\n                          maxLength={10}\r\n                          className=\"form-input\"\r\n                          placeholder=\"Enter 10-digit number\"\r\n                          {...register(\"alternativeNumber\")}\r\n                        />\r\n                        {errors.alternativeNumber && <span className=\"error-message\">{errors.alternativeNumber.message}</span>}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Step 1 - Address */}\r\n            {currentStep === 1 && (\r\n              <div className=\"form-step\">\r\n                <div className=\"step-content\">\r\n                  <div className=\"form-grid\">\r\n                    <div className=\"form-column\">\r\n                      <div className=\"form-group\">\r\n                        <label className=\"form-label\">Country <span className=\"required\">*</span></label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-input\"\r\n                          placeholder=\"Enter your country\"\r\n                          {...register(\"country\", { required: \"Country is required\" })}\r\n                        />\r\n                        {errors.country && <span className=\"error-message\">{errors.country.message}</span>}\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <label className=\"form-label\">State <span className=\"required\">*</span></label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-input\"\r\n                          placeholder=\"Enter your state\"\r\n                          {...register(\"state\", { required: \"State is required\" })}\r\n                        />\r\n                        {errors.state && <span className=\"error-message\">{errors.state.message}</span>}\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <label className=\"form-label\">District <span className=\"required\">*</span></label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-input\"\r\n                          placeholder=\"Enter your district\"\r\n                          {...register(\"district\", { required: \"District is required\" })}\r\n                        />\r\n                        {errors.district && <span className=\"error-message\">{errors.district.message}</span>}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-column\">\r\n                      <div className=\"form-group\">\r\n                        <label className=\"form-label\">Block/Mandal <span className=\"required\">*</span></label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-input\"\r\n                          placeholder=\"Enter your block\"\r\n                          {...register(\"block\", { required: \"Block is required\" })}\r\n                        />\r\n                        {errors.block && <span className=\"error-message\">{errors.block.message}</span>}\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <label className=\"form-label\">Village <span className=\"required\">*</span></label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-input\"\r\n                          placeholder=\"Enter your village\"\r\n                          {...register(\"village\", { required: \"Village is required\" })}\r\n                        />\r\n                        {errors.village && <span className=\"error-message\">{errors.village.message}</span>}\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <label className=\"form-label\">Pincode <span className=\"required\">*</span></label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-input\"\r\n                          placeholder=\"e.g. 500001\"\r\n                          {...register(\"pincode\", { required: \"Pincode is required\" })}\r\n                        />\r\n                        {errors.pincode && <span className=\"error-message\">{errors.pincode.message}</span>}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Step 2 - Professional Details */}\r\n            {currentStep === 2 && (\r\n              <div className=\"form-step\">\r\n                <div className=\"step-content\">\r\n                  <div className=\"form-grid\">\r\n                    <div className=\"form-column\">\r\n                      <div className=\"form-group\">\r\n                        <label className=\"form-label\">Education <span className=\"optional\">(Optional)</span></label>\r\n                        <select className=\"form-input\" {...register(\"education\")}>\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"Illiterate\">Illiterate</option>\r\n                          <option value=\"Primary Schooling\">Primary Schooling</option>\r\n                          <option value=\"High School\">High School</option>\r\n                          <option value=\"Intermediate\">Intermediate</option>\r\n                          <option value=\"Degree\">Degree</option>\r\n                        </select>\r\n                        {errors.education && <span className=\"error-message\">{errors.education.message}</span>}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-column\">\r\n                      <div className=\"form-group\">\r\n                        <label className=\"form-label\">Experience <span className=\"optional\">(Optional)</span></label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-input\"\r\n                          placeholder=\"e.g. 15 Years\"\r\n                          {...register(\"experience\")}\r\n                        />\r\n                        {errors.experience && <span className=\"error-message\">{errors.experience.message}</span>}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Step 3 - Current Crop Details */}\r\n            {currentStep === 3 && (\r\n              <div className=\"form-step\">\r\n                <div className=\"step-content\">\r\n                  <div className=\"form-grid\">\r\n                    <div className=\"form-column\">\r\n                      <div className=\"form-group\">\r\n                        <label className=\"form-label\">Survey Numbers <span className=\"optional\">(Optional)</span></label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-input\"\r\n                          placeholder=\"Enter survey numbers\"\r\n                          {...register(\"currentSurveyNumber\")}\r\n                        />\r\n                        {errors.currentSurveyNumber && <span className=\"error-message\">{errors.currentSurveyNumber.message}</span>}\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <label className=\"form-label\">Total Land Holding (Acres) <span className=\"optional\">(Optional)</span></label>\r\n                        <input\r\n                          type=\"number\"\r\n                          step=\"any\"\r\n                          className=\"form-input\"\r\n                          placeholder=\"Enter land holding\"\r\n                          {...register(\"currentLandHolding\", { valueAsNumber: true })}\r\n                        />\r\n                        {errors.currentLandHolding && <span className=\"error-message\">{errors.currentLandHolding.message}</span>}\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <label className=\"form-label\">Geo-tag <span className=\"optional\">(Optional)</span></label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-input\"\r\n                          placeholder=\"Enter geo coordinates\"\r\n                          {...register(\"currentGeoTag\")}\r\n                        />\r\n                        {errors.currentGeoTag && <span className=\"error-message\">{errors.currentGeoTag.message}</span>}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-column\">\r\n                      <div className=\"form-group\">\r\n                        <label className=\"form-label\">Crop Category <span className=\"optional\">(Optional)</span></label>\r\n                        <select\r\n                          className=\"form-input\"\r\n                          value={cropCategoryStep3}\r\n                          onChange={(e) => {\r\n                            setCropCategoryStep3(e.target.value);\r\n                            setValue(\"currentCrop\", \"\");\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {Object.keys(cropOptions).map((cat) => (\r\n                            <option key={cat} value={cat}>{cat}</option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n\r\n                      {cropCategoryStep3 && (\r\n                        <div className=\"form-group\">\r\n                          <label className=\"form-label\">Crop Name <span className=\"optional\">(Optional)</span></label>\r\n                          <select className=\"form-input\" {...register(\"currentCrop\")} defaultValue=\"\">\r\n                            <option value=\"\">Select</option>\r\n                            {cropOptions[cropCategoryStep3].map((crop) => (\r\n                              <option key={crop} value={crop}>{crop}</option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.currentCrop && <span className=\"error-message\">{errors.currentCrop.message}</span>}\r\n                        </div>\r\n                      )}\r\n\r\n                      <div className=\"form-group\">\r\n                        <label className=\"form-label\">Net Income (Current Crop/Year) <span className=\"optional\">(Optional)</span></label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-input\"\r\n                          placeholder=\"Enter net income\"\r\n                          {...register(\"currentNetIncome\")}\r\n                        />\r\n                        {errors.currentNetIncome && <span className=\"error-message\">{errors.currentNetIncome.message}</span>}\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <label className=\"form-label\">Soil Test <span className=\"optional\">(Optional)</span></label>\r\n                        <select className=\"form-input\" {...register(\"currentSoilTest\")}>\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.currentSoilTest && <span className=\"error-message\">{errors.currentSoilTest.message}</span>}\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <label className=\"form-label\">Soil Test Certificate <span className=\"optional\">(Optional)</span></label>\r\n                        <input\r\n                          type=\"file\"\r\n                          className=\"form-input file-input\"\r\n                          {...register(\"currentSoilTestCertificateFileName\")}\r\n                        />\r\n                        {errors.currentSoilTestCertificateFileName && <span className=\"error-message\">{errors.currentSoilTestCertificateFileName.message}</span>}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Step 4 - Proposed Crop Details */}\r\n            {currentStep === 4 && (\r\n              <div className=\"form-step\">\r\n                <div className=\"step-content\">\r\n                  <div className=\"form-grid\">\r\n                    <div className=\"form-column\">\r\n                      <div className=\"form-group\">\r\n                        <label className=\"form-label\">Survey Numbers <span className=\"optional\">(Optional)</span></label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-input\"\r\n                          placeholder=\"Enter survey numbers\"\r\n                          {...register(\"proposedSurveyNumber\")}\r\n                        />\r\n                        {errors.proposedSurveyNumber && <span className=\"error-message\">{errors.proposedSurveyNumber.message}</span>}\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <label className=\"form-label\">Geo-tag <span className=\"optional\">(Optional)</span></label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-input\"\r\n                          placeholder=\"Latitude, Longitude\"\r\n                          {...register(\"proposedGeoTag\", {\r\n                            pattern: {\r\n                              value: /^-?\\d+(\\.\\d+)?\\s*,\\s*-?\\d+(\\.\\d+)?$/,\r\n                              message: \"Enter valid Latitude, Longitude (e.g., 17.123, 78.456)\"\r\n                            }\r\n                          })}\r\n                        />\r\n                        {errors.proposedGeoTag && <span className=\"error-message\">{errors.proposedGeoTag.message}</span>}\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <label className=\"form-label\">Crop Category <span className=\"optional\">(Optional)</span></label>\r\n                        <select\r\n                          className=\"form-input\"\r\n                          value={cropCategoryStep4}\r\n                          onChange={(e) => {\r\n                            setCropCategoryStep4(e.target.value);\r\n                            setValue(\"cropType\", \"\");\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {Object.keys(cropOptions).map((cat) => (\r\n                            <option key={cat} value={cat}>{cat}</option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n\r\n                      {cropCategoryStep4 && (\r\n                        <div className=\"form-group\">\r\n                          <label className=\"form-label\">Crop Name <span className=\"optional\">(Optional)</span></label>\r\n                          <select className=\"form-input\" {...register(\"cropType\")} defaultValue=\"\">\r\n                            <option value=\"\">Select</option>\r\n                            {cropOptions[cropCategoryStep4].map((crop) => (\r\n                              <option key={crop} value={crop}>{crop}</option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.cropType && <span className=\"error-message\">{errors.cropType.message}</span>}\r\n                        </div>\r\n                      )}\r\n\r\n                      <div className=\"form-group\">\r\n                        <label className=\"form-label\">Soil Test <span className=\"optional\">(Optional)</span></label>\r\n                        <select className=\"form-input\" {...register(\"proposedSoilTest\")}>\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.proposedSoilTest && <span className=\"error-message\">{errors.proposedSoilTest.message}</span>}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-column\">\r\n                      <div className=\"form-group\">\r\n                        <label className=\"form-label\">Total Land Holding (Acres) <span className=\"optional\">(Optional)</span></label>\r\n                        <input\r\n                          type=\"number\"\r\n                          step=\"any\"\r\n                          className=\"form-input\"\r\n                          placeholder=\"Enter land holding\"\r\n                          {...register(\"proposedLandHolding\", { valueAsNumber: true })}\r\n                        />\r\n                        {errors.proposedLandHolding && <span className=\"error-message\">{errors.proposedLandHolding.message}</span>}\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <label className=\"form-label\">Net Income (Per Crop/Year) <span className=\"optional\">(Optional)</span></label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-input\"\r\n                          placeholder=\"Enter net income\"\r\n                          {...register(\"netIncome\")}\r\n                        />\r\n                        {errors.netIncome && <span className=\"error-message\">{errors.netIncome.message}</span>}\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <label className=\"form-label\">Soil Test Certificate <span className=\"optional\">(Optional)</span></label>\r\n                        <input\r\n                          type=\"file\"\r\n                          className=\"form-input file-input\"\r\n                          {...register(\"soilTestCertificate\")}\r\n                        />\r\n                        {errors.soilTestCertificate && <span className=\"error-message\">{errors.soilTestCertificate.message}</span>}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Step 5 - Irrigation Details */}\r\n            {currentStep === 5 && (\r\n              <div className=\"form-step\">\r\n                <div className=\"step-content\">\r\n                  <div className=\"tab-container\">\r\n                    <div className=\"tab-header\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className={`tab-button ${selectedIrrigationTab === \"Current\" ? \"active\" : \"\"}`}\r\n                        onClick={() => setSelectedIrrigationTab(\"Current\")}\r\n                      >\r\n                        Current Crop Addition\r\n                      </button>\r\n                      <button\r\n                        type=\"button\"\r\n                        className={`tab-button ${selectedIrrigationTab === \"Proposed\" ? \"active\" : \"\"}`}\r\n                        onClick={() => setSelectedIrrigationTab(\"Proposed\")}\r\n                      >\r\n                        Proposed Crop Addition\r\n                      </button>\r\n                    </div>\r\n\r\n                    <div className=\"tab-content\">\r\n                      {selectedIrrigationTab === \"Current\" && (\r\n                        <div className=\"form-grid\">\r\n                          <div className=\"form-column\">\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-label\">Water Source <span className=\"required\">*</span></label>\r\n                              <select className=\"form-input\" {...register(\"currentWaterSource\")} defaultValue=\"\">\r\n                                <option value=\"\">Select</option>\r\n                                {waterSourceOptions.map((source) => (\r\n                                  <option key={source} value={source}>{source}</option>\r\n                                ))}\r\n                              </select>\r\n                              {errors.currentWaterSource && <span className=\"error-message\">{errors.currentWaterSource.message}</span>}\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-label\">Borewell Discharge (LPH) <span className=\"optional\">(Optional)</span></label>\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-input\"\r\n                                placeholder=\"Enter discharge\"\r\n                                {...register(\"currentDischargeLPH\")}\r\n                              />\r\n                              {errors.currentDischargeLPH && <span className=\"error-message\">{errors.currentDischargeLPH.message}</span>}\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"form-column\">\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-label\">Summer Discharge <span className=\"optional\">(Optional)</span></label>\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-input\"\r\n                                placeholder=\"Enter summer discharge\"\r\n                                {...register(\"currentSummerDischarge\")}\r\n                              />\r\n                              {errors.currentSummerDischarge && <span className=\"error-message\">{errors.currentSummerDischarge.message}</span>}\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-label\">Borewell Location <span className=\"optional\">(Optional)</span></label>\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-input\"\r\n                                placeholder=\"Enter location\"\r\n                                {...register(\"currentBorewellLocation\")}\r\n                              />\r\n                              {errors.currentBorewellLocation && <span className=\"error-message\">{errors.currentBorewellLocation.message}</span>}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n\r\n                      {selectedIrrigationTab === \"Proposed\" && (\r\n                        <div className=\"form-grid\">\r\n                          <div className=\"form-column\">\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-label\">Water Source <span className=\"required\">*</span></label>\r\n                              <select className=\"form-input\" {...register(\"proposedWaterSource\")} defaultValue=\"\">\r\n                                <option value=\"\">Select</option>\r\n                                {waterSourceOptions.map((source) => (\r\n                                  <option key={source} value={source}>{source}</option>\r\n                                ))}\r\n                              </select>\r\n                              {errors.proposedWaterSource && <span className=\"error-message\">{errors.proposedWaterSource.message}</span>}\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-label\">Borewell Discharge (LPH) <span className=\"optional\">(Optional)</span></label>\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-input\"\r\n                                placeholder=\"Enter discharge\"\r\n                                {...register(\"proposedDischargeLPH\")}\r\n                              />\r\n                              {errors.proposedDischargeLPH && <span className=\"error-message\">{errors.proposedDischargeLPH.message}</span>}\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"form-column\">\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-label\">Summer Discharge <span className=\"optional\">(Optional)</span></label>\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-input\"\r\n                                placeholder=\"Enter summer discharge\"\r\n                                {...register(\"proposedSummerDischarge\")}\r\n                              />\r\n                              {errors.proposedSummerDischarge && <span className=\"error-message\">{errors.proposedSummerDischarge.message}</span>}\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-label\">Borewell Location <span className=\"optional\">(Optional)</span></label>\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-input\"\r\n                                placeholder=\"Enter location\"\r\n                                {...register(\"proposedBorewellLocation\")}\r\n                              />\r\n                              {errors.proposedBorewellLocation && <span className=\"error-message\">{errors.proposedBorewellLocation.message}</span>}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Step 6 - Bank Details */}\r\n            {currentStep === 6 && (\r\n              <div className=\"form-step\">\r\n                <div className=\"step-content\">\r\n                  <h3 className=\"section-title\">Bank Details</h3>\r\n                  <div className=\"form-grid\">\r\n                    <div className=\"form-column\">\r\n                      <div className=\"form-group\">\r\n                        <label className=\"form-label\">Bank Name <span className=\"optional\">(Optional)</span></label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-input\"\r\n                          placeholder=\"Enter bank name\"\r\n                          {...register(\"bankName\")}\r\n                        />\r\n                        {errors.bankName && <span className=\"error-message\">{errors.bankName.message}</span>}\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <label className=\"form-label\">Account Number <span className=\"optional\">(Optional)</span></label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-input\"\r\n                          placeholder=\"Enter account number\"\r\n                          {...register(\"accountNumber\")}\r\n                        />\r\n                        {errors.accountNumber && <span className=\"error-message\">{errors.accountNumber.message}</span>}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-column\">\r\n                      <div className=\"form-group\">\r\n                        <label className=\"form-label\">Branch Name <span className=\"optional\">(Optional)</span></label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-input\"\r\n                          placeholder=\"Enter branch name\"\r\n                          {...register(\"branchName\")}\r\n                        />\r\n                        {errors.branchName && <span className=\"error-message\">{errors.branchName.message}</span>}\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <label className=\"form-label\">IFSC Code <span className=\"optional\">(Optional)</span></label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-input\"\r\n                          placeholder=\"Enter IFSC code\"\r\n                          {...register(\"ifscCode\")}\r\n                        />\r\n                        {errors.ifscCode && <span className=\"error-message\">{errors.ifscCode.message}</span>}\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <label className=\"form-label\">Passbook <span className=\"optional\">(Optional)</span></label>\r\n                        <input\r\n                          type=\"file\"\r\n                          accept=\"image/*,application/pdf\"\r\n                          className=\"form-input file-input\"\r\n                          onChange={(e) => {\r\n                            const file = e.target.files[0];\r\n                            setValue(\"passbookFile\", file);\r\n                            trigger(\"passbookFile\");\r\n                          }}\r\n                        />\r\n                        {errors.passbookFile && <span className=\"error-message\">{errors.passbookFile.message}</span>}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Step 7 - Documents */}\r\n            {currentStep === 7 && (\r\n              <div className=\"form-step\">\r\n                <div className=\"step-content\">\r\n                  <h3 className=\"section-title\">Documents</h3>\r\n                  <div className=\"form-grid\">\r\n                    <div className=\"form-column\">\r\n                      <div className=\"form-group\">\r\n                        <label className=\"form-label\">Document Type <span className=\"optional\">(Optional)</span></label>\r\n                        <select\r\n                          className=\"form-input\"\r\n                          {...register(\"documentType\")}\r\n                          onChange={(e) => {\r\n                            setSelectedDoc(e.target.value);\r\n                            setValue(\"documentType\", e.target.value);\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"voterId\">ID/ Voter Card</option>\r\n                          <option value=\"aadharNumber\">Aadhar Number</option>\r\n                          <option value=\"panNumber\">Pan Number</option>\r\n                          <option value=\"ppbNumber\">PPB Number</option>\r\n                        </select>\r\n                        {errors.documentType && <span className=\"error-message\">{errors.documentType.message}</span>}\r\n                      </div>\r\n\r\n                      {selectedDoc && (\r\n                        <>\r\n                          <div className=\"form-group\">\r\n                            <label className=\"form-label\">\r\n                              {selectedDoc === \"voterId\" ? \"Voter ID\" : \r\n                               selectedDoc === \"aadharNumber\" ? \"Aadhar Number\" : \r\n                               selectedDoc === \"panNumber\" ? \"PAN Number\" : \"PPB Number\"} \r\n                              <span className=\"optional\">(Optional)</span>\r\n                            </label>\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-input\"\r\n                              placeholder={`Enter ${selectedDoc === \"voterId\" ? \"Voter ID\" : \r\n                                          selectedDoc === \"aadharNumber\" ? \"Aadhar Number\" : \r\n                                          selectedDoc === \"panNumber\" ? \"PAN Number\" : \"PPB Number\"}`}\r\n                              {...register(\"documentNumber\")}\r\n                            />\r\n                            {errors.documentNumber && <span className=\"error-message\">{errors.documentNumber.message}</span>}\r\n                          </div>\r\n\r\n                          <div className=\"form-group\">\r\n                            <label className=\"form-label\">\r\n                              {selectedDoc === \"voterId\" ? \"Voter ID\" : \r\n                               selectedDoc === \"aadharNumber\" ? \"Aadhar\" : \r\n                               selectedDoc === \"panNumber\" ? \"PAN\" : \"PPB\"} File \r\n                              <span className=\"optional\">(Optional)</span>\r\n                            </label>\r\n                            <input\r\n                              type=\"file\"\r\n                              accept=\"image/*,application/pdf\"\r\n                              className=\"form-input file-input\"\r\n                              {...register(\"documentFileName\")}\r\n                            />\r\n                            {errors.documentFileName && <span className=\"error-message\">{errors.documentFileName.message}</span>}\r\n                          </div>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Navigation Buttons */}\r\n            <div className=\"form-navigation\">\r\n              {currentStep > 0 && (\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={() => setCurrentStep(currentStep - 1)}\r\n                >\r\n                  ← Previous\r\n                </button>\r\n              )}\r\n              \r\n              {currentStep < totalSteps - 1 ? (\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                  onClick={async () => {\r\n                    const isValid = await trigger();\r\n                    if (isValid) setCurrentStep(currentStep + 1);\r\n                  }}\r\n                >\r\n                  Next →\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-success\"\r\n                >\r\n                  Submit Registration\r\n                </button>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </FormProvider>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FarmerRegistrationForm; "],"names":["api","axios","create","baseURL","process","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","console","log","url","method","Authorization","error","Promise","reject","response","_error$response","_error$response2","_error$config","_error$config2","_error$response3","_error$response4","status","statusText","message","forEach","key","removeItem","sessionStorage","clear","document","cookie","split","c","replace","Date","toUTCString","window","location","pathname","includes","href","authAPI","login","async","post","credentials","data","getProfile","get","register","userData","sendOTP","emailOrPhone","email","verifyOTP","otpData","otp","resendOTP","forgotPassword","forgotUserId","resetPassword","resetData","changePassword","passwordData","resetPasswordConfirm","changeUserId","userIdData","getCountries","getStates","countryId","superAdminAPI","getAllUsers","getRegistrationList","filters","arguments","length","undefined","params","getRegistrationListByStatus","searchRegistrations","query","getPendingRegistrations","getApprovedUsers","getUsersByRole","role","getPendingUsersByRole","approveUser","userId","put","rejectUser","reason","deleteUser","delete","updateUser","updateUserStatus","getDashboardStats","bulkAssignFarmers","farmerIds","employeeId","assignFarmer","farmerId","farmersAPI","getAllFarmers","getFarmerById","id","createFarmer","farmerData","updateFarmer","deleteFarmer","getFarmerStats","adminAPI","getAllEmployees","getFarmersWithKyc","getEmployeesWithStats","getFarmersByEmployee","getTodoList","getEnhancedTodoList","filterFarmers","getLocations","getAssignmentHistory","getFarmersByAssignmentStatus","assignmentStatus","getAllRegistrations","approveRegistration","registrationId","approvalData","rejectRegistration","rejectionData","employeesAPI","getEmployeeById","createEmployee","employeeData","updateEmployee","deleteEmployee","getEmployeeStats","employeeAPI","getAssignedFarmers","updateProfile","profileData","kycAPI","approveKYC","rejectKYC","referBackKYC","referralData","getKYCStatus","uploadKYCDocuments","documents","formData","FormData","Object","keys","Array","isArray","file","index","append","uploadApi","getKYCHistory","getKYCDocumentUrl","documentType","deleteKYCDocument","_ref","isInDashboard","editData","onClose","onSubmit","onSubmitProp","navigate","useNavigate","currentStep","setCurrentStep","useState","photoPreviewStep0","setPhotoPreviewStep0","photoPreviewStep3","setPhotoPreviewStep3","selectedPhotoName","setSelectedPhotoName","selectedDoc","setSelectedDoc","cropCategoryStep3","setCropCategoryStep3","cropCategoryStep4","setCropCategoryStep4","selectedIrrigationTab","setSelectedIrrigationTab","photoPreview","photo","useEffect","photoFileName","methods","useForm","defaultValues","salutation","firstName","middleName","lastName","gender","nationality","dateOfBirth","contactNumber","fatherName","alternativeType","alternativeNumber","country","state","district","block","village","pincode","education","experience","currentSurveyNumber","currentLandHolding","currentGeoTag","currentCrop","currentNetIncome","currentSoilTest","currentSoilTestCertificateFileName","proposedSurveyNumber","proposedLandHolding","proposedGeoTag","cropType","netIncome","proposedSoilTest","soilTestCertificate","currentWaterSource","currentDischargeLPH","currentSummerDischarge","currentBorewellLocation","proposedWaterSource","proposedDischargeLPH","proposedSummerDischarge","proposedBorewellLocation","bankName","accountNumber","branchName","ifscCode","passbookFile","documentNumber","documentFileName","handleSubmit","watch","setValue","trigger","clearErrors","formState","errors","cropOptions","waterSourceOptions","_jsx","className","children","_jsxs","onClick","type","style","width","FormProvider","alert","src","alt","accept","onChange","e","target","files","URL","createObjectURL","shouldValidate","name","required","value","placeholder","maxLength","step","valueAsNumber","map","cat","defaultValue","crop","pattern","source","_Fragment","totalSteps"],"sourceRoot":""}