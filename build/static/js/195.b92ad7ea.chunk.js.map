{"version":3,"file":"static/js/195.b92ad7ea.chunk.js","mappings":"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","sources":["api/apiService.js","components/ActionDropdown.jsx","components/DataTable.jsx","components/ViewEditEmployeeDetails.jsx","components/FarmerForm.jsx","components/ViewFarmerRegistrationDetails.jsx"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8080/api',\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor for error handling\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Authentication API calls\r\nexport const authAPI = {\r\n  // Login\r\n  login: async (credentials) => {\r\n    const response = await api.post('/auth/login', credentials);\r\n    return response.data;\r\n  },\r\n\r\n  // Get user profile\r\n  getProfile: async () => {\r\n    const response = await api.get('/auth/profile');\r\n    return response.data;\r\n  },\r\n\r\n  // Register user\r\n  register: async (userData) => {\r\n    const response = await api.post('/auth/register', userData);\r\n    return response.data;\r\n  },\r\n\r\n  // Send OTP\r\n  sendOTP: async (email) => {\r\n    const response = await api.post('/auth/send-otp', { emailOrPhone: email });\r\n    return response.data;\r\n  },\r\n\r\n  // Verify OTP\r\n  verifyOTP: async (otpData) => {\r\n    const response = await api.post('/auth/verify-otp', { \r\n      emailOrPhone: otpData.email, \r\n      otp: otpData.otp \r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  // Resend OTP\r\n  resendOTP: async (email) => {\r\n    const response = await api.post('/auth/resend-otp', { emailOrPhone: email });\r\n    return response.data;\r\n  },\r\n\r\n  // Forgot password\r\n  forgotPassword: async (emailOrPhone) => {\r\n    const response = await api.post('/auth/forgot-password', { emailOrPhone });\r\n    return response.data;\r\n  },\r\n\r\n  // Forgot user ID\r\n  forgotUserId: async (emailOrPhone) => {\r\n    const response = await api.post('/auth/forgot-user-id', { emailOrPhone });\r\n    return response.data;\r\n  },\r\n\r\n  // Reset password\r\n  resetPassword: async (resetData) => {\r\n    const response = await api.post('/auth/reset-password', resetData);\r\n    return response.data;\r\n  },\r\n\r\n  // Change password\r\n  changePassword: async (passwordData) => {\r\n    const response = await api.post('/auth/change-password', passwordData);\r\n    return response.data;\r\n  },\r\n\r\n  // Change user ID\r\n  changeUserId: async (userIdData) => {\r\n    const response = await api.post('/auth/change-user-id', userIdData);\r\n    return response.data;\r\n  },\r\n\r\n  // Get countries\r\n  getCountries: async () => {\r\n    const response = await api.get('/auth/countries');\r\n    return response.data;\r\n  },\r\n\r\n  // Get states\r\n  getStates: async (countryId) => {\r\n    const response = await api.post('/auth/states', { countryId });\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// Super Admin API calls\r\nexport const superAdminAPI = {\r\n  // Get all users (registrations)\r\n  getAllUsers: async () => {\r\n    const response = await api.get('/super-admin/registration-list');\r\n    return response.data;\r\n  },\r\n\r\n  // Get registration list with filters\r\n  getRegistrationList: async (filters = {}) => {\r\n    const response = await api.get('/super-admin/registration-list', { params: filters });\r\n    return response.data;\r\n  },\r\n\r\n  // Get registration list by status\r\n  getRegistrationListByStatus: async (status) => {\r\n    const response = await api.get('/super-admin/registration-list/filter', { params: { status } });\r\n    return response.data;\r\n  },\r\n\r\n  // Search registrations\r\n  searchRegistrations: async (query) => {\r\n    const response = await api.get('/super-admin/registration-list/search', { params: { query } });\r\n    return response.data;\r\n  },\r\n\r\n  // Get pending registrations\r\n  getPendingRegistrations: async () => {\r\n    const response = await api.get('/super-admin/pending-registrations');\r\n    return response.data;\r\n  },\r\n\r\n  // Get approved users\r\n  getApprovedUsers: async () => {\r\n    const response = await api.get('/super-admin/approved-users');\r\n    return response.data;\r\n  },\r\n\r\n  // Get users by role\r\n  getUsersByRole: async (role) => {\r\n    const response = await api.get(`/super-admin/users/by-role/${role}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Get pending users by role\r\n  getPendingUsersByRole: async (role) => {\r\n    const response = await api.get(`/super-admin/pending-users/by-role/${role}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Approve user\r\n  approveUser: async (userId, role) => {\r\n    const response = await api.put(`/auth/users/${userId}/approve`, { role });\r\n    return response.data;\r\n  },\r\n\r\n  // Reject user (update status to REJECTED)\r\n  rejectUser: async (userId, reason) => {\r\n    const response = await api.put(`/auth/users/${userId}/status`, { status: 'REJECTED' });\r\n    return response.data;\r\n  },\r\n\r\n  // Delete user\r\n  deleteUser: async (userId) => {\r\n    const response = await api.delete(`/super-admin/users/${userId}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Update user\r\n  updateUser: async (userId, userData) => {\r\n    const response = await api.put(`/super-admin/users/${userId}`, userData);\r\n    return response.data;\r\n  },\r\n\r\n  // Update user status\r\n  updateUserStatus: async (userId, status) => {\r\n    const response = await api.put(`/auth/users/${userId}/status`, { status });\r\n    return response.data;\r\n  },\r\n\r\n  // Get dashboard stats\r\n  getDashboardStats: async () => {\r\n    const response = await api.get('/super-admin/dashboard/stats');\r\n    return response.data;\r\n  },\r\n\r\n  // Bulk assign farmers to employee\r\n  bulkAssignFarmers: async (farmerIds, employeeId) => {\r\n    const response = await api.post('/super-admin/bulk-assign-farmers', { farmerIds, employeeId });\r\n    return response.data;\r\n  },\r\n\r\n  // Single assign farmer to employee (fallback)\r\n  assignFarmer: async (farmerId, employeeId) => {\r\n    const response = await api.post('/super-admin/assign-farmer', null, { \r\n      params: { farmerId, employeeId } \r\n    });\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// Farmers API calls\r\nexport const farmersAPI = {\r\n  // Get all farmers\r\n  getAllFarmers: async (filters = {}) => {\r\n    const response = await api.get('/super-admin/farmers', { params: filters });\r\n    return response.data;\r\n  },\r\n\r\n  // Get farmer by ID\r\n  getFarmerById: async (id) => {\r\n    const response = await api.get(`/super-admin/farmers/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Create farmer\r\n  createFarmer: async (farmerData) => {\r\n    const response = await api.post('/super-admin/farmers', farmerData);\r\n    return response.data;\r\n  },\r\n\r\n  // Update farmer\r\n  updateFarmer: async (id, farmerData) => {\r\n    const response = await api.put(`/super-admin/farmers/${id}`, farmerData);\r\n    return response.data;\r\n  },\r\n\r\n  // Delete farmer\r\n  deleteFarmer: async (id) => {\r\n    const response = await api.delete(`/super-admin/farmers/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Assign farmer to employee\r\n  assignFarmer: async (farmerId, employeeId) => {\r\n    const response = await api.post(`/super-admin/farmers/${farmerId}/assign`, { employeeId });\r\n    return response.data;\r\n  },\r\n\r\n  // Get farmer statistics\r\n  getFarmerStats: async () => {\r\n    const response = await api.get('/super-admin/farmers/stats');\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// Admin-specific API calls\r\nexport const adminAPI = {\r\n  // Get all farmers for admin\r\n  getAllFarmers: async (filters = {}) => {\r\n    const response = await api.get('/admin/farmers', { params: filters });\r\n    return response.data;\r\n  },\r\n\r\n  // Get all employees for admin\r\n  getAllEmployees: async (filters = {}) => {\r\n    const response = await api.get('/admin/employees', { params: filters });\r\n    return response.data;\r\n  },\r\n\r\n  // Get farmers with KYC status\r\n  getFarmersWithKyc: async () => {\r\n    const response = await api.get('/admin/farmers-with-kyc');\r\n    return response.data;\r\n  },\r\n\r\n  // Get employees with stats\r\n  getEmployeesWithStats: async () => {\r\n    const response = await api.get('/admin/employees-with-stats');\r\n    return response.data;\r\n  },\r\n\r\n  // Get farmers by employee\r\n  getFarmersByEmployee: async (employeeId) => {\r\n    const response = await api.get(`/admin/employees/${employeeId}/assigned-farmers`);\r\n    return response.data;\r\n  },\r\n\r\n  // Get todo list for admin\r\n  getTodoList: async () => {\r\n    const response = await api.get('/admin/todo-list');\r\n    return response.data;\r\n  },\r\n\r\n  // Get enhanced todo list\r\n  getEnhancedTodoList: async () => {\r\n    const response = await api.get('/admin/enhanced-todo-list');\r\n    return response.data;\r\n  },\r\n\r\n  // Get dashboard stats\r\n  getDashboardStats: async () => {\r\n    const response = await api.get('/admin/dashboard-stats');\r\n    return response.data;\r\n  },\r\n\r\n  // Filter farmers\r\n  filterFarmers: async (filters = {}) => {\r\n    const response = await api.get('/admin/farmers/filter', { params: filters });\r\n    return response.data;\r\n  },\r\n\r\n  // Get locations\r\n  getLocations: async () => {\r\n    const response = await api.get('/admin/locations');\r\n    return response.data;\r\n  },\r\n\r\n  // Bulk assign farmers to employee\r\n  bulkAssignFarmers: async (farmerIds, employeeId) => {\r\n    const response = await api.post('/admin/bulk-assign-farmers', { farmerIds, employeeId });\r\n    return response.data;\r\n  },\r\n\r\n  // Single assign farmer to employee (fallback)\r\n  assignFarmer: async (farmerId, employeeId) => {\r\n    const response = await api.post('/admin/assign-farmer', null, { \r\n      params: { farmerId, employeeId } \r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  // Get assignment history\r\n  getAssignmentHistory: async (filters = {}) => {\r\n    const response = await api.get('/admin/assignment-history', { params: filters });\r\n    return response.data;\r\n  },\r\n\r\n  // Get farmers by assignment status\r\n  getFarmersByAssignmentStatus: async (assignmentStatus) => {\r\n    const response = await api.get('/admin/farmers/by-assignment-status', { \r\n      params: { assignmentStatus } \r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  // Get all registrations for admin\r\n  getAllRegistrations: async (filters = {}) => {\r\n    const response = await api.get('/admin/registration-list', { params: filters });\r\n    return response.data;\r\n  },\r\n\r\n  // Get registration list by status for admin\r\n  getRegistrationListByStatus: async (status) => {\r\n    const response = await api.get('/admin/registration-list/filter', { params: { status } });\r\n    return response.data;\r\n  },\r\n\r\n  // Approve registration for admin\r\n  approveRegistration: async (registrationId, approvalData) => {\r\n    const response = await api.post(`/admin/registrations/${registrationId}/approve`, approvalData);\r\n    return response.data;\r\n  },\r\n\r\n  // Reject registration for admin\r\n  rejectRegistration: async (registrationId, rejectionData) => {\r\n    const response = await api.post(`/admin/registrations/${registrationId}/reject`, rejectionData);\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// Employees API calls (for Super Admin and Admin)\r\nexport const employeesAPI = {\r\n  // Get all employees\r\n  getAllEmployees: async (filters = {}) => {\r\n    const response = await api.get('/super-admin/employees', { params: filters });\r\n    return response.data;\r\n  },\r\n\r\n  // Get employee by ID\r\n  getEmployeeById: async (id) => {\r\n    const response = await api.get(`/super-admin/employees/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Create employee\r\n  createEmployee: async (employeeData) => {\r\n    const response = await api.post('/super-admin/employees', employeeData);\r\n    return response.data;\r\n  },\r\n\r\n  // Update employee\r\n  updateEmployee: async (id, employeeData) => {\r\n    const response = await api.put(`/super-admin/employees/${id}`, employeeData);\r\n    return response.data;\r\n  },\r\n\r\n  // Delete employee\r\n  deleteEmployee: async (id) => {\r\n    const response = await api.delete(`/super-admin/employees/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Get assigned farmers for employee\r\n  getAssignedFarmers: async (employeeId) => {\r\n    const response = await api.get(`/super-admin/employees/${employeeId}/assigned-farmers`);\r\n    return response.data;\r\n  },\r\n\r\n  // Get employee statistics\r\n  getEmployeeStats: async () => {\r\n    const response = await api.get('/super-admin/employees/stats');\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// Employee-specific API calls (for Employee role)\r\nexport const employeeAPI = {\r\n  // Get assigned farmers for current employee\r\n  getAssignedFarmers: async (employeeId) => {\r\n    try {\r\n      console.log('🔄 Fetching assigned farmers from dashboard endpoint');\r\n      const response = await api.get('/employees/dashboard/assigned-farmers');\r\n      console.log('✅ Success with dashboard endpoint');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('❌ Failed to fetch assigned farmers:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Get employee profile\r\n  getProfile: async () => {\r\n    const response = await api.get('/employees/profile');\r\n    return response.data;\r\n  },\r\n\r\n  // Update employee profile\r\n  updateProfile: async (profileData) => {\r\n    const response = await api.put('/employees/profile', profileData);\r\n    return response.data;\r\n  },\r\n\r\n  // Get employee statistics\r\n  getStats: async () => {\r\n    const response = await api.get('/employees/stats');\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// Registrations API calls\r\nexport const registrationsAPI = {\r\n  // Get all registrations\r\n  getAllRegistrations: async (filters = {}) => {\r\n    const response = await api.get('/registrations', { params: filters });\r\n    return response.data;\r\n  },\r\n\r\n  // Get registration by ID\r\n  getRegistrationById: async (id) => {\r\n    const response = await api.get(`/registrations/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Approve registration\r\n  approveRegistration: async (id, approvalData) => {\r\n    const response = await api.post(`/registrations/${id}/approve`, approvalData);\r\n    return response.data;\r\n  },\r\n\r\n  // Reject registration\r\n  rejectRegistration: async (id, rejectionData) => {\r\n    const response = await api.post(`/registrations/${id}/reject`, rejectionData);\r\n    return response.data;\r\n  },\r\n\r\n  // Get registration statistics\r\n  getRegistrationStats: async () => {\r\n    const response = await api.get('/registrations/stats');\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// KYC API calls\r\nexport const kycAPI = {\r\n  // Upload KYC documents\r\n  uploadDocuments: async (farmerId, documents) => {\r\n    const formData = new FormData();\r\n    Object.keys(documents).forEach(key => {\r\n      if (documents[key]) {\r\n        formData.append(key, documents[key]);\r\n      }\r\n    });\r\n    \r\n    const response = await api.post(`/employees/kyc/${farmerId}/upload`, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  // Approve KYC\r\n  approveKYC: async (farmerId, approvalData) => {\r\n    const response = await api.put(`/employees/kyc/approve/${farmerId}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Reject KYC\r\n  rejectKYC: async (farmerId, rejectionData) => {\r\n    const response = await api.put(`/employees/kyc/reject/${farmerId}`, {\r\n      reason: rejectionData.reason || 'KYC rejected'\r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  // Refer back KYC\r\n  referBackKYC: async (farmerId, referBackData) => {\r\n    const response = await api.put(`/employees/kyc/refer-back/${farmerId}`, {\r\n      reason: referBackData.reason || 'KYC referred back'\r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  // Get KYC status\r\n  getKYCStatus: async (farmerId) => {\r\n    const response = await api.get(`/employees/kyc/${farmerId}/status`);\r\n    return response.data;\r\n  },\r\n\r\n  // Get KYC documents\r\n  getKYCDocuments: async (farmerId) => {\r\n    const response = await api.get(`/employees/kyc/${farmerId}/documents`);\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// Dashboard API calls\r\nexport const dashboardAPI = {\r\n  // Get dashboard statistics\r\n  getDashboardStats: async () => {\r\n    const response = await api.get('/dashboard/stats');\r\n    return response.data;\r\n  },\r\n\r\n  // Get admin dashboard data\r\n  getAdminDashboardData: async () => {\r\n    const response = await api.get('/dashboard/admin');\r\n    return response.data;\r\n  },\r\n\r\n  // Get super admin dashboard data\r\n  getSuperAdminDashboardData: async () => {\r\n    const response = await api.get('/dashboard/super-admin');\r\n    return response.data;\r\n  },\r\n\r\n  // Get employee dashboard data\r\n  getEmployeeDashboardData: async (employeeId) => {\r\n    const response = await api.get(`/dashboard/employee/${employeeId}`);\r\n    return response.data;\r\n  }\r\n};\r\n\r\nexport default api; ","import React, { useState, useRef, useEffect } from 'react';\r\n\r\nconst ActionDropdown = ({ actions, item }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const dropdownRef = useRef(null);\r\n\r\n  // Close dropdown when clicking outside\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  const handleActionClick = (action) => {\r\n    if (action.onClick) {\r\n      action.onClick(item);\r\n    }\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"action-dropdown-component\" ref={dropdownRef}>\r\n      <button\r\n        className=\"action-dropdown-toggle\"\r\n        onClick={() => setIsOpen(!isOpen)}\r\n        aria-label=\"Actions\"\r\n      >\r\n        ⋯\r\n      </button>\r\n      \r\n      {isOpen && (\r\n        <div className=\"action-dropdown-menu\">\r\n          {actions.map((action, index) => {\r\n            // Check if action should be shown based on condition\r\n            if (action.showCondition && !action.showCondition(item)) {\r\n              return null;\r\n            }\r\n            \r\n            return (\r\n              <button\r\n                key={index}\r\n                className={`action-dropdown-item ${action.className || ''}`}\r\n                onClick={() => handleActionClick(action)}\r\n              >\r\n                {action.icon && <span className=\"action-dropdown-icon\">{action.icon}</span>}\r\n                {action.label}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionDropdown; ","import React, { useMemo, useCallback } from 'react';\r\nimport ActionDropdown from './ActionDropdown';\r\n\r\nconst DataTable = React.memo(({ \r\n  data, \r\n  columns, \r\n  onEdit, \r\n  onDelete, \r\n  onView, \r\n  showDelete = false, \r\n  customActions = [],\r\n  loading = false,\r\n  emptyMessage = \"No data available\"\r\n}) => {\r\n  const getStatusClass = useCallback((status) => {\r\n    switch (status?.toLowerCase()) {\r\n      case 'approved':\r\n        return 'status-approved';\r\n      case 'pending':\r\n        return 'status-pending';\r\n      case 'refer_back':\r\n        return 'status-refer-back';\r\n      case 'rejected':\r\n        return 'status-rejected';\r\n      case 'assigned':\r\n        return 'status-assigned';\r\n      case 'unassigned':\r\n        return 'status-unassigned';\r\n      case 'active':\r\n        return 'status-approved';\r\n      case 'inactive':\r\n        return 'status-rejected';\r\n      default:\r\n        return 'status-default';\r\n    }\r\n  }, []);\r\n\r\n  // Memoized safe render function\r\n  const safeRender = useCallback((value, columnKey) => {\r\n    try {\r\n      // If value is an object, try to extract meaningful data\r\n      if (value && typeof value === 'object') {\r\n        // Handle common object types\r\n        if (value.name) return value.name;\r\n        if (value.title) return value.title;\r\n        if (value.label) return value.label;\r\n        if (value.id) return value.id;\r\n        \r\n        // For arrays, show count\r\n        if (Array.isArray(value)) {\r\n          return `${value.length} item${value.length !== 1 ? 's' : ''}`;\r\n        }\r\n        \r\n        // For other objects, show a summary\r\n        const keys = Object.keys(value);\r\n        if (keys.length <= 3) {\r\n          return keys.map(key => value[key]).join(', ');\r\n        }\r\n        \r\n        return 'Object';\r\n      }\r\n      \r\n      // If value is null or undefined, return 'N/A'\r\n      if (value === null || value === undefined) {\r\n        return 'N/A';\r\n      }\r\n      \r\n      // If value is a string, number, or boolean, return it as string\r\n      return String(value);\r\n    } catch (error) {\r\n      console.error(`DataTable: Error rendering value for column ${columnKey}:`, error);\r\n      return 'Error';\r\n    }\r\n  }, []);\r\n\r\n  // Memoized table data\r\n  const tableData = useMemo(() => {\r\n    if (!data || !Array.isArray(data)) return [];\r\n    return data;\r\n  }, [data]);\r\n\r\n  // Memoized columns\r\n  const tableColumns = useMemo(() => {\r\n    if (!columns || !Array.isArray(columns)) return [];\r\n    return columns;\r\n  }, [columns]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"data-table-loading\">\r\n        <div className=\"loading-spinner\">Loading...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!tableData.length) {\r\n    return (\r\n      <div className=\"data-table-empty\">\r\n        <div className=\"empty-icon\">📋</div>\r\n        <p>{emptyMessage}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"data-table-container\">\r\n      <table className=\"data-table\">\r\n        <thead>\r\n          <tr>\r\n            {tableColumns.map((column) => (\r\n              <th key={column.key} className={`table-header ${column.className || ''}`}>\r\n                {column.label}\r\n              </th>\r\n            ))}\r\n            {(onEdit || onDelete || onView || customActions.length > 0) && (\r\n              <th className=\"table-header actions-header\">Actions</th>\r\n            )}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tableData.map((row, index) => (\r\n            <tr key={row.id || index} className=\"table-row\">\r\n              {tableColumns.map((column) => {\r\n                const value = row[column.key];\r\n                const cellContent = column.render \r\n                  ? column.render(value, row) \r\n                  : safeRender(value, column.key);\r\n                \r\n                return (\r\n                  <td key={column.key} className={`table-cell ${column.className || ''}`}>\r\n                    {column.type === 'status' ? (\r\n                      <span className={`status-badge ${getStatusClass(value)}`}>\r\n                        {cellContent}\r\n                      </span>\r\n                    ) : (\r\n                      cellContent\r\n                    )}\r\n                  </td>\r\n                );\r\n              })}\r\n              {(onEdit || onDelete || onView || customActions.length > 0) && (\r\n                <td className=\"table-cell actions-cell\">\r\n                  <ActionDropdown\r\n                    item={row}\r\n                    onEdit={onEdit}\r\n                    onDelete={onDelete}\r\n                    onView={onView}\r\n                    showDelete={showDelete}\r\n                    customActions={customActions}\r\n                  />\r\n                </td>\r\n              )}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n});\r\n\r\nDataTable.displayName = 'DataTable';\r\n\r\nexport default DataTable; ","import React, { useState } from 'react';\r\nimport { useForm, FormProvider } from 'react-hook-form';\r\nimport '../styles/ViewEditEmployeeDetails.css';\r\n\r\nconst ViewEditEmployeeDetails = ({ employeeData, onClose, onUpdate, isInDashboard = false, onEmployeeSelect }) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n\r\n  // Helper function to safely render values\r\n  const safeRender = (value) => {\r\n    if (value === null || value === undefined) {\r\n      return 'Not provided';\r\n    }\r\n    if (typeof value === 'object') {\r\n      console.warn('ViewEditEmployeeDetails: Object found in value:', value);\r\n      return 'Object (see console)';\r\n    }\r\n    return String(value);\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return 'Not provided';\r\n    return new Date(dateString).toLocaleDateString();\r\n  };\r\n\r\n  const methods = useForm({\r\n    defaultValues: {\r\n      // Personal Information\r\n      firstName: employeeData?.firstName || '',\r\n      lastName: employeeData?.lastName || '',\r\n      email: employeeData?.email || '',\r\n      phone: employeeData?.phone || '',\r\n      dateOfBirth: employeeData?.dateOfBirth || '',\r\n      gender: employeeData?.gender || '',\r\n      address: employeeData?.address || '',\r\n      city: employeeData?.city || '',\r\n      state: employeeData?.state || '',\r\n      pincode: employeeData?.pincode || '',\r\n      \r\n      // Employment Information\r\n      employeeId: employeeData?.employeeId || '',\r\n      department: employeeData?.department || '',\r\n      designation: employeeData?.designation || '',\r\n      joiningDate: employeeData?.joiningDate || '',\r\n      salary: employeeData?.salary || '',\r\n      supervisor: employeeData?.supervisor || '',\r\n      \r\n      // Educational Information\r\n      highestQualification: employeeData?.highestQualification || '',\r\n      institution: employeeData?.institution || '',\r\n      graduationYear: employeeData?.graduationYear || '',\r\n      specialization: employeeData?.specialization || '',\r\n      \r\n      // Emergency Contact\r\n      emergencyName: employeeData?.emergencyName || '',\r\n      emergencyPhone: employeeData?.emergencyPhone || '',\r\n      emergencyRelation: employeeData?.emergencyRelation || '',\r\n      \r\n      // Documents\r\n      photo: employeeData?.photo || null,\r\n      idProof: employeeData?.idProof || null,\r\n      addressProof: employeeData?.addressProof || null,\r\n      educationalCertificates: employeeData?.educationalCertificates || null,\r\n      \r\n      // Additional Information\r\n      skills: employeeData?.skills || '',\r\n      languages: employeeData?.languages || '',\r\n      certifications: employeeData?.certifications || '',\r\n      workExperience: employeeData?.workExperience || '',\r\n      references: employeeData?.references || ''\r\n    }\r\n  });\r\n\r\n  const { register, handleSubmit, watch, setValue, trigger, clearErrors, formState: { errors } } = methods;\r\n\r\n  const steps = [\r\n    {\r\n      title: 'Personal Information',\r\n      fields: ['firstName', 'lastName', 'email', 'phone', 'dateOfBirth', 'gender', 'address', 'city', 'state', 'pincode']\r\n    },\r\n    {\r\n      title: 'Employment Information',\r\n      fields: ['employeeId', 'department', 'designation', 'joiningDate', 'salary', 'supervisor']\r\n    },\r\n    {\r\n      title: 'Educational Information',\r\n      fields: ['highestQualification', 'institution', 'graduationYear', 'specialization']\r\n    },\r\n    {\r\n      title: 'Emergency Contact',\r\n      fields: ['emergencyName', 'emergencyPhone', 'emergencyRelation']\r\n    },\r\n    {\r\n      title: 'Documents',\r\n      fields: ['photo', 'idProof', 'addressProof', 'educationalCertificates']\r\n    },\r\n    {\r\n      title: 'Additional Information',\r\n      fields: ['skills', 'languages', 'certifications', 'workExperience', 'references']\r\n    }\r\n  ];\r\n\r\n  const handleNext = async () => {\r\n    const currentFields = steps[currentStep].fields;\r\n    const isValid = await trigger(currentFields);\r\n    \r\n    if (isValid && currentStep < steps.length - 1) {\r\n      setCurrentStep(currentStep + 1);\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (currentStep > 0) {\r\n      setCurrentStep(currentStep - 1);\r\n    }\r\n  };\r\n\r\n  const handleSave = async (data) => {\r\n    if (onUpdate) {\r\n      await onUpdate(data);\r\n    }\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsEditing(false);\r\n    setCurrentStep(0);\r\n    methods.reset();\r\n  };\r\n\r\n  const renderPersonalInfo = () => (\r\n    <div className=\"form-section\">\r\n      <h3>Personal Information</h3>\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group\">\r\n          <label>First Name *</label>\r\n          <input\r\n            type=\"text\"\r\n            {...register('firstName', { required: 'First name is required' })}\r\n            disabled={!isEditing}\r\n          />\r\n          {errors.firstName && <span className=\"error\">{errors.firstName.message}</span>}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Last Name *</label>\r\n          <input\r\n            type=\"text\"\r\n            {...register('lastName', { required: 'Last name is required' })}\r\n            disabled={!isEditing}\r\n          />\r\n          {errors.lastName && <span className=\"error\">{errors.lastName.message}</span>}\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"form-row\">\r\n        <div className=\"form-group\">\r\n          <label>Email *</label>\r\n          <input\r\n            type=\"email\"\r\n            {...register('email', { \r\n              required: 'Email is required',\r\n              pattern: {\r\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                message: 'Invalid email address'\r\n              }\r\n            })}\r\n            disabled={!isEditing}\r\n          />\r\n          {errors.email && <span className=\"error\">{errors.email.message}</span>}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Phone *</label>\r\n          <input\r\n            type=\"tel\"\r\n            {...register('phone', { \r\n              required: 'Phone is required',\r\n              pattern: {\r\n                value: /^[0-9]{10}$/,\r\n                message: 'Phone number must be 10 digits'\r\n              }\r\n            })}\r\n            disabled={!isEditing}\r\n          />\r\n          {errors.phone && <span className=\"error\">{errors.phone.message}</span>}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group\">\r\n          <label>Date of Birth *</label>\r\n          <input\r\n            type=\"date\"\r\n            {...register('dateOfBirth', { required: 'Date of birth is required' })}\r\n            disabled={!isEditing}\r\n          />\r\n          {errors.dateOfBirth && <span className=\"error\">{errors.dateOfBirth.message}</span>}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Gender *</label>\r\n          <select {...register('gender', { required: 'Gender is required' })} disabled={!isEditing}>\r\n            <option value=\"\">Select Gender</option>\r\n            <option value=\"male\">Male</option>\r\n            <option value=\"female\">Female</option>\r\n            <option value=\"other\">Other</option>\r\n          </select>\r\n          {errors.gender && <span className=\"error\">{errors.gender.message}</span>}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Address *</label>\r\n        <textarea\r\n          {...register('address', { required: 'Address is required' })}\r\n          disabled={!isEditing}\r\n        />\r\n        {errors.address && <span className=\"error\">{errors.address.message}</span>}\r\n      </div>\r\n\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group\">\r\n          <label>City *</label>\r\n          <input\r\n            type=\"text\"\r\n            {...register('city', { required: 'City is required' })}\r\n            disabled={!isEditing}\r\n          />\r\n          {errors.city && <span className=\"error\">{errors.city.message}</span>}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>State *</label>\r\n          <input\r\n            type=\"text\"\r\n            {...register('state', { required: 'State is required' })}\r\n            disabled={!isEditing}\r\n          />\r\n          {errors.state && <span className=\"error\">{errors.state.message}</span>}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Pincode *</label>\r\n          <input\r\n            type=\"text\"\r\n            {...register('pincode', { \r\n              required: 'Pincode is required',\r\n              pattern: {\r\n                value: /^[0-9]{6}$/,\r\n                message: 'Pincode must be 6 digits'\r\n              }\r\n            })}\r\n            disabled={!isEditing}\r\n          />\r\n          {errors.pincode && <span className=\"error\">{errors.pincode.message}</span>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderEmploymentInfo = () => (\r\n    <div className=\"form-section\">\r\n      <h3>Employment Information</h3>\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group\">\r\n          <label>Employee ID *</label>\r\n          <input\r\n            type=\"text\"\r\n            {...register('employeeId', { required: 'Employee ID is required' })}\r\n            disabled={!isEditing}\r\n          />\r\n          {errors.employeeId && <span className=\"error\">{errors.employeeId.message}</span>}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Department *</label>\r\n          <select {...register('department', { required: 'Department is required' })} disabled={!isEditing}>\r\n            <option value=\"\">Select Department</option>\r\n            <option value=\"IT\">IT</option>\r\n            <option value=\"HR\">HR</option>\r\n            <option value=\"Finance\">Finance</option>\r\n            <option value=\"Marketing\">Marketing</option>\r\n            <option value=\"Operations\">Operations</option>\r\n          </select>\r\n          {errors.department && <span className=\"error\">{errors.department.message}</span>}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group\">\r\n          <label>Designation *</label>\r\n          <input\r\n            type=\"text\"\r\n            {...register('designation', { required: 'Designation is required' })}\r\n            disabled={!isEditing}\r\n          />\r\n          {errors.designation && <span className=\"error\">{errors.designation.message}</span>}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Joining Date *</label>\r\n          <input\r\n            type=\"date\"\r\n            {...register('joiningDate', { required: 'Joining date is required' })}\r\n            disabled={!isEditing}\r\n          />\r\n          {errors.joiningDate && <span className=\"error\">{errors.joiningDate.message}</span>}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group\">\r\n          <label>Salary *</label>\r\n          <input\r\n            type=\"number\"\r\n            {...register('salary', { required: 'Salary is required' })}\r\n            disabled={!isEditing}\r\n          />\r\n          {errors.salary && <span className=\"error\">{errors.salary.message}</span>}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Supervisor</label>\r\n          <input\r\n            type=\"text\"\r\n            {...register('supervisor')}\r\n            disabled={!isEditing}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderEducationalInfo = () => (\r\n    <div className=\"form-section\">\r\n      <h3>Educational Information</h3>\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group\">\r\n          <label>Highest Qualification *</label>\r\n          <select {...register('highestQualification', { required: 'Highest qualification is required' })} disabled={!isEditing}>\r\n            <option value=\"\">Select Qualification</option>\r\n            <option value=\"High School\">High School</option>\r\n            <option value=\"Diploma\">Diploma</option>\r\n            <option value=\"Bachelor's Degree\">Bachelor's Degree</option>\r\n            <option value=\"Master's Degree\">Master's Degree</option>\r\n            <option value=\"PhD\">PhD</option>\r\n          </select>\r\n          {errors.highestQualification && <span className=\"error\">{errors.highestQualification.message}</span>}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Institution *</label>\r\n          <input\r\n            type=\"text\"\r\n            {...register('institution', { required: 'Institution is required' })}\r\n            disabled={!isEditing}\r\n          />\r\n          {errors.institution && <span className=\"error\">{errors.institution.message}</span>}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group\">\r\n          <label>Graduation Year *</label>\r\n          <input\r\n            type=\"number\"\r\n            {...register('graduationYear', { \r\n              required: 'Graduation year is required',\r\n              min: { value: 1950, message: 'Invalid year' },\r\n              max: { value: new Date().getFullYear(), message: 'Year cannot be in future' }\r\n            })}\r\n            disabled={!isEditing}\r\n          />\r\n          {errors.graduationYear && <span className=\"error\">{errors.graduationYear.message}</span>}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Specialization</label>\r\n          <input\r\n            type=\"text\"\r\n            {...register('specialization')}\r\n            disabled={!isEditing}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderEmergencyContact = () => (\r\n    <div className=\"form-section\">\r\n      <h3>Emergency Contact</h3>\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group\">\r\n          <label>Emergency Contact Name *</label>\r\n          <input\r\n            type=\"text\"\r\n            {...register('emergencyName', { required: 'Emergency contact name is required' })}\r\n            disabled={!isEditing}\r\n          />\r\n          {errors.emergencyName && <span className=\"error\">{errors.emergencyName.message}</span>}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Emergency Contact Phone *</label>\r\n          <input\r\n            type=\"tel\"\r\n            {...register('emergencyPhone', { \r\n              required: 'Emergency contact phone is required',\r\n              pattern: {\r\n                value: /^[0-9]{10}$/,\r\n                message: 'Phone number must be 10 digits'\r\n              }\r\n            })}\r\n            disabled={!isEditing}\r\n          />\r\n          {errors.emergencyPhone && <span className=\"error\">{errors.emergencyPhone.message}</span>}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Relationship *</label>\r\n        <select {...register('emergencyRelation', { required: 'Relationship is required' })} disabled={!isEditing}>\r\n          <option value=\"\">Select Relationship</option>\r\n          <option value=\"Spouse\">Spouse</option>\r\n          <option value=\"Parent\">Parent</option>\r\n          <option value=\"Sibling\">Sibling</option>\r\n          <option value=\"Friend\">Friend</option>\r\n          <option value=\"Other\">Other</option>\r\n        </select>\r\n        {errors.emergencyRelation && <span className=\"error\">{errors.emergencyRelation.message}</span>}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderDocuments = () => (\r\n    <div className=\"form-section\">\r\n      <h3>Documents</h3>\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group\">\r\n          <label>Photo (Optional)</label>\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={(e) => {\r\n              if (e.target.files[0]) {\r\n                setValue('photo', e.target.files[0]);\r\n                clearErrors('photo');\r\n              }\r\n            }}\r\n            disabled={!isEditing}\r\n          />\r\n          {watch('photo') && (\r\n            <div className=\"file-preview\">\r\n              <img src={URL.createObjectURL(watch('photo'))} className=\"file-preview\" alt=\"\" />\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>ID Proof (Optional)</label>\r\n          <input\r\n            type=\"file\"\r\n            accept=\".pdf,.doc,.docx,image/*\"\r\n            onChange={(e) => {\r\n              if (e.target.files[0]) {\r\n                setValue('idProof', e.target.files[0]);\r\n                clearErrors('idProof');\r\n              }\r\n            }}\r\n            disabled={!isEditing}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group\">\r\n          <label>Address Proof (Optional)</label>\r\n          <input\r\n            type=\"file\"\r\n            accept=\".pdf,.doc,.docx,image/*\"\r\n            onChange={(e) => {\r\n              if (e.target.files[0]) {\r\n                setValue('addressProof', e.target.files[0]);\r\n                clearErrors('addressProof');\r\n              }\r\n            }}\r\n            disabled={!isEditing}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Educational Certificates (Optional)</label>\r\n          <input\r\n            type=\"file\"\r\n            accept=\".pdf,.doc,.docx,image/*\"\r\n            multiple\r\n            onChange={(e) => {\r\n              if (e.target.files.length > 0) {\r\n                setValue('educationalCertificates', Array.from(e.target.files));\r\n                clearErrors('educationalCertificates');\r\n              }\r\n            }}\r\n            disabled={!isEditing}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderAdditionalInfo = () => (\r\n    <div className=\"form-section\">\r\n      <h3>Additional Information</h3>\r\n      <div className=\"form-group\">\r\n        <label>Skills</label>\r\n        <textarea\r\n          {...register('skills')}\r\n          placeholder=\"Enter your skills (comma separated)\"\r\n          disabled={!isEditing}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Languages Known</label>\r\n        <input\r\n          type=\"text\"\r\n          {...register('languages')}\r\n          placeholder=\"e.g., English, Hindi, Spanish\"\r\n          disabled={!isEditing}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Certifications</label>\r\n        <textarea\r\n          {...register('certifications')}\r\n          placeholder=\"Enter your certifications\"\r\n          disabled={!isEditing}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Work Experience</label>\r\n        <textarea\r\n          {...register('workExperience')}\r\n          placeholder=\"Describe your previous work experience\"\r\n          disabled={!isEditing}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>References</label>\r\n        <textarea\r\n          {...register('references')}\r\n          placeholder=\"Enter references with contact details\"\r\n          disabled={!isEditing}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderStepContent = () => {\r\n    switch (currentStep) {\r\n      case 0:\r\n        return renderPersonalInfo();\r\n      case 1:\r\n        return renderEmploymentInfo();\r\n      case 2:\r\n        return renderEducationalInfo();\r\n      case 3:\r\n        return renderEmergencyContact();\r\n      case 4:\r\n        return renderDocuments();\r\n      case 5:\r\n        return renderAdditionalInfo();\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  // If in dashboard mode, render without modal overlay\r\n  if (isInDashboard) {\r\n    // Check if we're showing a single employee's details or a list of employees\r\n    const isShowingSingleEmployee = !Array.isArray(employeeData);\r\n    \r\n    if (isShowingSingleEmployee) {\r\n      // Show detailed view of a single employee\r\n      return (\r\n        <div className=\"view-edit-employee-dashboard\">\r\n          <div className=\"dashboard-header\">\r\n            <div className=\"header-content\">\r\n              <div className=\"header-left\">\r\n                <h2 className=\"dashboard-title\">Employee Details</h2>\r\n                <p className=\"dashboard-subtitle\">Detailed information for {safeRender(employeeData.firstName)} {safeRender(employeeData.lastName)}</p>\r\n              </div>\r\n              <button\r\n                className=\"back-button\"\r\n                onClick={onClose}\r\n                type=\"button\"\r\n              >\r\n                ← Back to List\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"dashboard-content\">\r\n            <div className=\"employee-details-container\">\r\n              \r\n              {/* Personal Information */}\r\n              <div className=\"detail-section\">\r\n                <h3>Personal Information</h3>\r\n                <div className=\"detail-grid\">\r\n                  <div className=\"detail-item\">\r\n                    <label>First Name:</label>\r\n                    <span>{safeRender(employeeData.firstName)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <label>Last Name:</label>\r\n                    <span>{safeRender(employeeData.lastName)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <label>Email:</label>\r\n                    <span>{safeRender(employeeData.email)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <label>Phone:</label>\r\n                    <span>{safeRender(employeeData.phone)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <label>Date of Birth:</label>\r\n                    <span>{formatDate(employeeData.dateOfBirth)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <label>Gender:</label>\r\n                    <span>{safeRender(employeeData.gender)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <label>Address:</label>\r\n                    <span>{safeRender(employeeData.address)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <label>City:</label>\r\n                    <span>{safeRender(employeeData.city)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <label>State:</label>\r\n                    <span>{safeRender(employeeData.state)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <label>Pincode:</label>\r\n                    <span>{safeRender(employeeData.pincode)}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Employment Information */}\r\n              <div className=\"detail-section\">\r\n                <h3>Employment Information</h3>\r\n                <div className=\"detail-grid\">\r\n                  <div className=\"detail-item\">\r\n                    <label>Employee ID:</label>\r\n                    <span>{safeRender(employeeData.employeeId)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <label>Department:</label>\r\n                    <span>{safeRender(employeeData.department)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <label>Designation:</label>\r\n                    <span>{safeRender(employeeData.designation)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <label>Joining Date:</label>\r\n                    <span>{formatDate(employeeData.joiningDate)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <label>Salary:</label>\r\n                    <span>{safeRender(employeeData.salary)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <label>Supervisor:</label>\r\n                    <span>{safeRender(employeeData.supervisor)}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Educational Information */}\r\n              <div className=\"detail-section\">\r\n                <h3>Educational Information</h3>\r\n                <div className=\"detail-grid\">\r\n                  <div className=\"detail-item\">\r\n                    <label>Highest Qualification:</label>\r\n                    <span>{safeRender(employeeData.highestQualification)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <label>Institution:</label>\r\n                    <span>{safeRender(employeeData.institution)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <label>Graduation Year:</label>\r\n                    <span>{safeRender(employeeData.graduationYear)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <label>Specialization:</label>\r\n                    <span>{safeRender(employeeData.specialization)}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Emergency Contact */}\r\n              <div className=\"detail-section\">\r\n                <h3>Emergency Contact</h3>\r\n                <div className=\"detail-grid\">\r\n                  <div className=\"detail-item\">\r\n                    <label>Emergency Contact Name:</label>\r\n                    <span>{safeRender(employeeData.emergencyName)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <label>Emergency Phone:</label>\r\n                    <span>{safeRender(employeeData.emergencyPhone)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <label>Emergency Relation:</label>\r\n                    <span>{safeRender(employeeData.emergencyRelation)}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Additional Information */}\r\n              <div className=\"detail-section\">\r\n                <h3>Additional Information</h3>\r\n                <div className=\"detail-grid\">\r\n                  <div className=\"detail-item\">\r\n                    <label>Skills:</label>\r\n                    <span>{safeRender(employeeData.skills)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <label>Languages:</label>\r\n                    <span>{safeRender(employeeData.languages)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <label>Certifications:</label>\r\n                    <span>{safeRender(employeeData.certifications)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <label>Work Experience:</label>\r\n                    <span>{safeRender(employeeData.workExperience)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <label>References:</label>\r\n                    <span>{safeRender(employeeData.references)}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      // Show list of all employees\r\n      const employeeColumns = [\r\n        { key: 'firstName', label: 'First Name', sortable: true },\r\n        { key: 'lastName', label: 'Last Name', sortable: true },\r\n        { key: 'email', label: 'Email', sortable: true },\r\n        { key: 'phone', label: 'Phone', sortable: true },\r\n        { key: 'department', label: 'Department', sortable: true },\r\n        { key: 'designation', label: 'Designation', sortable: true },\r\n        { key: 'joiningDate', label: 'Joining Date', sortable: true }\r\n      ];\r\n\r\n      return (\r\n        <div className=\"view-edit-employee-dashboard\">\r\n          <div className=\"dashboard-header\">\r\n            <div className=\"header-content\">\r\n              <div className=\"header-left\">\r\n                <h2 className=\"dashboard-title\">All Employees</h2>\r\n                <p className=\"dashboard-subtitle\">View and manage all employee registrations</p>\r\n              </div>\r\n              <button\r\n                className=\"back-button\"\r\n                onClick={onClose}\r\n                type=\"button\"\r\n              >\r\n                ← Back\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"dashboard-content\">\r\n            <div className=\"employee-details-container\">\r\n              <div className=\"detail-section\">\r\n                <h3>Employee List</h3>\r\n                <p>Total Employees: {Array.isArray(employeeData) ? employeeData.length : 0}</p>\r\n                \r\n                {/* Display employees in a table format */}\r\n                <div className=\"employees-table-container\">\r\n                  {Array.isArray(employeeData) && employeeData.length > 0 ? (\r\n                    <div className=\"employees-table\">\r\n                      <div className=\"table-header\">\r\n                        {employeeColumns.map(column => (\r\n                          <div key={column.key} className=\"table-cell header\">\r\n                            {column.label}\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                      <div className=\"table-body\">\r\n                        {employeeData.map((employee, index) => (\r\n                          <div \r\n                            key={index} \r\n                            className=\"table-row clickable\"\r\n                            onClick={() => onEmployeeSelect && onEmployeeSelect(employee)}\r\n                          >\r\n                            <div className=\"table-cell\">{safeRender(employee.firstName)}</div>\r\n                            <div className=\"table-cell\">{safeRender(employee.lastName)}</div>\r\n                            <div className=\"table-cell\">{safeRender(employee.email)}</div>\r\n                            <div className=\"table-cell\">{safeRender(employee.phone)}</div>\r\n                            <div className=\"table-cell\">{safeRender(employee.department)}</div>\r\n                            <div className=\"table-cell\">{safeRender(employee.designation)}</div>\r\n                            <div className=\"table-cell\">{formatDate(employee.joiningDate)}</div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"no-data\">\r\n                      <p>No employees found. Add some employees using the \"Add Employee\" button.</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"view-edit-employee-details-modal\">\r\n      <div className=\"view-edit-employee-details-modal-content\">\r\n        <div className=\"view-edit-employee-details-modal-header\">\r\n          <h2>{isEditing ? 'Edit Employee Details' : 'Employee Details'}</h2>\r\n          <button className=\"view-edit-employee-details-close-btn\" onClick={onClose}>×</button>\r\n        </div>\r\n\r\n        <div className=\"view-edit-employee-details-modal-body\">\r\n          <div className=\"view-edit-employee-details-step-indicator\">\r\n            {steps.map((step, index) => (\r\n              <div\r\n                key={index}\r\n                className={`view-edit-employee-details-step ${index === currentStep ? 'active' : ''} ${index < currentStep ? 'completed' : ''}`}\r\n              >\r\n                <span className=\"view-edit-employee-details-step-number\">{index + 1}</span>\r\n                <span className=\"view-edit-employee-details-step-title\">{step.title}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <FormProvider {...methods}>\r\n            <form onSubmit={handleSubmit(handleSave)}>\r\n              {renderStepContent()}\r\n\r\n              <div className=\"view-edit-employee-details-form-actions\">\r\n                {isEditing ? (\r\n                  <>\r\n                    {currentStep > 0 && (\r\n                      <button type=\"button\" className=\"view-edit-employee-details-btn view-edit-employee-details-btn-secondary\" onClick={handlePrevious}>\r\n                        Previous\r\n                      </button>\r\n                    )}\r\n                    {currentStep < steps.length - 1 ? (\r\n                      <button type=\"button\" className=\"view-edit-employee-details-btn view-edit-employee-details-btn-primary\" onClick={handleNext}>\r\n                        Next\r\n                      </button>\r\n                    ) : (\r\n                      <button type=\"submit\" className=\"view-edit-employee-details-btn view-edit-employee-details-btn-success\">\r\n                        Save Changes\r\n                      </button>\r\n                    )}\r\n                    <button type=\"button\" className=\"view-edit-employee-details-btn view-edit-employee-details-btn-danger\" onClick={handleCancel}>\r\n                      Cancel\r\n                    </button>\r\n                  </>\r\n                ) : (\r\n                  <button type=\"button\" className=\"view-edit-employee-details-btn view-edit-employee-details-btn-primary\" onClick={() => setIsEditing(true)}>\r\n                    Edit Details\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </form>\r\n          </FormProvider>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewEditEmployeeDetails; ","import React, { useState } from 'react';\r\nimport FarmerRegistrationForm from './FarmerRegistrationForm';\r\nimport '../styles/Forms.css';\r\n\r\nconst FarmerForm = ({ onClose, onSubmit, editData = null, isInDashboard = false }) => {\r\n  const [showForm, setShowForm] = useState(true);\r\n\r\n  const handleClose = () => {\r\n    setShowForm(false);\r\n    onClose && onClose();\r\n  };\r\n\r\n  const handleSubmit = async (data) => {\r\n    try {\r\n      await onSubmit(data);\r\n      handleClose();\r\n    } catch (error) {\r\n      console.error('Error submitting farmer data:', error);\r\n    }\r\n  };\r\n\r\n  if (!showForm) return null;\r\n\r\n  // If in dashboard mode, render without modal overlay\r\n  if (isInDashboard) {\r\n    return (\r\n      <FarmerRegistrationForm\r\n        isInDashboard={true}\r\n        editData={editData}\r\n        onClose={handleClose}\r\n        onSubmit={handleSubmit}\r\n      />\r\n    );\r\n  }\r\n\r\n  // Modal overlay for standalone use\r\n  return (\r\n    <div className=\"farmer-form-overlay\">\r\n      <div className=\"farmer-form-content farmer-modal\">\r\n        <div className=\"farmer-form-header\">\r\n          <h2>{editData ? 'Edit Farmer' : 'Add New Farmer'}</h2>\r\n          <button className=\"farmer-form-close-btn\" onClick={handleClose}>×</button>\r\n        </div>\r\n        \r\n        <div className=\"farmer-form-body\">\r\n          <FarmerRegistrationForm\r\n            isInDashboard={true}\r\n            editData={editData}\r\n            onClose={handleClose}\r\n            onSubmit={handleSubmit}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FarmerForm; ","import React from 'react';\r\nimport '../styles/ViewFarmerDetails.css';\r\n\r\nconst ViewFarmerRegistrationDetails = ({ farmerData, onClose, isInDashboard = false, onFarmerSelect }) => {\r\n  // Safety check to prevent rendering objects directly\r\n  if (!farmerData || typeof farmerData !== 'object') {\r\n    console.error('ViewFarmerRegistrationDetails: Invalid farmerData:', farmerData);\r\n    return (\r\n      <div className=\"modal-overlay\">\r\n        <div className=\"modal-content view-farmer-modal\">\r\n          <div className=\"modal-header\">\r\n            <h2>Farmer Details</h2>\r\n            <button className=\"close-btn\" onClick={onClose}>×</button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <p>No farmer data available or invalid data format.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return 'Not provided';\r\n    return new Date(dateString).toLocaleDateString();\r\n  };\r\n\r\n  const formatAddress = (address) => {\r\n    if (!address) return 'Not provided';\r\n    return `${address.village || ''} ${address.postOffice || ''} ${address.policeStation || ''} ${address.district || ''} ${address.state || ''} ${address.pincode || ''}`.trim();\r\n  };\r\n\r\n  // Helper function to safely render values\r\n  const safeRender = (value) => {\r\n    if (value === null || value === undefined) {\r\n      return 'Not provided';\r\n    }\r\n    if (typeof value === 'object') {\r\n      console.warn('ViewFarmerRegistrationDetails: Object found in value:', value);\r\n      return 'Object (see console)';\r\n    }\r\n    return String(value);\r\n  };\r\n\r\n  // If in dashboard mode, render without modal overlay\r\n  if (isInDashboard) {\r\n    // Check if we're showing a single farmer's details or a list of farmers\r\n    const isShowingSingleFarmer = !Array.isArray(farmerData);\r\n    \r\n    if (isShowingSingleFarmer) {\r\n      // Show detailed view of a single farmer\r\n      return (\r\n        <div className=\"view-farmer-dashboard\">\r\n          <div className=\"dashboard-header\">\r\n            <div className=\"header-content\">\r\n              <div className=\"header-left\">\r\n                <h2 className=\"dashboard-title\">Farmer Details</h2>\r\n                <p className=\"dashboard-subtitle\">Detailed information for {safeRender(farmerData.name)}</p>\r\n              </div>\r\n              <button\r\n                className=\"back-button\"\r\n                onClick={onClose}\r\n                type=\"button\"\r\n              >\r\n                ← Back to List\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"dashboard-content\">\r\n            <div className=\"farmer-details-container\">\r\n              \r\n              {/* Personal Information */}\r\n              <div className=\"detail-section\">\r\n                <h3>Personal Information</h3>\r\n                <div className=\"detail-grid\">\r\n                  <div className=\"detail-item\">\r\n                    <label>Name:</label>\r\n                    <span>{safeRender(farmerData.name)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <label>Date of Birth:</label>\r\n                    <span>{formatDate(farmerData.dateOfBirth)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <label>Gender:</label>\r\n                    <span>{safeRender(farmerData.gender)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <label>Contact Number:</label>\r\n                    <span>{safeRender(farmerData.contactNumber)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <label>Email:</label>\r\n                    <span>{safeRender(farmerData.email)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <label>Father's Name:</label>\r\n                    <span>{safeRender(farmerData.fatherName)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <label>Nationality:</label>\r\n                    <span>{safeRender(farmerData.nationality)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <label>Alternative Contact:</label>\r\n                    <span>{safeRender(farmerData.alternativeContactNumber)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <label>Alternative Relation:</label>\r\n                    <span>{safeRender(farmerData.alternativeRelationType)}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Address Information */}\r\n              <div className=\"detail-section\">\r\n                <h3>Address Information</h3>\r\n                <div className=\"detail-grid\">\r\n                  <div className=\"detail-item\">\r\n                    <label>State:</label>\r\n                    <span>{safeRender(farmerData.state)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <label>District:</label>\r\n                    <span>{safeRender(farmerData.district)}</span>\r\n                  </div>\r\n                  <div className=\"detail-item full-width\">\r\n                    <label>Complete Address:</label>\r\n                    <span>{`${safeRender(farmerData.district)}, ${safeRender(farmerData.state)}`.replace(/,\\s*,/g, ',').replace(/^,\\s*/, '').replace(/,\\s*$/, '')}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Assignment Information */}\r\n              <div className=\"detail-section\">\r\n                <h3>Assignment Information</h3>\r\n                <div className=\"detail-grid\">\r\n                  <div className=\"detail-item\">\r\n                    <label>KYC Status:</label>\r\n                    <span className={`kyc-status-badge ${safeRender(farmerData.kycStatus)?.toLowerCase()}`}>\r\n                      {safeRender(farmerData.kycStatus) || 'PENDING'}\r\n                    </span>\r\n                  </div>\r\n                  {farmerData.assignedEmployee && (\r\n                    <div className=\"detail-item\">\r\n                      <label>Assigned Employee:</label>\r\n                      <span>{typeof farmerData.assignedEmployee === 'object' ? \r\n                        `${safeRender(farmerData.assignedEmployee.firstName)} ${safeRender(farmerData.assignedEmployee.lastName)}` : \r\n                        safeRender(farmerData.assignedEmployee)}</span>\r\n                    </div>\r\n                  )}\r\n                  {farmerData.assignedEmployeeId && (\r\n                    <div className=\"detail-item\">\r\n                      <label>Assigned Employee ID:</label>\r\n                      <span>{safeRender(farmerData.assignedEmployeeId)}</span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      // Show list of all farmers\r\n      const farmerColumns = [\r\n        { key: 'name', label: 'Name', sortable: true },\r\n        { key: 'contactNumber', label: 'Contact Number', sortable: true },\r\n        { key: 'email', label: 'Email', sortable: true },\r\n        { key: 'state', label: 'State', sortable: true },\r\n        { key: 'district', label: 'District', sortable: true },\r\n        { key: 'kycStatus', label: 'KYC Status', sortable: true },\r\n        { key: 'assignedEmployee', label: 'Assigned Employee', sortable: true }\r\n      ];\r\n\r\n      return (\r\n        <div className=\"view-farmer-dashboard\">\r\n          <div className=\"dashboard-header\">\r\n            <div className=\"header-content\">\r\n              <div className=\"header-left\">\r\n                <h2 className=\"dashboard-title\">All Farmers</h2>\r\n                <p className=\"dashboard-subtitle\">View and manage all farmer registrations</p>\r\n              </div>\r\n              <button\r\n                className=\"back-button\"\r\n                onClick={onClose}\r\n                type=\"button\"\r\n              >\r\n                ← Back\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"dashboard-content\">\r\n            <div className=\"farmer-details-container\">\r\n              <div className=\"detail-section\">\r\n                <h3>Farmer List</h3>\r\n                <p>Total Farmers: {Array.isArray(farmerData) ? farmerData.length : 0}</p>\r\n                \r\n                {/* Display farmers in a table format */}\r\n                <div className=\"farmers-table-container\">\r\n                  {Array.isArray(farmerData) && farmerData.length > 0 ? (\r\n                    <div className=\"farmers-table\">\r\n                      <div className=\"table-header\">\r\n                        {farmerColumns.map(column => (\r\n                          <div key={column.key} className=\"table-cell header\">\r\n                            {column.label}\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                      <div className=\"table-body\">\r\n                        {farmerData.map((farmer, index) => (\r\n                          <div \r\n                            key={index} \r\n                            className=\"table-row clickable\"\r\n                            onClick={() => onFarmerSelect && onFarmerSelect(farmer)}\r\n                          >\r\n                            <div className=\"table-cell\">{safeRender(farmer.name)}</div>\r\n                            <div className=\"table-cell\">{safeRender(farmer.contactNumber)}</div>\r\n                            <div className=\"table-cell\">{safeRender(farmer.email)}</div>\r\n                            <div className=\"table-cell\">{safeRender(farmer.state)}</div>\r\n                            <div className=\"table-cell\">{safeRender(farmer.district)}</div>\r\n                            <div className=\"table-cell\">\r\n                              <span className={`kyc-status-badge ${safeRender(farmer.kycStatus)?.toLowerCase()}`}>\r\n                                {safeRender(farmer.kycStatus) || 'PENDING'}\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"table-cell\">\r\n                              {farmer.assignedEmployee ? \r\n                                (typeof farmer.assignedEmployee === 'object' ? \r\n                                  `${safeRender(farmer.assignedEmployee.firstName)} ${safeRender(farmer.assignedEmployee.lastName)}` : \r\n                                  safeRender(farmer.assignedEmployee)\r\n                                ) : 'Not Assigned'\r\n                              }\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"no-data\">\r\n                      <p>No farmers found. Add some farmers using the \"Add Farmer\" button.</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-content view-farmer-modal\">\r\n        <div className=\"modal-header\">\r\n          <h2>Farmer Registration Details</h2>\r\n          <button className=\"close-btn\" onClick={onClose}>×</button>\r\n        </div>\r\n        \r\n        <div className=\"modal-body\">\r\n          <div className=\"farmer-details-container\">\r\n            \r\n            {/* Personal Information */}\r\n            <div className=\"detail-section\">\r\n              <h3>Personal Information</h3>\r\n              <div className=\"detail-grid\">\r\n                                 <div className=\"detail-item\">\r\n                   <label>Name:</label>\r\n                   <span>{safeRender(farmerData.name)}</span>\r\n                 </div>\r\n                <div className=\"detail-item\">\r\n                  <label>Date of Birth:</label>\r\n                  <span>{formatDate(farmerData.dateOfBirth)}</span>\r\n                </div>\r\n                <div className=\"detail-item\">\r\n                  <label>Gender:</label>\r\n                  <span>{safeRender(farmerData.gender)}</span>\r\n                </div>\r\n                                 <div className=\"detail-item\">\r\n                   <label>Contact Number:</label>\r\n                   <span>{safeRender(farmerData.contactNumber)}</span>\r\n                 </div>\r\n                <div className=\"detail-item\">\r\n                  <label>Email:</label>\r\n                  <span>{safeRender(farmerData.email)}</span>\r\n                </div>\r\n                <div className=\"detail-item\">\r\n                  <label>Father's Name:</label>\r\n                  <span>{safeRender(farmerData.fatherName)}</span>\r\n                </div>\r\n                <div className=\"detail-item\">\r\n                  <label>Nationality:</label>\r\n                  <span>{safeRender(farmerData.nationality)}</span>\r\n                </div>\r\n                                 <div className=\"detail-item\">\r\n                   <label>Alternative Contact:</label>\r\n                   <span>{safeRender(farmerData.alternativeContactNumber)}</span>\r\n                 </div>\r\n                 <div className=\"detail-item\">\r\n                   <label>Alternative Relation:</label>\r\n                   <span>{safeRender(farmerData.alternativeRelationType)}</span>\r\n                 </div>\r\n              </div>\r\n            </div>\r\n\r\n                         {/* Address Information */}\r\n             <div className=\"detail-section\">\r\n               <h3>Address Information</h3>\r\n               <div className=\"detail-grid\">\r\n                 <div className=\"detail-item\">\r\n                   <label>State:</label>\r\n                   <span>{safeRender(farmerData.state)}</span>\r\n                 </div>\r\n                 <div className=\"detail-item\">\r\n                   <label>District:</label>\r\n                   <span>{safeRender(farmerData.district)}</span>\r\n                 </div>\r\n                 <div className=\"detail-item full-width\">\r\n                   <label>Complete Address:</label>\r\n                   <span>{`${safeRender(farmerData.district)}, ${safeRender(farmerData.state)}`.replace(/,\\s*,/g, ',').replace(/^,\\s*/, '').replace(/,\\s*$/, '')}</span>\r\n                 </div>\r\n               </div>\r\n             </div>\r\n\r\n                         {/* Assignment Information */}\r\n             <div className=\"detail-section\">\r\n               <h3>Assignment Information</h3>\r\n               <div className=\"detail-grid\">\r\n                 <div className=\"detail-item\">\r\n                   <label>KYC Status:</label>\r\n                   <span className={`kyc-status-badge ${safeRender(farmerData.kycStatus)?.toLowerCase()}`}>\r\n                     {safeRender(farmerData.kycStatus) || 'PENDING'}\r\n                   </span>\r\n                 </div>\r\n                 {farmerData.assignedEmployee && (\r\n                   <div className=\"detail-item\">\r\n                     <label>Assigned Employee:</label>\r\n                     <span>{typeof farmerData.assignedEmployee === 'object' ? \r\n                       `${safeRender(farmerData.assignedEmployee.firstName)} ${safeRender(farmerData.assignedEmployee.lastName)}` : \r\n                       safeRender(farmerData.assignedEmployee)}</span>\r\n                   </div>\r\n                 )}\r\n                 {farmerData.assignedEmployeeId && (\r\n                   <div className=\"detail-item\">\r\n                     <label>Assigned Employee ID:</label>\r\n                     <span>{safeRender(farmerData.assignedEmployeeId)}</span>\r\n                   </div>\r\n                 )}\r\n               </div>\r\n             </div>\r\n\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewFarmerRegistrationDetails; "],"names":["api","axios","create","baseURL","process","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","login","async","post","credentials","data","getProfile","get","register","userData","sendOTP","emailOrPhone","email","verifyOTP","otpData","otp","resendOTP","forgotPassword","forgotUserId","resetPassword","resetData","changePassword","passwordData","changeUserId","userIdData","getCountries","getStates","countryId","superAdminAPI","getAllUsers","getRegistrationList","filters","arguments","length","undefined","params","getRegistrationListByStatus","searchRegistrations","query","getPendingRegistrations","getApprovedUsers","getUsersByRole","role","getPendingUsersByRole","approveUser","userId","put","rejectUser","reason","deleteUser","delete","updateUser","updateUserStatus","getDashboardStats","bulkAssignFarmers","farmerIds","employeeId","assignFarmer","farmerId","farmersAPI","getAllFarmers","getFarmerById","id","createFarmer","farmerData","updateFarmer","deleteFarmer","getFarmerStats","adminAPI","getAllEmployees","getFarmersWithKyc","getEmployeesWithStats","getFarmersByEmployee","getTodoList","getEnhancedTodoList","filterFarmers","getLocations","getAssignmentHistory","getFarmersByAssignmentStatus","assignmentStatus","getAllRegistrations","approveRegistration","registrationId","approvalData","rejectRegistration","rejectionData","employeesAPI","getEmployeeById","createEmployee","employeeData","updateEmployee","deleteEmployee","getAssignedFarmers","getEmployeeStats","employeeAPI","console","log","updateProfile","profileData","getStats","kycAPI","uploadDocuments","documents","formData","FormData","Object","keys","forEach","key","append","approveKYC","rejectKYC","referBackKYC","referBackData","getKYCStatus","getKYCDocuments","_ref","actions","item","isOpen","setIsOpen","useState","dropdownRef","useRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","_jsxs","className","ref","children","_jsx","onClick","map","action","index","showCondition","handleActionClick","icon","label","DataTable","React","columns","onEdit","onDelete","onView","showDelete","customActions","loading","emptyMessage","getStatusClass","useCallback","toLowerCase","safeRender","value","columnKey","name","title","Array","isArray","join","String","tableData","useMemo","tableColumns","column","row","cellContent","render","type","ActionDropdown","displayName","onClose","onUpdate","isInDashboard","onEmployeeSelect","isEditing","setIsEditing","currentStep","setCurrentStep","warn","formatDate","dateString","Date","toLocaleDateString","methods","useForm","defaultValues","firstName","lastName","phone","dateOfBirth","gender","address","city","state","pincode","department","designation","joiningDate","salary","supervisor","highestQualification","institution","graduationYear","specialization","emergencyName","emergencyPhone","emergencyRelation","photo","idProof","addressProof","educationalCertificates","skills","languages","certifications","workExperience","references","handleSubmit","watch","setValue","trigger","clearErrors","formState","errors","steps","fields","employeeColumns","sortable","employee","step","FormProvider","onSubmit","renderStepContent","required","disabled","message","pattern","min","max","getFullYear","accept","onChange","e","files","src","URL","createObjectURL","alt","multiple","from","placeholder","_Fragment","handlePrevious","currentFields","handleCancel","reset","editData","showForm","setShowForm","handleClose","FarmerRegistrationForm","_safeRender3","onFarmerSelect","_safeRender","contactNumber","fatherName","nationality","alternativeContactNumber","alternativeRelationType","district","replace","kycStatus","assignedEmployee","assignedEmployeeId","farmerColumns","farmer","_safeRender2"],"sourceRoot":""}