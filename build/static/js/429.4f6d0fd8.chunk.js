"use strict";(self.webpackChunkagristack_farmer_management=self.webpackChunkagristack_farmer_management||[]).push([[429],{476:(a,e,t)=>{t.d(e,{Dv:()=>o,Er:()=>d,JL:()=>m,R2:()=>n,kM:()=>c,s2:()=>l,xs:()=>i});var s=t(6213);const r=s.A.create({baseURL:{NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0}.REACT_APP_API_URL||"http://localhost:8080/api",timeout:1e4,headers:{"Content-Type":"application/json"}});r.interceptors.request.use((a=>{const e=localStorage.getItem("token");return console.log("\ud83d\udd10 API Request - Token from localStorage:",e?"Present":"Missing"),console.log("\ud83d\udd10 API Request - URL:",a.url),console.log("\ud83d\udd10 API Request - Method:",a.method),e?(a.headers.Authorization=`Bearer ${e}`,console.log("\ud83d\udd10 API Request - Authorization header added")):console.log("\u26a0\ufe0f API Request - No token found in localStorage"),a}),(a=>(console.error("\u274c API Request interceptor error:",a),Promise.reject(a)))),r.interceptors.response.use((a=>a),(a=>{var e,t,s,r,n,o;if(console.error("\u274c API Response Error:",{status:null===(e=a.response)||void 0===e?void 0:e.status,statusText:null===(t=a.response)||void 0===t?void 0:t.statusText,url:null===(s=a.config)||void 0===s?void 0:s.url,method:null===(r=a.config)||void 0===r?void 0:r.method,message:a.message}),401===(null===(n=a.response)||void 0===n?void 0:n.status)||403===(null===(o=a.response)||void 0===o?void 0:o.status)){console.error("\ud83d\udd10 Authentication failed - clearing tokens and redirecting to login");["token","user","authToken","jwtToken","accessToken","refreshToken","auth","session","login"].forEach((a=>{localStorage.removeItem(a),sessionStorage.removeItem(a)})),localStorage.clear(),sessionStorage.clear(),document.cookie.split(";").forEach((function(a){document.cookie=a.replace(/^ +/,"").replace(/=.*/,"=;expires="+(new Date).toUTCString()+";path=/")})),window.location.pathname.includes("/login")||(window.location.href="/login")}return Promise.reject(a)}));const n={login:async a=>(await r.post("/auth/login",a)).data,getProfile:async()=>(await r.get("/auth/profile")).data,register:async a=>(await r.post("/auth/register",a)).data,sendOTP:async a=>(await r.post("/auth/send-otp",{emailOrPhone:a})).data,verifyOTP:async a=>(await r.post("/auth/verify-otp",{emailOrPhone:a.email,otp:a.otp})).data,resendOTP:async a=>(await r.post("/auth/resend-otp",{emailOrPhone:a})).data,forgotPassword:async a=>(await r.post("/auth/forgot-password",{emailOrPhone:a})).data,forgotUserId:async a=>(await r.post("/auth/forgot-user-id",{emailOrPhone:a})).data,resetPassword:async a=>(await r.post("/auth/reset-password",a)).data,changePassword:async a=>(await r.post("/auth/change-password",a)).data,resetPasswordConfirm:async a=>(await r.post("/auth/reset-password/confirm",a)).data,changeUserId:async a=>(await r.post("/auth/change-user-id",a)).data,getCountries:async()=>(await r.get("/auth/countries")).data,getStates:async a=>(await r.post("/auth/states",{countryId:a})).data},o={getAllUsers:async()=>(await r.get("/super-admin/registration-list")).data,getRegistrationList:async function(){let a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(await r.get("/super-admin/registration-list",{params:a})).data},getRegistrationListByStatus:async a=>(await r.get("/super-admin/registration-list/filter",{params:{status:a}})).data,searchRegistrations:async a=>(await r.get("/super-admin/registration-list/search",{params:{query:a}})).data,getPendingRegistrations:async()=>(await r.get("/super-admin/pending-registrations")).data,getApprovedUsers:async()=>(await r.get("/super-admin/approved-users")).data,getUsersByRole:async a=>(await r.get(`/super-admin/users/by-role/${a}`)).data,getPendingUsersByRole:async a=>(await r.get(`/super-admin/pending-users/by-role/${a}`)).data,approveUser:async(a,e)=>(await r.put(`/auth/users/${a}/approve`,{role:e})).data,rejectUser:async(a,e)=>(await r.put(`/auth/users/${a}/status`,{status:"REJECTED"})).data,deleteUser:async a=>(await r.delete(`/super-admin/users/${a}`)).data,updateUser:async(a,e)=>(await r.put(`/super-admin/users/${a}`,e)).data,updateUserStatus:async(a,e)=>(await r.put(`/auth/users/${a}/status`,{status:e})).data,getDashboardStats:async()=>(await r.get("/super-admin/dashboard/stats")).data,bulkAssignFarmers:async(a,e)=>(await r.post("/super-admin/bulk-assign-farmers",{farmerIds:a,employeeId:e})).data,assignFarmer:async(a,e)=>(await r.post("/super-admin/assign-farmer",null,{params:{farmerId:a,employeeId:e}})).data},i={getAllFarmers:async function(){let a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(await r.get("/super-admin/farmers",{params:a})).data},getFarmerById:async a=>(await r.get(`/super-admin/farmers/${a}`)).data,createFarmer:async a=>(await r.post("/super-admin/farmers",a)).data,updateFarmer:async(a,e)=>(await r.put(`/super-admin/farmers/${a}`,e)).data,deleteFarmer:async a=>(await r.delete(`/super-admin/farmers/${a}`)).data,assignFarmer:async(a,e)=>(await r.post(`/super-admin/farmers/${a}/assign`,{employeeId:e})).data,getFarmerStats:async()=>(await r.get("/super-admin/farmers/stats")).data},d={getAllFarmers:async function(){let a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(await r.get("/admin/farmers",{params:a})).data},getAllEmployees:async function(){let a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(await r.get("/admin/employees",{params:a})).data},getFarmersWithKyc:async()=>(await r.get("/admin/farmers-with-kyc")).data,getEmployeesWithStats:async()=>(await r.get("/admin/employees-with-stats")).data,getFarmersByEmployee:async a=>(await r.get(`/admin/employees/${a}/assigned-farmers`)).data,getTodoList:async()=>(await r.get("/admin/todo-list")).data,getEnhancedTodoList:async()=>(await r.get("/admin/enhanced-todo-list")).data,getDashboardStats:async()=>(await r.get("/admin/dashboard-stats")).data,filterFarmers:async function(){let a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(await r.get("/admin/farmers/filter",{params:a})).data},getLocations:async()=>(await r.get("/admin/locations")).data,bulkAssignFarmers:async(a,e)=>(await r.post("/admin/bulk-assign-farmers",{farmerIds:a,employeeId:e})).data,assignFarmer:async(a,e)=>(await r.post("/admin/assign-farmer",null,{params:{farmerId:a,employeeId:e}})).data,getAssignmentHistory:async function(){let a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(await r.get("/admin/assignment-history",{params:a})).data},getFarmersByAssignmentStatus:async a=>(await r.get("/admin/farmers/by-assignment-status",{params:{assignmentStatus:a}})).data,getAllRegistrations:async function(){let a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(await r.get("/admin/registration-list",{params:a})).data},getRegistrationListByStatus:async a=>(await r.get("/admin/registration-list/filter",{params:{status:a}})).data,approveRegistration:async(a,e)=>(await r.post(`/admin/registrations/${a}/approve`,e)).data,rejectRegistration:async(a,e)=>(await r.post(`/admin/registrations/${a}/reject`,e)).data},l={getAllEmployees:async function(){let a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(await r.get("/super-admin/employees",{params:a})).data},getEmployeeById:async a=>(await r.get(`/super-admin/employees/${a}`)).data,createEmployee:async a=>(await r.post("/super-admin/employees",a)).data,updateEmployee:async(a,e)=>(await r.put(`/super-admin/employees/${a}`,e)).data,deleteEmployee:async a=>(await r.delete(`/super-admin/employees/${a}`)).data,getEmployeeStats:async()=>(await r.get("/super-admin/employees/stats")).data},m={getAssignedFarmers:async()=>(await r.get("/employee/assigned-farmers")).data,getFarmerById:async a=>(await r.get(`/employee/farmers/${a}`)).data,updateFarmer:async(a,e)=>(await r.put(`/employee/farmers/${a}`,e)).data,getProfile:async()=>(await r.get("/employee/profile")).data,updateProfile:async a=>(await r.put("/employee/profile",a)).data},c={approveKYC:async(a,e)=>(await r.post(`/kyc/${a}/approve`,e)).data,rejectKYC:async(a,e)=>(await r.post(`/kyc/${a}/reject`,e)).data,referBackKYC:async(a,e)=>(await r.post(`/kyc/${a}/refer-back`,e)).data,getKYCStatus:async a=>(await r.get(`/kyc/${a}/status`)).data,uploadKYCDocuments:async(a,e)=>{const t=new FormData;Object.keys(e).forEach((a=>{e[a]&&(Array.isArray(e[a])?e[a].forEach(((e,s)=>{t.append(`${a}[${s}]`,e)})):t.append(a,e[a]))}));const r=s.A.create({baseURL:{NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0}.REACT_APP_API_URL||"http://localhost:8080/api",timeout:3e4});r.interceptors.request.use((a=>{const e=localStorage.getItem("token");return e&&(a.headers.Authorization=`Bearer ${e}`),a}));return(await r.post(`/kyc/${a}/upload`,t,{headers:{"Content-Type":"multipart/form-data"}})).data},getKYCHistory:async a=>(await r.get(`/kyc/${a}/history`)).data,getKYCDocumentUrl:async(a,e)=>(await r.get(`/kyc/${a}/documents/${e}/download`)).data,deleteKYCDocument:async(a,e)=>(await r.delete(`/kyc/${a}/documents/${e}`)).data}},1338:(a,e,t)=>{t.r(e),t.d(e,{default:()=>o});t(5043);var s=t(2383),r=t(476),n=t(579);const o=()=>(0,n.jsx)(s.A,{isInDashboard:!1,onSubmit:async a=>{try{console.log("Employee registration submitted:",a);const e={name:`${a.firstName||""} ${a.middleName||""} ${a.lastName||""}`.trim(),gender:a.gender||"",dateOfBirth:a.dob||"",email:a.email||"",phoneNumber:a.contactNumber||"",role:"EMPLOYEE",password:"TempPassword123!"};if(!e.name||!e.email||!e.phoneNumber)return void alert("Please fill in all required basic information (name, email, phone number)");console.log("Submitting basic registration data:",e);const t=await r.R2.register(e);console.log("Employee registration successful:",t),alert("Employee registration completed successfully! Please wait for admin approval. You will receive login credentials once approved.")}catch(e){console.error("Error submitting employee registration:",e),alert("Error submitting form. Please try again.")}}})}}]);
//# sourceMappingURL=429.4f6d0fd8.chunk.js.map