{"version":3,"file":"static/js/58.eda2cfef.chunk.js","mappings":"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","sources":["../node_modules/react-chartjs-2/src/utils.ts","../node_modules/react-chartjs-2/src/chart.tsx","../node_modules/react-chartjs-2/src/typedCharts.tsx","../node_modules/@kurkle/color/dist/color.esm.js","../node_modules/chart.js/src/helpers/helpers.core.ts","../node_modules/chart.js/src/helpers/helpers.math.ts","../node_modules/chart.js/src/helpers/helpers.collection.ts","../node_modules/chart.js/src/helpers/helpers.extras.ts","../node_modules/chart.js/src/helpers/helpers.easing.ts","../node_modules/chart.js/src/helpers/helpers.color.ts","../node_modules/chart.js/src/core/core.animations.defaults.js","../node_modules/chart.js/src/helpers/helpers.intl.ts","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/chart.js/src/core/core.layouts.defaults.js","../node_modules/chart.js/src/core/core.scale.defaults.js","../node_modules/chart.js/src/helpers/helpers.canvas.ts","../node_modules/chart.js/src/helpers/helpers.options.ts","../node_modules/chart.js/src/helpers/helpers.config.ts","../node_modules/chart.js/src/helpers/helpers.curve.ts","../node_modules/chart.js/src/helpers/helpers.dom.ts","../node_modules/chart.js/src/helpers/helpers.rtl.ts","../node_modules/chart.js/src/helpers/helpers.dataset.ts","../node_modules/chart.js/src/core/core.animator.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/core/core.adapters.ts","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/platform/platform.base.js","../node_modules/chart.js/src/platform/platform.basic.js","../node_modules/chart.js/src/platform/platform.dom.js","../node_modules/chart.js/src/core/core.element.ts","../node_modules/chart.js/src/core/core.scale.autoskip.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.typedRegistry.js","../node_modules/chart.js/src/core/core.registry.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.config.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/platform/index.js","../node_modules/chart.js/src/elements/element.arc.ts","../node_modules/chart.js/src/elements/element.bar.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/chart.js/src/plugins/plugin.subtitle.js","../node_modules/chart.js/src/plugins/plugin.tooltip.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js"],"sourcesContent":["import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types.js';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  const options = chart.options;\n\n  if (options && nextOptions) {\n    Object.assign(options, nextOptions);\n  }\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, BaseChartComponent } from './types.js';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils.js';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  props: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  const {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...canvasProps\n  } = props;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<ChartJS<TType, TData, TLabel> | null>(null);\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options: options && { ...options },\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      role='img'\n      height={height}\n      width={width}\n      {...canvasProps}\n    >\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart = forwardRef(ChartComponent) as BaseChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types.js';\nimport { Chart } from './chart.js';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n","/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || value === undefined;\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */\nfunction isNonPrimitive(n: unknown) {\n  return typeof n === 'symbol' || (typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n));\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNonPrimitive(n) && !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\nimport {isNullOrUndef} from './helpers.core.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, vScale, _parsed} = meta;\n    const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n      if (spanGaps) {\n        const distanceToDefinedLo = (_parsed\n          .slice(0, start + 1)\n          .reverse()\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        start -= Math.max(0, distanceToDefinedLo);\n      }\n      start = _limitValue(start, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n      let end = Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n      if (spanGaps) {\n        const distanceToDefinedHi = (_parsed\n          .slice(end - 1)\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        end += Math.max(0, distanceToDefinedHi);\n      }\n      count = _limitValue(end, start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas?: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  if (!ctx && !canvas) {\n    return;\n  }\n\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type PrivateChart from '../core/core.controller.js';\nimport type {Chart, ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart | PrivateChart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart | PrivateChart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  (chart as PrivateChart).height = Math.floor(chart.height);\n  (chart as PrivateChart).width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    (chart as PrivateChart).currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import type {Chart, ChartArea, ChartMeta, Scale, TRBL} from '../types/index.js';\n\nfunction getSizeForArea(scale: Scale, chartArea: ChartArea, field: keyof ChartArea) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta: ChartMeta, chartArea: ChartArea): TRBL {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nexport function getDatasetClipArea(chart: Chart, meta: ChartMeta): TRBL | false {\n  const clip = meta._clip;\n  if (clip.disabled) {\n    return false;\n  }\n  const area = getDatasetArea(meta, chart.chartArea);\n\n  return {\n    left: clip.left === false ? 0 : area.left - (clip.left === true ? 0 : clip.left),\n    right: clip.right === false ? chart.width : area.right + (clip.right === true ? 0 : clip.right),\n    top: clip.top === false ? 0 : area.top - (clip.top === true ? 0 : clip.top),\n    bottom: clip.bottom === false ? chart.height : area.bottom + (clip.bottom === true ? 0 : clip.bottom)\n  };\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  let found = false;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      found = true;\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n\n  if (!found && !options.all) {\n    return 0;\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n      meta._stacked = isStacked(meta.vScale, meta);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n    const iScaleValue = currentParsed && currentParsed[iScale.axis];\n\n    const skipNull = (meta) => {\n      const parsed = meta._parsed.find(item => item[iScale.axis] === iScaleValue);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  _getAxisCount() {\n    return this._getAxis().length;\n  }\n\n  getFirstScaleIdForIndexAxis() {\n    const scales = this.chart.scales;\n    const indexScaleId = this.chart.options.indexAxis;\n    return Object.keys(scales).filter(key => scales[key].axis === indexScaleId).shift();\n  }\n\n  _getAxis() {\n    const axis = {};\n    const firstScaleAxisId = this.getFirstScaleIdForIndexAxis();\n    for (const dataset of this.chart.data.datasets) {\n      axis[valueOrDefault(\n        this.chart.options.indexAxis === 'x' ? dataset.xAxisID : dataset.yAxisID, firstScaleAxisId\n      )] = true;\n    }\n    return Object.keys(axis);\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    const axisCount = this._getAxisCount();\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount * axisCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount * axisCount);\n      const axisID = this.chart.options.indexAxis === 'x' ? this.getDataset().xAxisID : this.getDataset().yAxisID;\n      const axisNumber = this._getAxis().indexOf(valueOrDefault(axisID, this.getFirstScaleIdForIndexAxis()));\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined) + axisNumber;\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<TimeUnit | 'datetime', string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: string): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: string): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number | boolean): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options?: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<TimeUnit | 'datetime', string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase as {\n    new (options?: AnyObject): DateAdapter;\n    override<T extends AnyObject = AnyObject>(\n      members: Partial<Omit<DateAdapter<T>, 'options'>>\n    ): void;\n  }\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea, isNullOrUndef} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      const result = lookupMethod(data, axis, value);\n      if (spanGaps) {\n        const {vScale} = controller._cachedMeta;\n        const {_parsed} = metaset;\n\n        const distanceToDefinedLo = (_parsed\n          .slice(0, result.lo + 1)\n          .reverse()\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        result.lo -= Math.max(0, distanceToDefinedLo);\n\n        const distanceToDefinedHi = (_parsed\n          .slice(result.hi)\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        result.hi += Math.max(0, distanceToDefinedHi);\n      }\n      return result;\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea, _isDomSupported, retinaScale, getDatasetClipArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      // Unset pending resize request now to avoid possible recursion within _resize\n      this._resizeBeforeDraw = null;\n      this._resize(width, height);\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    // @ts-expect-error\n    const clip = getDatasetClipArea(this, meta);\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (clip) {\n      clipArea(ctx, clip);\n    }\n\n    meta.controller.draw();\n\n    if (clip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the event inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _angleDiff, _normalizeAngle, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\nfunction clipSelf(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, x, y, outerRadius, innerRadius, options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const outerAngleClip = Math.min(borderWidth / outerRadius, _normalizeAngle(startAngle - endAngle));\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius - borderWidth / 2, startAngle + outerAngleClip / 2, endAngle - outerAngleClip / 2);\n\n  if (innerRadius > 0) {\n    const innerAngleClip = Math.min(borderWidth / innerRadius, _normalizeAngle(startAngle - endAngle));\n    ctx.arc(x, y, innerRadius + borderWidth / 2, endAngle - innerAngleClip / 2, startAngle + innerAngleClip / 2, true);\n  } else {\n    const clipWidth = Math.min(borderWidth / 2, outerRadius * _normalizeAngle(startAngle - endAngle));\n\n    if (borderJoinStyle === 'round') {\n      ctx.arc(x, y, clipWidth, endAngle - PI / 2, startAngle + PI / 2, true);\n    } else if (borderJoinStyle === 'bevel') {\n      const r = 2 * clipWidth * clipWidth;\n      const endX = -r * Math.cos(endAngle + PI / 2) + x;\n      const endY = -r * Math.sin(endAngle + PI / 2) + y;\n      const startX = r * Math.cos(startAngle + PI / 2) + x;\n      const startY = r * Math.sin(startAngle + PI / 2) + y;\n      ctx.lineTo(endX, endY);\n      ctx.lineTo(startX, startY);\n    }\n  }\n  ctx.closePath();\n\n  ctx.moveTo(0, 0);\n  ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n  ctx.clip('evenodd');\n}\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset, borderRadius} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (options.selfJoin && endAngle - startAngle >= PI && borderRadius === 0 && borderJoinStyle !== 'miter') {\n    clipSelf(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n    selfJoin: false,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n    const betweenAngles = _circumference >= TAU || nonZeroBetween;\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    // No visible items where found, return false so we don't have to divide by 0 which reduces in NaN\n    if (count === 0 || xSet.size === 0) {\n      return false;\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash || []);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n"],"names":["defaultDatasetIdKey","reforwardRef","ref","value","current","setLabels","currentData","nextLabels","labels","setDatasets","nextDatasets","datasetIdKey","arguments","length","addedDatasets","datasets","map","nextDataset","currentDataset","find","dataset","data","includes","push","Object","assign","cloneData","nextData","ChartComponent","props","height","width","redraw","type","options","plugins","fallbackContent","updateMode","canvasProps","canvasRef","useRef","chartRef","renderChart","Chart$1","destroyChart","destroy","useEffect","chart","nextOptions","setOptions","config","setTimeout","update","React","role","Chart","forwardRef","createTypedChart","registerables","register","Bar","BarController","Doughnut","DoughnutController","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","rgb2hsl","hueValue","calln","Array","isArray","hsl2rgb","hue","hueParse","str","m","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","keys","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","fromObject","input","functionParse","charAt","rgbParse","Color","constructor","ret","len","hexParse","this","_rgb","_valid","valid","obj","rgbString","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","id","isNullOrUndef","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","Symbol","toPrimitive","isNonPrimitive","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_len2","_key2","_toLeftRightCenter","align","_alignStartEnd","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","gc","longest","string","textWidth","measureText","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","save","resetTransform","clearRect","restore","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","getTarget","finalRootScopes","_resolve","cache","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","add","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","rootScopes","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","useOffsetPos","shadowRoot","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","getSizeForArea","chartArea","field","getDatasetClipArea","meta","_clip","disabled","xScale","yScale","getDatasetArea","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","_chart","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","found","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","defineProperty","base","_len","_key","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","createStack","hidden","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","toClip","defaultClip","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForValue","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","_ref","inflateAmount","categoryPercentage","barPercentage","grouped","_index_","_value_","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","currentParsed","iScaleValue","skipNull","_getStackCount","_getAxisCount","_getAxis","getFirstScaleIdForIndexAxis","indexScaleId","firstScaleAxisId","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","axisCount","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","axisID","axisNumber","stackIndex","rects","animateRotate","animateScale","cutout","circumference","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","abstract","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","binarySearch","metaset","spanGaps","lookupMethod","_reversePixels","distanceToDefinedLo","findIndex","distanceToDefinedHi","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","skip","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","gcLen","garbageCollect","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","borderDashOffset","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","_len3","_key3","_len4","_key4","addPlugins","_len5","_key5","addScales","_len6","_key6","getController","_get","getElement","getPlugin","getScale","removeControllers","_len7","_key7","removeElements","_len8","_key8","removePlugins","_len9","_key9","removeScales","_len0","_key0","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","_ref2","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","_ref3","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","_len1","scaleOptions","_key1","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","_updateVisibility","_stop","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","_ref4","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","circular","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","borderJoinStyle","inner","lineJoin","angleMargin","clipArc","selfJoin","outerAngleClip","innerAngleClip","clipWidth","clipSelf","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","mouseX","mouseY","inXRange","inYRange","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineCap","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","previous","sameItem","itemsEqual","plugin_legend","_element","_args","afterEvent","ci","useBorderRadius","borderCapStyle","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","_ref6","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","findOrAddLabel","addedLabels","addIfString","unshift","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","_ref7","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize"],"sourceRoot":""}