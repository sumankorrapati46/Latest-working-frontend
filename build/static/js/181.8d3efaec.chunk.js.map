{"version":3,"file":"static/js/181.8d3efaec.chunk.js","mappings":"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","sources":["components/UserProfileDropdown.jsx","components/ChangeUserIdModal.jsx","components/ChangePasswordModal.jsx","components/ThemeDropdown.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/Dashboard.css';\r\n \r\nconst UserProfileDropdown = ({ variant = 'default', onShowChangePassword, onShowChangeUserId }) => {\r\n  const { user, logout } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [showNotifications, setShowNotifications] = useState(false);\r\n  const [showSettings, setShowSettings] = useState(false);\r\n  const [showHelp, setShowHelp] = useState(false);\r\n  const dropdownRef = useRef(null);\r\n \r\n  // Handle change password navigation\r\n  const handleChangePassword = () => {\r\n    setIsOpen(false);\r\n    navigate('/change-password-dashboard');\r\n  };\r\n\r\n  // Handle change user ID navigation\r\n  const handleChangeUserId = () => {\r\n    setIsOpen(false);\r\n    navigate('/change-userid-dashboard');\r\n  };\r\n\r\n  // Notifications state\r\n  const [notifications] = useState([\r\n    { id: 1, type: 'info', message: 'New farmer registration pending approval', time: '2 minutes ago' },\r\n    { id: 2, type: 'warning', message: 'KYC verification overdue for 3 farmers', time: '1 hour ago' },\r\n    { id: 3, type: 'success', message: 'Employee assignment completed successfully', time: '3 hours ago' }\r\n  ]);\r\n  \r\n  // Notification state for change password\r\n  const [notification, setNotification] = useState(null);\r\n \r\n  // Close dropdown when clicking outside\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n \r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, []);\r\n \r\n  // Handle logout\r\n  const handleLogout = () => {\r\n    logout();\r\n    window.location.href = '/login';\r\n  };\r\n \r\n  \r\n \r\n  // Get user initials for avatar\r\n  const getInitials = (name) => {\r\n    if (!name) return 'U';\r\n    return name.split(' ').map(n => n[0]).join('').toUpperCase().slice(0, 2);\r\n  };\r\n \r\n  // Get display name based on user role and available data\r\n  const getDisplayName = () => {\r\n    if (user?.name) {\r\n      return user.name;\r\n    }\r\n   \r\n    if (user?.userName) {\r\n      const role = user.role || 'USER';\r\n      switch (role) {\r\n        case 'ADMIN':\r\n          return 'Admin User';\r\n        case 'SUPER_ADMIN':\r\n          return 'Super Admin User';\r\n        case 'EMPLOYEE':\r\n          return 'Employee User';\r\n        case 'FARMER':\r\n          return 'Farmer User';\r\n        default:\r\n          return user.userName;\r\n      }\r\n    }\r\n   \r\n    return 'User';\r\n  };\r\n \r\n  // Get display role\r\n  const getDisplayRole = () => {\r\n    if (user?.role) {\r\n      return user.role.replace('_', ' ');\r\n    }\r\n    return 'USER';\r\n  };\r\n \r\n  // Get avatar initials\r\n  const getAvatarInitials = () => {\r\n    const displayName = getDisplayName();\r\n    return getInitials(displayName);\r\n  };\r\n \r\n  // Get user status (online/offline)\r\n  const getUserStatus = () => {\r\n    return 'online'; // You can implement real status logic here\r\n  };\r\n \r\n  // Get user email\r\n  const getUserEmail = () => {\r\n    return user?.email || `${user?.userName || 'user'}@date.com`;\r\n  };\r\n \r\n    // Render compact variant (for mobile or minimal header)\r\n  if (variant === 'compact') {\r\n    return (\r\n      <div className=\"user-profile-dropdown-component compact\" ref={dropdownRef}>\r\n        <div\r\n          className=\"user-profile-dropdown-trigger compact\"\r\n          onClick={() => setIsOpen(!isOpen)}\r\n          title=\"User Menu\"\r\n        >\r\n          <div className=\"user-profile-dropdown-avatar-compact\">\r\n            {getAvatarInitials()}\r\n          </div>\r\n          <i className={`fas fa-chevron-down user-profile-dropdown-arrow ${isOpen ? 'rotated' : ''}`}></i>\r\n        </div>\r\n\r\n        {isOpen && (\r\n          <div className=\"user-profile-dropdown-menu compact\">\r\n            <div className=\"user-profile-dropdown-header\">\r\n              <div className=\"user-profile-dropdown-avatar-large\">\r\n                {getAvatarInitials()}\r\n              </div>\r\n              <div className=\"user-profile-dropdown-details\">\r\n                <span className=\"user-profile-dropdown-name-large\">{getDisplayName()}</span>\r\n                <span className=\"user-profile-dropdown-role\">{getDisplayRole()}</span>\r\n                <span className=\"user-profile-dropdown-email\">{getUserEmail()}</span>\r\n              </div>\r\n            </div>\r\n           \r\n            <div className=\"user-profile-dropdown-actions\">\r\n              <button\r\n                className=\"user-profile-dropdown-action-btn\"\r\n                onClick={handleChangePassword}\r\n              >\r\n                <i className=\"fas fa-key\"></i>\r\n                Change Password\r\n              </button>\r\n             \r\n              <button\r\n                className=\"user-profile-dropdown-action-btn\"\r\n                onClick={handleChangeUserId}\r\n              >\r\n                <i className=\"fas fa-user-edit\"></i>\r\n                Change User ID\r\n              </button>\r\n             \r\n              <button\r\n                className=\"user-profile-dropdown-action-btn logout\"\r\n                onClick={handleLogout}\r\n              >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                Logout\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n \r\n  // Render enhanced variant (for desktop with full user info)\r\n  if (variant === 'enhanced') {\r\n    return (\r\n      <div className=\"user-profile-dropdown enhanced\" ref={dropdownRef}>\r\n        <div className=\"enhanced-user-header\">\r\n          <div className=\"user-profile-section\">\r\n            <div className=\"user-profile-info\">\r\n              <div className=\"user-avatar-container\">\r\n                <div className=\"user-avatar-large\">\r\n                  {getAvatarInitials()}\r\n                </div>\r\n                <div className={`user-status-indicator ${getUserStatus()}`}></div>\r\n              </div>\r\n              <div className=\"user-details\">\r\n                <span className=\"user-name-display\">{getDisplayName()}</span>\r\n                <span className=\"user-role-display\">{getDisplayRole()}</span>\r\n                <span className=\"user-email-display\">{getUserEmail()}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"user-actions\">\r\n              <button\r\n                className=\"header-action-btn\"\r\n                title=\"Notifications\"\r\n                onClick={() => setShowNotifications(true)}\r\n              >\r\n                <i className=\"fas fa-bell\"></i>\r\n                <span className=\"notification-badge\">{notifications.length}</span>\r\n              </button>\r\n              <button\r\n                className=\"header-action-btn\"\r\n                title=\"Settings\"\r\n                onClick={() => setShowSettings(true)}\r\n              >\r\n                <i className=\"fas fa-cog\"></i>\r\n              </button>\r\n              <button\r\n                className=\"header-action-btn\"\r\n                title=\"Help\"\r\n                onClick={() => setShowHelp(true)}\r\n              >\r\n                <i className=\"fas fa-question-circle\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n         \r\n          <div\r\n            className=\"user-profile-trigger\"\r\n            onClick={() => setIsOpen(!isOpen)}\r\n            title=\"User Menu\"\r\n          >\r\n            <i className={`fas fa-chevron-down dropdown-arrow ${isOpen ? 'rotated' : ''}`}></i>\r\n          </div>\r\n        </div>\r\n \r\n        {isOpen && (\r\n          <div className=\"user-dropdown-menu enhanced\">\r\n            <div className=\"dropdown-header\">\r\n              <div className=\"user-avatar-large\">\r\n                {getAvatarInitials()}\r\n              </div>\r\n              <div className=\"user-details\">\r\n                <span className=\"user-name-large\">{getDisplayName()}</span>\r\n                <span className=\"user-role\">{getDisplayRole()}</span>\r\n                <span className=\"user-email\">{getUserEmail()}</span>\r\n              </div>\r\n            </div>\r\n           \r\n            <div className=\"dropdown-actions\">\r\n              <button\r\n                className=\"dropdown-action-btn\"\r\n                onClick={handleChangePassword}\r\n              >\r\n                <i className=\"fas fa-key\"></i>\r\n                Change Password\r\n              </button>\r\n             \r\n              <button\r\n                className=\"dropdown-action-btn\"\r\n                onClick={handleChangeUserId}\r\n              >\r\n                <i className=\"fas fa-user-edit\"></i>\r\n                Change User ID\r\n              </button>\r\n             \r\n              <button\r\n                className=\"dropdown-action-btn\"\r\n                onClick={() => setShowSettings(true)}\r\n              >\r\n                <i className=\"fas fa-cog\"></i>\r\n                Settings\r\n              </button>\r\n             \r\n              <button\r\n                className=\"dropdown-action-btn\"\r\n                onClick={() => setShowHelp(true)}\r\n              >\r\n                <i className=\"fas fa-question-circle\"></i>\r\n                Help & Support\r\n              </button>\r\n             \r\n              <button\r\n                className=\"dropdown-action-btn logout\"\r\n                onClick={handleLogout}\r\n              >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                Logout\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n \r\n \r\n  // Render default variant (standard dropdown)\r\n  return (\r\n    <div className=\"user-profile-dropdown\" ref={dropdownRef}>\r\n      <div\r\n        className=\"user-profile-trigger\"\r\n        onClick={() => setIsOpen(!isOpen)}\r\n      >\r\n        <div className=\"user-avatar\">\r\n          {getAvatarInitials()}\r\n        </div>\r\n        <div className=\"user-info\">\r\n          <span className=\"user-name\">{getDisplayName()}</span>\r\n          <span className=\"user-role\">{getDisplayRole()}</span>\r\n        </div>\r\n        <i className={`fas fa-chevron-down dropdown-arrow ${isOpen ? 'rotated' : ''}`}></i>\r\n      </div>\r\n \r\n      {isOpen && (\r\n        <div className=\"user-dropdown-menu\">\r\n          <div className=\"dropdown-header\">\r\n            <div className=\"user-avatar-large\">\r\n              {getAvatarInitials()}\r\n            </div>\r\n            <div className=\"user-details\">\r\n              <span className=\"user-name-large\">{getDisplayName()}</span>\r\n              <span className=\"user-role\">{getDisplayRole()}</span>\r\n              <span className=\"user-email\">{getUserEmail()}</span>\r\n            </div>\r\n          </div>\r\n         \r\n          <div className=\"dropdown-actions\">\r\n            <button\r\n              className=\"dropdown-action-btn\"\r\n              onClick={handleChangePassword}\r\n            >\r\n              <i className=\"fas fa-key\"></i>\r\n              Change Password\r\n            </button>\r\n           \r\n            <button\r\n              className=\"dropdown-action-btn\"\r\n              onClick={handleChangeUserId}\r\n            >\r\n              <i className=\"fas fa-user-edit\"></i>\r\n              Change User ID\r\n            </button>\r\n           \r\n            <button\r\n              className=\"dropdown-action-btn logout\"\r\n              onClick={handleLogout}\r\n            >\r\n              <i className=\"fas fa-sign-out-alt\"></i>\r\n              Logout\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n \r\n      {/* Notifications Modal */}\r\n      {showNotifications && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h3>Notifications</h3>\r\n              <button\r\n                className=\"modal-close\"\r\n                onClick={() => setShowNotifications(false)}\r\n              >\r\n                <i className=\"fas fa-times\"></i>\r\n              </button>\r\n            </div>\r\n           \r\n            <div className=\"notifications-list\">\r\n              {notifications.map(notification => (\r\n                <div key={notification.id} className={`notification-item ${notification.type}`}>\r\n                  <div className=\"notification-icon\">\r\n                    <i className={`fas fa-${notification.type === 'info' ? 'info-circle' : notification.type === 'warning' ? 'exclamation-triangle' : 'check-circle'}`}></i>\r\n                  </div>\r\n                  <div className=\"notification-content\">\r\n                    <p className=\"notification-message\">{notification.message}</p>\r\n                    <span className=\"notification-time\">{notification.time}</span>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n           \r\n            <div className=\"modal-footer\">\r\n              <button\r\n                className=\"btn-secondary\"\r\n                onClick={() => setShowNotifications(false)}\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n \r\n      {/* Settings Modal */}\r\n      {showSettings && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h3>Settings</h3>\r\n              <button\r\n                className=\"modal-close\"\r\n                onClick={() => setShowSettings(false)}\r\n              >\r\n                <i className=\"fas fa-times\"></i>\r\n              </button>\r\n            </div>\r\n           \r\n            <div className=\"settings-content\">\r\n              <p>Settings functionality coming soon!</p>\r\n            </div>\r\n           \r\n            <div className=\"modal-footer\">\r\n              <button\r\n                className=\"btn-secondary\"\r\n                onClick={() => setShowSettings(false)}\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n \r\n      {/* Help Modal */}\r\n      {showHelp && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h3>Help & Support</h3>\r\n              <button\r\n                className=\"modal-close\"\r\n                onClick={() => setShowHelp(false)}\r\n              >\r\n                <i className=\"fas fa-times\"></i>\r\n              </button>\r\n            </div>\r\n           \r\n            <div className=\"help-content\">\r\n              <p>Help and support functionality coming soon!</p>\r\n            </div>\r\n           \r\n            <div className=\"modal-footer\">\r\n              <button\r\n                className=\"btn-secondary\"\r\n                onClick={() => setShowHelp(false)}\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n \r\n      {/* Success Notification Toast */}\r\n      {notification && (\r\n        <div className={`notification-toast ${notification.type}`}>\r\n          <div className=\"notification-toast-content\">\r\n            <i className={`fas fa-${notification.type === 'success' ? 'check-circle' : 'info-circle'}`}></i>\r\n            <span>{notification.message}</span>\r\n          </div>\r\n          <button\r\n            className=\"notification-toast-close\"\r\n            onClick={() => setNotification(null)}\r\n          >\r\n            <i className=\"fas fa-times\"></i>\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n \r\nexport default UserProfileDropdown;\r\n ","import React, { useState } from 'react';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport '../styles/ChangeUserIdModal.css';\r\n\r\nconst ChangeUserIdModal = ({ isOpen, onClose, onSuccess, isInDashboard = false }) => {\r\n  const { user } = useAuth();\r\n  const [formData, setFormData] = useState({\r\n    currentUserId: '',\r\n    newUserId: '',\r\n    confirmUserId: ''\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n    // Clear error when user starts typing\r\n    if (error) setError('');\r\n  };\r\n\r\n  const validateForm = () => {\r\n    if (!formData.currentUserId || !formData.newUserId || !formData.confirmUserId) {\r\n      setError('All fields are required');\r\n      return false;\r\n    }\r\n    \r\n    if (formData.newUserId.length < 3) {\r\n      setError('New User ID must be at least 3 characters long');\r\n      return false;\r\n    }\r\n    \r\n    if (formData.newUserId !== formData.confirmUserId) {\r\n      setError('New User IDs do not match');\r\n      return false;\r\n    }\r\n    \r\n    if (formData.currentUserId === formData.newUserId) {\r\n      setError('New User ID must be different from current User ID');\r\n      return false;\r\n    }\r\n    \r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) return;\r\n    \r\n    setIsLoading(true);\r\n    setError('');\r\n    \r\n    try {\r\n      // Here you would typically make an API call to change user ID\r\n      // For now, we'll simulate a successful user ID change\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      setSuccess('User ID changed successfully!');\r\n      setFormData({\r\n        currentUserId: '',\r\n        newUserId: '',\r\n        confirmUserId: ''\r\n      });\r\n      \r\n      // Close modal after 2 seconds\r\n      setTimeout(() => {\r\n        onSuccess && onSuccess();\r\n        onClose();\r\n      }, 2000);\r\n      \r\n    } catch (error) {\r\n      setError('Failed to change User ID. Please try again.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    if (!isLoading) {\r\n      setFormData({\r\n        currentUserId: '',\r\n        newUserId: '',\r\n        confirmUserId: ''\r\n      });\r\n      setError('');\r\n      setSuccess('');\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  // If used in dashboard, render without overlay\r\n  if (isInDashboard) {\r\n    return (\r\n      <div className=\"change-userid-form-container\">\r\n        <div className=\"form-header\">\r\n          <div className=\"header-content\">\r\n            <div className=\"header-icon\">\r\n              <i className=\"fas fa-user-edit\"></i>\r\n            </div>\r\n            <div className=\"header-text\">\r\n              <h2>Change User ID</h2>\r\n              <p>Update your account user ID securely</p>\r\n            </div>\r\n          </div>\r\n          <button\r\n            className=\"form-close-btn\"\r\n            onClick={handleClose}\r\n            disabled={isLoading}\r\n          >\r\n            <i className=\"fas fa-times\"></i>\r\n          </button>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"change-userid-form\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"currentUserId\">\r\n              <i className=\"fas fa-user\"></i>\r\n              Current User ID\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"currentUserId\"\r\n              name=\"currentUserId\"\r\n              value={formData.currentUserId}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Enter your current user ID\"\r\n              disabled={isLoading}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"newUserId\">\r\n              <i className=\"fas fa-user-plus\"></i>\r\n              New User ID\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"newUserId\"\r\n              name=\"newUserId\"\r\n              value={formData.newUserId}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Enter your new user ID\"\r\n              disabled={isLoading}\r\n              required\r\n            />\r\n            <div className=\"userid-hint\">\r\n              User ID must be at least 3 characters long\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"confirmUserId\">\r\n              <i className=\"fas fa-check-circle\"></i>\r\n              Confirm New User ID\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"confirmUserId\"\r\n              name=\"confirmUserId\"\r\n              value={formData.confirmUserId}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Confirm your new user ID\"\r\n              disabled={isLoading}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {error && (\r\n            <div className=\"error-message\">\r\n              <i className=\"fas fa-exclamation-circle\"></i>\r\n              {error}\r\n            </div>\r\n          )}\r\n\r\n          {success && (\r\n            <div className=\"success-message\">\r\n              <i className=\"fas fa-check-circle\"></i>\r\n              {success}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"form-actions\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn-secondary\"\r\n              onClick={handleClose}\r\n              disabled={isLoading}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn-primary\"\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i>\r\n                  Changing User ID...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <i className=\"fas fa-save\"></i>\r\n                  Change User ID\r\n                </>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Original modal overlay rendering\r\n  return (\r\n    <div className=\"change-userid-modal-overlay\">\r\n      <div className=\"change-userid-modal\">\r\n        <div className=\"modal-header\">\r\n          <div className=\"header-content\">\r\n            <div className=\"header-icon\">\r\n              <i className=\"fas fa-user-edit\"></i>\r\n            </div>\r\n            <div className=\"header-text\">\r\n              <h2>Change User ID</h2>\r\n              <p>Update your account user ID securely</p>\r\n            </div>\r\n          </div>\r\n          <button\r\n            className=\"modal-close-btn\"\r\n            onClick={handleClose}\r\n            disabled={isLoading}\r\n          >\r\n            <i className=\"fas fa-times\"></i>\r\n          </button>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"change-userid-form\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"currentUserId\">\r\n              <i className=\"fas fa-user\"></i>\r\n              Current User ID\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"currentUserId\"\r\n              name=\"currentUserId\"\r\n              value={formData.currentUserId}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Enter your current user ID\"\r\n              disabled={isLoading}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"newUserId\">\r\n              <i className=\"fas fa-user-plus\"></i>\r\n              New User ID\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"newUserId\"\r\n              name=\"newUserId\"\r\n              value={formData.newUserId}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Enter your new user ID\"\r\n              disabled={isLoading}\r\n              required\r\n            />\r\n            <div className=\"userid-hint\">\r\n              User ID must be at least 3 characters long\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"confirmUserId\">\r\n              <i className=\"fas fa-check-circle\"></i>\r\n              Confirm New User ID\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"confirmUserId\"\r\n              name=\"confirmUserId\"\r\n              value={formData.confirmUserId}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Confirm your new user ID\"\r\n              disabled={isLoading}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {error && (\r\n            <div className=\"error-message\">\r\n              <i className=\"fas fa-exclamation-circle\"></i>\r\n              {error}\r\n            </div>\r\n          )}\r\n\r\n          {success && (\r\n            <div className=\"success-message\">\r\n              <i className=\"fas fa-check-circle\"></i>\r\n              {success}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"form-actions\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn-secondary\"\r\n              onClick={handleClose}\r\n              disabled={isLoading}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn-primary\"\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i>\r\n                  Changing User ID...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <i className=\"fas fa-save\"></i>\r\n                  Change User ID\r\n                </>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangeUserIdModal;\r\n","import React, { useState } from 'react';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport '../styles/ChangePasswordModal.css';\r\n\r\nconst ChangePasswordModal = ({ isOpen, onClose, onSuccess, isInDashboard = false }) => {\r\n  const { user } = useAuth();\r\n  const [formData, setFormData] = useState({\r\n    currentPassword: '',\r\n    newPassword: '',\r\n    confirmPassword: ''\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n    // Clear error when user starts typing\r\n    if (error) setError('');\r\n  };\r\n\r\n  const validateForm = () => {\r\n    if (!formData.currentPassword || !formData.newPassword || !formData.confirmPassword) {\r\n      setError('All fields are required');\r\n      return false;\r\n    }\r\n    \r\n    if (formData.newPassword.length < 6) {\r\n      setError('New password must be at least 6 characters long');\r\n      return false;\r\n    }\r\n    \r\n    if (formData.newPassword !== formData.confirmPassword) {\r\n      setError('New passwords do not match');\r\n      return false;\r\n    }\r\n    \r\n    if (formData.currentPassword === formData.newPassword) {\r\n      setError('New password must be different from current password');\r\n      return false;\r\n    }\r\n    \r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) return;\r\n    \r\n    setIsLoading(true);\r\n    setError('');\r\n    \r\n    try {\r\n      // Here you would typically make an API call to change password\r\n      // For now, we'll simulate a successful password change\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      setSuccess('Password changed successfully!');\r\n      setFormData({\r\n        currentPassword: '',\r\n        newPassword: '',\r\n        confirmPassword: ''\r\n      });\r\n      \r\n      // Close modal after 2 seconds\r\n      setTimeout(() => {\r\n        onSuccess && onSuccess();\r\n        onClose();\r\n      }, 2000);\r\n      \r\n    } catch (error) {\r\n      setError('Failed to change password. Please try again.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    if (!isLoading) {\r\n      setFormData({\r\n        currentPassword: '',\r\n        newPassword: '',\r\n        confirmPassword: ''\r\n      });\r\n      setError('');\r\n      setSuccess('');\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  // If used in dashboard, render without overlay\r\n  if (isInDashboard) {\r\n    return (\r\n      <div className=\"change-password-form-container\">\r\n        <div className=\"form-header\">\r\n          <div className=\"header-content\">\r\n            <div className=\"header-icon\">\r\n              <i className=\"fas fa-key\"></i>\r\n            </div>\r\n            <div className=\"header-text\">\r\n              <h2>Change Password</h2>\r\n              <p>Update your account password securely</p>\r\n            </div>\r\n          </div>\r\n          <button\r\n            className=\"form-close-btn\"\r\n            onClick={handleClose}\r\n            disabled={isLoading}\r\n          >\r\n            <i className=\"fas fa-times\"></i>\r\n          </button>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"change-password-form\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"currentPassword\">\r\n              <i className=\"fas fa-lock\"></i>\r\n              Current Password\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"currentPassword\"\r\n              name=\"currentPassword\"\r\n              value={formData.currentPassword}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Enter your current password\"\r\n              disabled={isLoading}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"newPassword\">\r\n              <i className=\"fas fa-key\"></i>\r\n              New Password\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"newPassword\"\r\n              name=\"newPassword\"\r\n              value={formData.newPassword}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Enter your new password\"\r\n              disabled={isLoading}\r\n              required\r\n            />\r\n            <div className=\"password-hint\">\r\n              Password must be at least 6 characters long\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"confirmPassword\">\r\n              <i className=\"fas fa-check-circle\"></i>\r\n              Confirm New Password\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"confirmPassword\"\r\n              name=\"confirmPassword\"\r\n              value={formData.confirmPassword}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Confirm your new password\"\r\n              disabled={isLoading}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {error && (\r\n            <div className=\"error-message\">\r\n              <i className=\"fas fa-exclamation-circle\"></i>\r\n              {error}\r\n            </div>\r\n          )}\r\n\r\n          {success && (\r\n            <div className=\"success-message\">\r\n              <i className=\"fas fa-check-circle\"></i>\r\n              {success}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"form-actions\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn-secondary\"\r\n              onClick={handleClose}\r\n              disabled={isLoading}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn-primary\"\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i>\r\n                  Changing Password...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <i className=\"fas fa-save\"></i>\r\n                  Change Password\r\n                </>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Original modal overlay rendering\r\n  return (\r\n    <div className=\"change-password-modal-overlay\">\r\n      <div className=\"change-password-modal\">\r\n        <div className=\"modal-header\">\r\n          <div className=\"header-content\">\r\n            <div className=\"header-icon\">\r\n              <i className=\"fas fa-key\"></i>\r\n            </div>\r\n            <div className=\"header-text\">\r\n              <h2>Change Password</h2>\r\n              <p>Update your account password securely</p>\r\n            </div>\r\n          </div>\r\n          <button\r\n            className=\"modal-close-btn\"\r\n            onClick={handleClose}\r\n            disabled={isLoading}\r\n          >\r\n            <i className=\"fas fa-times\"></i>\r\n          </button>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"change-password-form\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"currentPassword\">\r\n              <i className=\"fas fa-lock\"></i>\r\n              Current Password\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"currentPassword\"\r\n              name=\"currentPassword\"\r\n              value={formData.currentPassword}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Enter your current password\"\r\n              disabled={isLoading}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"newPassword\">\r\n              <i className=\"fas fa-key\"></i>\r\n              New Password\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"newPassword\"\r\n              name=\"newPassword\"\r\n              value={formData.newPassword}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Enter your new password\"\r\n              disabled={isLoading}\r\n              required\r\n            />\r\n            <div className=\"password-hint\">\r\n              Password must be at least 6 characters long\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"confirmPassword\">\r\n              <i className=\"fas fa-check-circle\"></i>\r\n              Confirm New Password\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"confirmPassword\"\r\n              name=\"confirmPassword\"\r\n              value={formData.confirmPassword}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Confirm your new password\"\r\n              disabled={isLoading}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {error && (\r\n            <div className=\"error-message\">\r\n              <i className=\"fas fa-exclamation-circle\"></i>\r\n              {error}\r\n            </div>\r\n          )}\r\n\r\n          {success && (\r\n            <div className=\"success-message\">\r\n              <i className=\"fas fa-check-circle\"></i>\r\n              {success}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"form-actions\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn-secondary\"\r\n              onClick={handleClose}\r\n              disabled={isLoading}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn-primary\"\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i>\r\n                  Changing Password...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <i className=\"fas fa-save\"></i>\r\n                  Change Password\r\n                </>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangePasswordModal;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { useTheme } from '../contexts/ThemeContext';\r\nimport '../styles/ThemeDropdown.css';\r\n\r\nconst ThemeDropdown = ({ className = '' }) => {\r\n  const { currentTheme, changeTheme, getThemeLabel, getAllThemes } = useTheme();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const dropdownRef = useRef(null);\r\n\r\n  // Close dropdown when clicking outside\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  const handleThemeSelect = (themeValue) => {\r\n    changeTheme(themeValue);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const toggleDropdown = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  return (\r\n    <div className={`theme-dropdown ${className}`} ref={dropdownRef}>\r\n      <button \r\n        className=\"theme-selector-btn\"\r\n        onClick={toggleDropdown}\r\n        aria-expanded={isOpen}\r\n        aria-haspopup=\"true\"\r\n      >\r\n        <span className=\"theme-label\">Theme: {getThemeLabel()}</span>\r\n        <span className={`dropdown-arrow ${isOpen ? 'open' : ''}`}>\r\n          <svg width=\"12\" height=\"8\" viewBox=\"0 0 12 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M1 1.5L6 6.5L11 1.5\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n          </svg>\r\n        </span>\r\n      </button>\r\n\r\n      {isOpen && (\r\n        <div className=\"theme-dropdown-menu\">\r\n          <div className=\"dropdown-header\">\r\n            <span className=\"dropdown-title\">Choose Theme</span>\r\n          </div>\r\n          \r\n          {getAllThemes().map((theme) => (\r\n            <button\r\n              key={theme.value}\r\n              className={`theme-option ${currentTheme === theme.value ? 'selected' : ''}`}\r\n              onClick={() => handleThemeSelect(theme.value)}\r\n            >\r\n              <div className=\"theme-preview\">\r\n                <div className={`theme-preview-colors ${theme.value}`}>\r\n                  <div className=\"color-dot primary\"></div>\r\n                  <div className=\"color-dot secondary\"></div>\r\n                  <div className=\"color-dot accent\"></div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"theme-info\">\r\n                <span className=\"theme-name\">{theme.label}</span>\r\n                <span className=\"theme-description\">\r\n                  {theme.value === 'modern-clean' && 'Clean and modern design with green accents'}\r\n                  {theme.value === 'traditional-corporate' && 'Professional corporate style with blue tones'}\r\n                  {theme.value === 'modern-minimalist' && 'Minimal design with subtle colors'}\r\n                </span>\r\n              </div>\r\n              \r\n              {currentTheme === theme.value && (\r\n                <div className=\"selected-indicator\">\r\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M13.5 4.5L6 12L2.5 8.5\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                  </svg>\r\n                </div>\r\n              )}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThemeDropdown;"],"names":["_ref","variant","onShowChangePassword","onShowChangeUserId","user","logout","useAuth","navigate","useNavigate","isOpen","setIsOpen","useState","showNotifications","setShowNotifications","showSettings","setShowSettings","showHelp","setShowHelp","dropdownRef","useRef","handleChangePassword","handleChangeUserId","notifications","id","type","message","time","notification","setNotification","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleLogout","window","location","href","getDisplayName","name","userName","role","getDisplayRole","replace","getAvatarInitials","displayName","split","map","n","join","toUpperCase","slice","getUserEmail","email","_jsxs","className","ref","children","onClick","title","_jsx","length","onClose","onSuccess","isInDashboard","formData","setFormData","currentUserId","newUserId","confirmUserId","isLoading","setIsLoading","error","setError","success","setSuccess","handleInputChange","e","value","prev","handleSubmit","async","preventDefault","Promise","resolve","setTimeout","handleClose","disabled","onSubmit","htmlFor","onChange","placeholder","required","_Fragment","currentPassword","newPassword","confirmPassword","currentTheme","changeTheme","getThemeLabel","getAllThemes","useTheme","toggleDropdown","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","theme","handleThemeSelect","themeValue","label"],"sourceRoot":""}