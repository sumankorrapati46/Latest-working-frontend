{"version":3,"file":"static/js/506.801a25d7.chunk.js","mappings":"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","sources":["pages/ChangePasswordPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport '../styles/ChangePasswordPage.css';\r\n\r\nconst ChangePasswordPage = () => {\r\n  const navigate = useNavigate();\r\n  const { user } = useAuth();\r\n  const [formData, setFormData] = useState({\r\n    currentPassword: '',\r\n    newPassword: '',\r\n    confirmPassword: ''\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n    setSuccess('');\r\n\r\n    // Validation\r\n    if (formData.newPassword !== formData.confirmPassword) {\r\n      setError('New passwords do not match');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    if (formData.newPassword.length < 6) {\r\n      setError('New password must be at least 6 characters long');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    // Check password requirements\r\n    const hasUpperCase = /[A-Z]/.test(formData.newPassword);\r\n    const hasNumber = /\\d/.test(formData.newPassword);\r\n    const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(formData.newPassword);\r\n    \r\n    if (!hasUpperCase || !hasNumber || !hasSpecialChar) {\r\n      setError('Password must include an uppercase letter, a number, and a special character.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      setSuccess('Password changed successfully!');\r\n      setTimeout(() => {\r\n        navigate(-1); // Go back to previous page\r\n      }, 2000);\r\n    } catch (err) {\r\n      setError('Failed to change password. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    navigate(-1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"change-password-page\">\r\n      <div className=\"change-password-container\">\r\n        <div className=\"change-password-header\">\r\n          <button className=\"back-button\" onClick={handleBack}>\r\n            <i className=\"fas fa-arrow-left\"></i> Back\r\n          </button>\r\n          <h1>Change Password</h1>\r\n          <p>Update your account password</p>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"change-password-form\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"currentPassword\">Current Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"currentPassword\"\r\n              name=\"currentPassword\"\r\n              value={formData.currentPassword}\r\n              onChange={handleChange}\r\n              required\r\n              placeholder=\"Enter your current password\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"newPassword\">New Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"newPassword\"\r\n              name=\"newPassword\"\r\n              value={formData.newPassword}\r\n              onChange={handleChange}\r\n              required\r\n              placeholder=\"Enter your new password\"\r\n            />\r\n            <small style={{ color: '#666', fontSize: '0.85rem', marginTop: '5px' }}>\r\n              Must contain at least 6 characters, including uppercase, number, and special character\r\n            </small>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"confirmPassword\">Confirm New Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"confirmPassword\"\r\n              name=\"confirmPassword\"\r\n              value={formData.confirmPassword}\r\n              onChange={handleChange}\r\n              required\r\n              placeholder=\"Confirm your new password\"\r\n            />\r\n          </div>\r\n\r\n          {error && <div className=\"error-message\">{error}</div>}\r\n          {success && <div className=\"success-message\">{success}</div>}\r\n\r\n          <div className=\"form-actions\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn-secondary\"\r\n              onClick={handleBack}\r\n              disabled={loading}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn-primary\"\r\n              disabled={loading}\r\n            >\r\n              {loading ? 'Changing Password...' : 'Change Password'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangePasswordPage;\r\n"],"names":["ChangePasswordPage","navigate","useNavigate","user","useAuth","formData","setFormData","useState","currentPassword","newPassword","confirmPassword","loading","setLoading","error","setError","success","setSuccess","handleChange","e","name","value","target","prev","handleBack","_jsx","className","children","_jsxs","onClick","onSubmit","async","preventDefault","length","hasUpperCase","test","hasNumber","hasSpecialChar","Promise","resolve","setTimeout","err","htmlFor","type","id","onChange","required","placeholder","style","color","fontSize","marginTop","disabled"],"sourceRoot":""}