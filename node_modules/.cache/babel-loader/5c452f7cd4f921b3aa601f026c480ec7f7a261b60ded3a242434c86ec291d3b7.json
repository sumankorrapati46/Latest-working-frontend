{"ast":null,"code":"import React,{useMemo,useCallback}from'react';import ActionDropdown from'./ActionDropdown';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DataTable=/*#__PURE__*/React.memo(_ref=>{let{data,columns,onEdit,onDelete,onView,onKycUpdate,showDelete=false,customActions=[],loading=false,emptyMessage=\"No data available\"}=_ref;const getStatusClass=useCallback(status=>{switch(status===null||status===void 0?void 0:status.toLowerCase()){case'approved':return'status-approved';case'pending':return'status-pending';case'refer_back':return'status-refer-back';case'rejected':return'status-rejected';case'assigned':return'status-assigned';case'unassigned':return'status-unassigned';case'active':return'status-approved';case'inactive':return'status-rejected';default:return'status-default';}},[]);// Memoized safe render function with enhanced field mapping\nconst safeRender=useCallback((value,columnKey,row)=>{try{// If value is an object, try to extract meaningful data\nif(value&&typeof value==='object'){// Handle common object types\nif(value.name)return value.name;if(value.title)return value.title;if(value.label)return value.label;if(value.id)return value.id;// For arrays, show count\nif(Array.isArray(value)){return`${value.length} item${value.length!==1?'s':''}`;}// For other objects, show a summary\nconst keys=Object.keys(value);if(keys.length<=3){return keys.map(key=>value[key]).join(', ');}return'Object';}// If value is null or undefined, try alternative field names\nif(value===null||value===undefined){// Try common alternative field names for the same data\nconst alternativeFields={'name':['fullName','userName','firstName','lastName'],'email':['emailAddress','userEmail'],'phoneNumber':['phone','mobile','contactNumber','mobileNumber'],'role':['userRole','type','userType'],'status':['registrationStatus','approvalStatus','kycStatus']};if(alternativeFields[columnKey]&&row){for(const altField of alternativeFields[columnKey]){if(row[altField]!==undefined&&row[altField]!==null){return String(row[altField]);}}}return'N/A';}// If value is a string, number, or boolean, return it as string\nreturn String(value);}catch(error){console.error(`DataTable: Error rendering value for column ${columnKey}:`,error);return'Error';}},[]);// Memoized table data with debugging\nconst tableData=useMemo(()=>{if(!data||!Array.isArray(data))return[];// Debug: Log the first few records to understand the data structure\nif(data.length>0){console.log('🔍 DataTable: Sample data structure:',{firstRecord:data[0],totalRecords:data.length,availableFields:Object.keys(data[0]||{})});}return data;},[data]);// Memoized columns\nconst tableColumns=useMemo(()=>{if(!columns||!Array.isArray(columns))return[];return columns;},[columns]);if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"data-table-loading\",children:/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\",children:\"Loading...\"})});}if(!tableData.length){return/*#__PURE__*/_jsxs(\"div\",{className:\"data-table-empty\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"empty-icon\",children:\"\\uD83D\\uDCCB\"}),/*#__PURE__*/_jsx(\"p\",{children:emptyMessage})]});}return/*#__PURE__*/_jsx(\"div\",{className:\"data-table-container\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"data-table\",children:[/*#__PURE__*/_jsxs(\"colgroup\",{children:[tableColumns.map(column=>/*#__PURE__*/_jsx(\"col\",{className:column.className||''},column.key)),(onEdit||onDelete||onView||customActions.length>0)&&/*#__PURE__*/_jsx(\"col\",{className:\"col-actions\"})]}),/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[tableColumns.map(column=>/*#__PURE__*/_jsx(\"th\",{className:`data-table-header ${column.className||''}`,children:column.label},column.key)),(onEdit||onDelete||onView||customActions.length>0)&&/*#__PURE__*/_jsx(\"th\",{className:\"data-table-header actions-header col-actions\",children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:tableData.map((row,index)=>/*#__PURE__*/_jsxs(\"tr\",{className:\"data-table-row\",children:[tableColumns.map(column=>{const value=row[column.key];const cellContent=column.render?column.render(value,row):safeRender(value,column.key,row);const normalizedStatus=typeof value==='string'?value.toLowerCase():'';return/*#__PURE__*/_jsx(\"td\",{className:`data-table-cell ${column.className||''}`,children:column.type==='status'?/*#__PURE__*/_jsx(\"span\",{className:`status-badge ${getStatusClass(value)} ${normalizedStatus}`,children:cellContent}):cellContent},column.key);}),(onEdit||onDelete||onView||customActions.length>0)&&/*#__PURE__*/_jsx(\"td\",{className:\"data-table-cell actions-cell col-actions\",children:/*#__PURE__*/_jsx(ActionDropdown,{item:row,onEdit:onEdit,onDelete:onDelete,onView:onView,onKycUpdate:onKycUpdate,showDelete:showDelete,customActions:customActions||[]})})]},row.id||index))})]})});});DataTable.displayName='DataTable';export default DataTable;","map":{"version":3,"names":["React","useMemo","useCallback","ActionDropdown","jsx","_jsx","jsxs","_jsxs","DataTable","memo","_ref","data","columns","onEdit","onDelete","onView","onKycUpdate","showDelete","customActions","loading","emptyMessage","getStatusClass","status","toLowerCase","safeRender","value","columnKey","row","name","title","label","id","Array","isArray","length","keys","Object","map","key","join","undefined","alternativeFields","altField","String","error","console","tableData","log","firstRecord","totalRecords","availableFields","tableColumns","className","children","column","index","cellContent","render","normalizedStatus","type","item","displayName"],"sources":["D:/Fronted-dev/Latest-working-frontend/src/components/DataTable.jsx"],"sourcesContent":["import React, { useMemo, useCallback } from 'react';\nimport ActionDropdown from './ActionDropdown';\n\nconst DataTable = React.memo(({ \n  data, \n  columns, \n  onEdit, \n  onDelete, \n  onView, \n  onKycUpdate,\n  showDelete = false, \n  customActions = [],\n  loading = false,\n  emptyMessage = \"No data available\"\n}) => {\n  const getStatusClass = useCallback((status) => {\n    switch (status?.toLowerCase()) {\n      case 'approved':\n        return 'status-approved';\n      case 'pending':\n        return 'status-pending';\n      case 'refer_back':\n        return 'status-refer-back';\n      case 'rejected':\n        return 'status-rejected';\n      case 'assigned':\n        return 'status-assigned';\n      case 'unassigned':\n        return 'status-unassigned';\n      case 'active':\n        return 'status-approved';\n      case 'inactive':\n        return 'status-rejected';\n      default:\n        return 'status-default';\n    }\n  }, []);\n\n  // Memoized safe render function with enhanced field mapping\n  const safeRender = useCallback((value, columnKey, row) => {\n    try {\n      // If value is an object, try to extract meaningful data\n      if (value && typeof value === 'object') {\n        // Handle common object types\n        if (value.name) return value.name;\n        if (value.title) return value.title;\n        if (value.label) return value.label;\n        if (value.id) return value.id;\n        \n        // For arrays, show count\n        if (Array.isArray(value)) {\n          return `${value.length} item${value.length !== 1 ? 's' : ''}`;\n        }\n        \n        // For other objects, show a summary\n        const keys = Object.keys(value);\n        if (keys.length <= 3) {\n          return keys.map(key => value[key]).join(', ');\n        }\n        \n        return 'Object';\n      }\n      \n      // If value is null or undefined, try alternative field names\n      if (value === null || value === undefined) {\n        // Try common alternative field names for the same data\n        const alternativeFields = {\n          'name': ['fullName', 'userName', 'firstName', 'lastName'],\n          'email': ['emailAddress', 'userEmail'],\n          'phoneNumber': ['phone', 'mobile', 'contactNumber', 'mobileNumber'],\n          'role': ['userRole', 'type', 'userType'],\n          'status': ['registrationStatus', 'approvalStatus', 'kycStatus']\n        };\n        \n        if (alternativeFields[columnKey] && row) {\n          for (const altField of alternativeFields[columnKey]) {\n            if (row[altField] !== undefined && row[altField] !== null) {\n              return String(row[altField]);\n            }\n          }\n        }\n        \n        return 'N/A';\n      }\n      \n      // If value is a string, number, or boolean, return it as string\n      return String(value);\n    } catch (error) {\n      console.error(`DataTable: Error rendering value for column ${columnKey}:`, error);\n      return 'Error';\n    }\n  }, []);\n\n  // Memoized table data with debugging\n  const tableData = useMemo(() => {\n    if (!data || !Array.isArray(data)) return [];\n    \n    // Debug: Log the first few records to understand the data structure\n    if (data.length > 0) {\n      console.log('🔍 DataTable: Sample data structure:', {\n        firstRecord: data[0],\n        totalRecords: data.length,\n        availableFields: Object.keys(data[0] || {})\n      });\n    }\n    \n    return data;\n  }, [data]);\n\n  // Memoized columns\n  const tableColumns = useMemo(() => {\n    if (!columns || !Array.isArray(columns)) return [];\n    return columns;\n  }, [columns]);\n\n  if (loading) {\n    return (\n      <div className=\"data-table-loading\">\n        <div className=\"loading-spinner\">Loading...</div>\n      </div>\n    );\n  }\n\n  if (!tableData.length) {\n    return (\n      <div className=\"data-table-empty\">\n        <div className=\"empty-icon\">📋</div>\n        <p>{emptyMessage}</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"data-table-container\">\n      <table className=\"data-table\">\n        <colgroup>\n          {tableColumns.map((column) => (\n            <col key={column.key} className={column.className || ''} />\n          ))}\n          {(onEdit || onDelete || onView || customActions.length > 0) && (\n            <col className=\"col-actions\" />\n          )}\n        </colgroup>\n        <thead>\n          <tr>\n            {tableColumns.map((column) => (\n              <th key={column.key} className={`data-table-header ${column.className || ''}`}>\n                {column.label}\n              </th>\n            ))}\n            {(onEdit || onDelete || onView || customActions.length > 0) && (\n              <th className=\"data-table-header actions-header col-actions\">Actions</th>\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {tableData.map((row, index) => (\n            <tr key={row.id || index} className=\"data-table-row\">\n              {tableColumns.map((column) => {\n                const value = row[column.key];\n                const cellContent = column.render \n                  ? column.render(value, row) \n                  : safeRender(value, column.key, row);\n                \n                const normalizedStatus = typeof value === 'string' ? value.toLowerCase() : '';\n                return (\n                  <td key={column.key} className={`data-table-cell ${column.className || ''}`}>\n                    {column.type === 'status' ? (\n                      <span className={`status-badge ${getStatusClass(value)} ${normalizedStatus}`}>\n                        {cellContent}\n                      </span>\n                    ) : (\n                      cellContent\n                    )}\n                  </td>\n                );\n              })}\n              {(onEdit || onDelete || onView || customActions.length > 0) && (\n                <td className=\"data-table-cell actions-cell col-actions\">\n                  <ActionDropdown\n                    item={row}\n                    onEdit={onEdit}\n                    onDelete={onDelete}\n                    onView={onView}\n                    onKycUpdate={onKycUpdate}\n                    showDelete={showDelete}\n                    customActions={customActions || []}\n                  />\n                </td>\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n});\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}