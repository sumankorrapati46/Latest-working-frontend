{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fronted-dev\\\\Latest-working-frontend\\\\src\\\\components\\\\ActionDropdown.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActionDropdown = ({\n  item,\n  onEdit,\n  onDelete,\n  onView,\n  onKycUpdate,\n  showDelete = false,\n  customActions = []\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const dropdownRef = useRef(null);\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  // Build actions array based on available props\n  const actions = useMemo(() => {\n    const actionList = [];\n\n    // Add view action if available\n    if (onView) {\n      actionList.push({\n        label: 'View',\n        icon: '👁️',\n        className: 'action-view',\n        onClick: () => onView(item)\n      });\n    }\n\n    // Add edit action if available\n    if (onEdit) {\n      actionList.push({\n        label: 'Edit',\n        icon: '✏️',\n        className: 'action-edit',\n        onClick: () => onEdit(item)\n      });\n    }\n\n    // Add delete action if available and showDelete is true\n    if (onDelete && showDelete) {\n      actionList.push({\n        label: 'Delete',\n        icon: '🗑️',\n        className: 'action-delete',\n        onClick: () => onDelete(item)\n      });\n    }\n\n    // Add KYC Update action last, to match requested order\n    if (onKycUpdate) {\n      actionList.push({\n        label: 'KYC Update',\n        icon: '📄',\n        className: 'action-kyc-update',\n        onClick: () => onKycUpdate(item)\n      });\n    }\n\n    // Add custom actions (this is the primary way actions are currently used)\n    if (customActions && Array.isArray(customActions)) {\n      customActions.forEach(action => {\n        actionList.push({\n          ...action,\n          onClick: () => action.onClick(item)\n        });\n      });\n    }\n    return actionList;\n  }, [onEdit, onDelete, onView, showDelete, customActions, item]);\n  const handleActionClick = action => {\n    if (action.onClick) {\n      action.onClick();\n    }\n    setIsOpen(false);\n  };\n\n  // Don't render if no actions available\n  if (actions.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"action-dropdown-component\",\n    ref: dropdownRef,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"action-dropdown-toggle\",\n      onClick: () => setIsOpen(!isOpen),\n      \"aria-label\": \"Actions\",\n      children: \"\\u22EF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-dropdown-menu\",\n      children: actions.map((action, index) => {\n        // Check if action should be shown based on condition\n        if (action.showCondition && !action.showCondition(item)) {\n          return null;\n        }\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `action-dropdown-item ${action.className || ''}`,\n          onClick: () => handleActionClick(action),\n          children: [action.icon && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"action-dropdown-icon\",\n            children: action.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 33\n          }, this), action.label]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(ActionDropdown, \"uVbXIsGtAqNs41iVrUN7XVeMkfQ=\");\n_c = ActionDropdown;\nexport default ActionDropdown;\nvar _c;\n$RefreshReg$(_c, \"ActionDropdown\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useMemo","jsxDEV","_jsxDEV","ActionDropdown","item","onEdit","onDelete","onView","onKycUpdate","showDelete","customActions","_s","isOpen","setIsOpen","dropdownRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","actions","actionList","push","label","icon","className","onClick","Array","isArray","forEach","action","handleActionClick","length","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","showCondition","_c","$RefreshReg$"],"sources":["D:/Fronted-dev/Latest-working-frontend/src/components/ActionDropdown.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect, useMemo } from 'react';\n\nconst ActionDropdown = ({ \n  item, \n  onEdit, \n  onDelete, \n  onView, \n  onKycUpdate,\n  showDelete = false, \n  customActions = [] \n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const dropdownRef = useRef(null);\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  // Build actions array based on available props\n  const actions = useMemo(() => {\n    const actionList = [];\n\n    // Add view action if available\n    if (onView) {\n      actionList.push({\n        label: 'View',\n        icon: '👁️',\n        className: 'action-view',\n        onClick: () => onView(item)\n      });\n    }\n\n    // Add edit action if available\n    if (onEdit) {\n      actionList.push({\n        label: 'Edit',\n        icon: '✏️',\n        className: 'action-edit',\n        onClick: () => onEdit(item)\n      });\n    }\n\n    // Add delete action if available and showDelete is true\n    if (onDelete && showDelete) {\n      actionList.push({\n        label: 'Delete',\n        icon: '🗑️',\n        className: 'action-delete',\n        onClick: () => onDelete(item)\n      });\n    }\n\n    // Add KYC Update action last, to match requested order\n    if (onKycUpdate) {\n      actionList.push({\n        label: 'KYC Update',\n        icon: '📄',\n        className: 'action-kyc-update',\n        onClick: () => onKycUpdate(item)\n      });\n    }\n\n    // Add custom actions (this is the primary way actions are currently used)\n    if (customActions && Array.isArray(customActions)) {\n      customActions.forEach(action => {\n        actionList.push({\n          ...action,\n          onClick: () => action.onClick(item)\n        });\n      });\n    }\n\n    return actionList;\n  }, [onEdit, onDelete, onView, showDelete, customActions, item]);\n\n  const handleActionClick = (action) => {\n    if (action.onClick) {\n      action.onClick();\n    }\n    setIsOpen(false);\n  };\n\n  // Don't render if no actions available\n  if (actions.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"action-dropdown-component\" ref={dropdownRef}>\n      <button\n        className=\"action-dropdown-toggle\"\n        onClick={() => setIsOpen(!isOpen)}\n        aria-label=\"Actions\"\n      >\n        ⋯\n      </button>\n      \n      {isOpen && (\n        <div className=\"action-dropdown-menu\">\n          {actions.map((action, index) => {\n            // Check if action should be shown based on condition\n            if (action.showCondition && !action.showCondition(item)) {\n              return null;\n            }\n            \n            return (\n              <button\n                key={index}\n                className={`action-dropdown-item ${action.className || ''}`}\n                onClick={() => handleActionClick(action)}\n              >\n                {action.icon && <span className=\"action-dropdown-icon\">{action.icon}</span>}\n                {action.label}\n              </button>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ActionDropdown; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}