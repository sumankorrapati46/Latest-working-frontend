{"ast":null,"code":"import React from'react';import EmployeeRegistrationForm from'../components/EmployeeRegistrationForm';import{authAPI}from'../api/apiService';import{jsx as _jsx}from\"react/jsx-runtime\";const EmployeeRegistration=()=>{const handleSubmit=async data=>{try{console.log('Employee registration submitted:',data);// Extract basic registration data from the detailed form (flat structure)\nconst basicRegistrationData={name:`${data.firstName||''} ${data.middleName||''} ${data.lastName||''}`.trim(),gender:data.gender||'',dateOfBirth:data.dob||'',email:data.email||'',phoneNumber:data.contactNumber||'',role:'EMPLOYEE',password:'TempPassword123!'// Generate a temporary password\n};// Validate that we have the required basic fields\nif(!basicRegistrationData.name||!basicRegistrationData.email||!basicRegistrationData.phoneNumber){alert('Please fill in all required basic information (name, email, phone number)');return;}console.log('Submitting basic registration data:',basicRegistrationData);// Submit basic registration to backend using authAPI.register\nconst response=await authAPI.register(basicRegistrationData);console.log('Employee registration successful:',response);alert('Employee registration completed successfully! Please wait for admin approval. You will receive login credentials once approved.');// Note: The detailed profile data can be saved later when the user is approved\n// and logs in for the first time, or through a separate API endpoint\n}catch(error){console.error('Error submitting employee registration:',error);alert('Error submitting form. Please try again.');}};return/*#__PURE__*/_jsx(EmployeeRegistrationForm,{isInDashboard:false,onSubmit:handleSubmit});};export default EmployeeRegistration;","map":{"version":3,"names":["React","EmployeeRegistrationForm","authAPI","jsx","_jsx","EmployeeRegistration","handleSubmit","data","console","log","basicRegistrationData","name","firstName","middleName","lastName","trim","gender","dateOfBirth","dob","email","phoneNumber","contactNumber","role","password","alert","response","register","error","isInDashboard","onSubmit"],"sources":["D:/Fronted-dev/Latest-working-frontend/src/pages/EmployeeRegistration.jsx"],"sourcesContent":["import React from 'react';\r\nimport EmployeeRegistrationForm from '../components/EmployeeRegistrationForm';\r\nimport { authAPI } from '../api/apiService';\r\n\r\nconst EmployeeRegistration = () => {\r\n  const handleSubmit = async (data) => {\r\n    try {\r\n      console.log('Employee registration submitted:', data);\r\n      \r\n      // Extract basic registration data from the detailed form (flat structure)\r\n      const basicRegistrationData = {\r\n        name: `${data.firstName || ''} ${data.middleName || ''} ${data.lastName || ''}`.trim(),\r\n        gender: data.gender || '',\r\n        dateOfBirth: data.dob || '',\r\n        email: data.email || '',\r\n        phoneNumber: data.contactNumber || '',\r\n        role: 'EMPLOYEE',\r\n        password: 'TempPassword123!' // Generate a temporary password\r\n      };\r\n      \r\n      // Validate that we have the required basic fields\r\n      if (!basicRegistrationData.name || !basicRegistrationData.email || !basicRegistrationData.phoneNumber) {\r\n        alert('Please fill in all required basic information (name, email, phone number)');\r\n        return;\r\n      }\r\n      \r\n      console.log('Submitting basic registration data:', basicRegistrationData);\r\n      \r\n      // Submit basic registration to backend using authAPI.register\r\n      const response = await authAPI.register(basicRegistrationData);\r\n      console.log('Employee registration successful:', response);\r\n      \r\n      alert('Employee registration completed successfully! Please wait for admin approval. You will receive login credentials once approved.');\r\n      \r\n      // Note: The detailed profile data can be saved later when the user is approved\r\n      // and logs in for the first time, or through a separate API endpoint\r\n      \r\n    } catch (error) {\r\n      console.error('Error submitting employee registration:', error);\r\n      alert('Error submitting form. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <EmployeeRegistrationForm\r\n      isInDashboard={false}\r\n      onSubmit={handleSubmit}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmployeeRegistration; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,wBAAwB,KAAM,wCAAwC,CAC7E,OAASC,OAAO,KAAQ,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE5C,KAAM,CAAAC,oBAAoB,CAAGA,CAAA,GAAM,CACjC,KAAM,CAAAC,YAAY,CAAG,KAAO,CAAAC,IAAI,EAAK,CACnC,GAAI,CACFC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAEF,IAAI,CAAC,CAErD;AACA,KAAM,CAAAG,qBAAqB,CAAG,CAC5BC,IAAI,CAAE,GAAGJ,IAAI,CAACK,SAAS,EAAI,EAAE,IAAIL,IAAI,CAACM,UAAU,EAAI,EAAE,IAAIN,IAAI,CAACO,QAAQ,EAAI,EAAE,EAAE,CAACC,IAAI,CAAC,CAAC,CACtFC,MAAM,CAAET,IAAI,CAACS,MAAM,EAAI,EAAE,CACzBC,WAAW,CAAEV,IAAI,CAACW,GAAG,EAAI,EAAE,CAC3BC,KAAK,CAAEZ,IAAI,CAACY,KAAK,EAAI,EAAE,CACvBC,WAAW,CAAEb,IAAI,CAACc,aAAa,EAAI,EAAE,CACrCC,IAAI,CAAE,UAAU,CAChBC,QAAQ,CAAE,kBAAmB;AAC/B,CAAC,CAED;AACA,GAAI,CAACb,qBAAqB,CAACC,IAAI,EAAI,CAACD,qBAAqB,CAACS,KAAK,EAAI,CAACT,qBAAqB,CAACU,WAAW,CAAE,CACrGI,KAAK,CAAC,2EAA2E,CAAC,CAClF,OACF,CAEAhB,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAEC,qBAAqB,CAAC,CAEzE;AACA,KAAM,CAAAe,QAAQ,CAAG,KAAM,CAAAvB,OAAO,CAACwB,QAAQ,CAAChB,qBAAqB,CAAC,CAC9DF,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAEgB,QAAQ,CAAC,CAE1DD,KAAK,CAAC,iIAAiI,CAAC,CAExI;AACA;AAEF,CAAE,MAAOG,KAAK,CAAE,CACdnB,OAAO,CAACmB,KAAK,CAAC,yCAAyC,CAAEA,KAAK,CAAC,CAC/DH,KAAK,CAAC,0CAA0C,CAAC,CACnD,CACF,CAAC,CAED,mBACEpB,IAAA,CAACH,wBAAwB,EACvB2B,aAAa,CAAE,KAAM,CACrBC,QAAQ,CAAEvB,YAAa,CACxB,CAAC,CAEN,CAAC,CAED,cAAe,CAAAD,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}