{"ast":null,"code":"var _jsxFileName = \"C:\\\\karthik cc\\\\Working-frontend\\\\src\\\\components\\\\DataTable.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataTable = ({\n  data,\n  columns,\n  onEdit,\n  onDelete,\n  onView,\n  showDelete = false,\n  customActions = []\n}) => {\n  const getStatusClass = status => {\n    switch (status === null || status === void 0 ? void 0 : status.toLowerCase()) {\n      case 'approved':\n        return 'status-approved';\n      case 'pending':\n        return 'status-pending';\n      case 'refer_back':\n        return 'status-refer-back';\n      case 'rejected':\n        return 'status-rejected';\n      case 'assigned':\n        return 'status-assigned';\n      case 'unassigned':\n        return 'status-unassigned';\n      default:\n        return 'status-default';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data-table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"data-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [columns.map((column, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: column.label\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [columns.map((column, colIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: (() => {\n              const value = row[column.key];\n\n              // Handle status fields with special styling\n              if (column.key === 'kycStatus' || column.key === 'assignmentStatus' || column.key === 'status' || column.key === 'accessStatus') {\n                return /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: getStatusClass(value),\n                  children: value || 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 26\n                }, this);\n              }\n\n              // Handle date fields\n              if (column.key === 'registrationDate' || column.key === 'assignedDate') {\n                return value ? new Date(value).toLocaleDateString() : 'N/A';\n              }\n\n              // Handle name fields (combine firstName and lastName if needed)\n              if (column.key === 'name') {\n                if (row.firstName && row.lastName) {\n                  return `${row.firstName} ${row.lastName}`;\n                } else if (row.name) {\n                  return row.name;\n                } else {\n                  return 'N/A';\n                }\n              }\n\n              // Handle phone fields\n              if (column.key === 'phone' || column.key === 'phoneNumber') {\n                return row.phoneNumber || row.phone || row.contactNumber || 'N/A';\n              }\n\n              // Handle email fields\n              if (column.key === 'email') {\n                return row.email || 'N/A';\n              }\n\n              // Handle role fields\n              if (column.key === 'role') {\n                return row.role || 'N/A';\n              }\n\n              // For all other fields, return the value or 'N/A'\n              return value || 'N/A';\n            })()\n          }, colIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 34\n          }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"actions-cell\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"action-buttons\",\n              children: [onView && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"action-btn-small info\",\n                onClick: () => onView(row),\n                children: \"\\uD83D\\uDC41\\uFE0F View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 21\n              }, this), onEdit && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"action-btn-small primary\",\n                onClick: () => onEdit(row),\n                children: \"\\u270F\\uFE0F Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 21\n              }, this), customActions.map((action, index) => {\n                // Check if action should be shown based on condition\n                if (action.showCondition && !action.showCondition(row)) {\n                  return null;\n                }\n                return /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `action-btn-small ${action.className || 'secondary'}`,\n                  onClick: () => action.onClick(row),\n                  children: [action.icon, \" \", action.label]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 23\n                }, this);\n              }), showDelete && onDelete && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"action-btn-small danger\",\n                onClick: () => onDelete(row),\n                children: \"\\uD83D\\uDDD1\\uFE0F Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, rowIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), data.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-data\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = DataTable;\nexport default DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","DataTable","data","columns","onEdit","onDelete","onView","showDelete","customActions","getStatusClass","status","toLowerCase","className","children","map","column","index","label","fileName","_jsxFileName","lineNumber","columnNumber","row","rowIndex","colIndex","value","key","Date","toLocaleDateString","firstName","lastName","name","phoneNumber","phone","contactNumber","email","role","onClick","action","showCondition","icon","length","_c","$RefreshReg$"],"sources":["C:/karthik cc/Working-frontend/src/components/DataTable.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst DataTable = ({ data, columns, onEdit, onDelete, onView, showDelete = false, customActions = [] }) => {\r\n  const getStatusClass = (status) => {\r\n    switch (status?.toLowerCase()) {\r\n      case 'approved':\r\n        return 'status-approved';\r\n      case 'pending':\r\n        return 'status-pending';\r\n      case 'refer_back':\r\n        return 'status-refer-back';\r\n      case 'rejected':\r\n        return 'status-rejected';\r\n      case 'assigned':\r\n        return 'status-assigned';\r\n      case 'unassigned':\r\n        return 'status-unassigned';\r\n      default:\r\n        return 'status-default';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"data-table-container\">\r\n      <table className=\"data-table\">\r\n        <thead>\r\n          <tr>\r\n            {columns.map((column, index) => (\r\n              <th key={index}>{column.label}</th>\r\n            ))}\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, rowIndex) => (\r\n            <tr key={rowIndex}>\r\n              {columns.map((column, colIndex) => (\r\n                                 <td key={colIndex}>\r\n                   {(() => {\r\n                     const value = row[column.key];\r\n                     \r\n                     // Handle status fields with special styling\r\n                     if (column.key === 'kycStatus' || column.key === 'assignmentStatus' || column.key === 'status' || column.key === 'accessStatus') {\r\n                       return (\r\n                         <span className={getStatusClass(value)}>\r\n                           {value || 'N/A'}\r\n                         </span>\r\n                       );\r\n                     }\r\n                     \r\n                     // Handle date fields\r\n                     if (column.key === 'registrationDate' || column.key === 'assignedDate') {\r\n                       return value ? new Date(value).toLocaleDateString() : 'N/A';\r\n                     }\r\n                     \r\n                     // Handle name fields (combine firstName and lastName if needed)\r\n                     if (column.key === 'name') {\r\n                       if (row.firstName && row.lastName) {\r\n                         return `${row.firstName} ${row.lastName}`;\r\n                       } else if (row.name) {\r\n                         return row.name;\r\n                       } else {\r\n                         return 'N/A';\r\n                       }\r\n                     }\r\n                     \r\n                     // Handle phone fields\r\n                     if (column.key === 'phone' || column.key === 'phoneNumber') {\r\n                       return row.phoneNumber || row.phone || row.contactNumber || 'N/A';\r\n                     }\r\n                     \r\n                     // Handle email fields\r\n                     if (column.key === 'email') {\r\n                       return row.email || 'N/A';\r\n                     }\r\n                     \r\n                     // Handle role fields\r\n                     if (column.key === 'role') {\r\n                       return row.role || 'N/A';\r\n                     }\r\n                     \r\n                     // For all other fields, return the value or 'N/A'\r\n                     return value || 'N/A';\r\n                   })()}\r\n                 </td>\r\n              ))}\r\n              <td className=\"actions-cell\">\r\n                <div className=\"action-buttons\">\r\n                  {onView && (\r\n                    <button \r\n                      className=\"action-btn-small info\"\r\n                      onClick={() => onView(row)}\r\n                    >\r\n                      👁️ View\r\n                    </button>\r\n                  )}\r\n                  {onEdit && (\r\n                    <button \r\n                      className=\"action-btn-small primary\"\r\n                      onClick={() => onEdit(row)}\r\n                    >\r\n                      ✏️ Edit\r\n                    </button>\r\n                  )}\r\n                  {customActions.map((action, index) => {\r\n                    // Check if action should be shown based on condition\r\n                    if (action.showCondition && !action.showCondition(row)) {\r\n                      return null;\r\n                    }\r\n                    return (\r\n                      <button\r\n                        key={index}\r\n                        className={`action-btn-small ${action.className || 'secondary'}`}\r\n                        onClick={() => action.onClick(row)}\r\n                      >\r\n                        {action.icon} {action.label}\r\n                      </button>\r\n                    );\r\n                  })}\r\n                  {showDelete && onDelete && (\r\n                    <button \r\n                      className=\"action-btn-small danger\"\r\n                      onClick={() => onDelete(row)}\r\n                    >\r\n                      🗑️ Delete\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {data.length === 0 && (\r\n        <div className=\"no-data\">\r\n          <p>No data available</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataTable; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}