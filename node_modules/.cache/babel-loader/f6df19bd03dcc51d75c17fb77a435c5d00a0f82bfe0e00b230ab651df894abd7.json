{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fronted-dev\\\\Latest-working-frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect, useCallback, useMemo } from 'react';\nimport { useLocalStorage } from '../hooks/useLocalStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport { AuthContext };\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser, removeUser] = useLocalStorage('user', null);\n  const [token, setToken, removeToken] = useLocalStorage('token', null);\n  const [loading, setLoading] = useState(true);\n\n  // Memoized user state to prevent unnecessary re-renders\n  const userState = useMemo(() => ({\n    user,\n    isAuthenticated: !!user && !!token,\n    role: (user === null || user === void 0 ? void 0 : user.role) || null,\n    permissions: (user === null || user === void 0 ? void 0 : user.permissions) || []\n  }), [user, token]);\n  useEffect(() => {\n    const initializeAuth = async () => {\n      try {\n        setLoading(true);\n\n        // Validate token if exists\n        if (token && user) {\n          try {\n            // You can add token validation logic here\n            // const isValid = await validateToken(token);\n            // if (!isValid) {\n            //   removeUser();\n            //   removeToken();\n            // }\n          } catch (error) {\n            console.error('Token validation failed:', error);\n            removeUser();\n            removeToken();\n          }\n        }\n      } catch (error) {\n        console.error('Auth initialization error:', error);\n        removeUser();\n        removeToken();\n      } finally {\n        setLoading(false);\n      }\n    };\n    initializeAuth();\n  }, [token, user, removeUser, removeToken]);\n  const login = useCallback((userData, authToken) => {\n    try {\n      setUser(userData);\n      setToken(authToken);\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  }, [setUser, setToken]);\n  const logout = useCallback(() => {\n    try {\n      removeUser();\n      removeToken();\n      // Clear any other auth-related data\n      localStorage.removeItem('refreshToken');\n      sessionStorage.clear();\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n  }, [removeUser, removeToken]);\n  const updateUser = useCallback(updates => {\n    try {\n      setUser(prevUser => ({\n        ...prevUser,\n        ...updates\n      }));\n    } catch (error) {\n      console.error('Update user error:', error);\n      throw error;\n    }\n  }, [setUser]);\n  const value = useMemo(() => ({\n    ...userState,\n    login,\n    logout,\n    updateUser,\n    loading\n  }), [userState, login, logout, updateUser, loading]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"FC4Ow9dbAMKRR0xs3e3sSnLLlrk=\", false, function () {\n  return [useLocalStorage, useLocalStorage];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useCallback","useMemo","useLocalStorage","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","removeUser","token","setToken","removeToken","loading","setLoading","userState","isAuthenticated","role","permissions","initializeAuth","error","console","login","userData","authToken","logout","localStorage","removeItem","sessionStorage","clear","updateUser","updates","prevUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Fronted-dev/Latest-working-frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, useCallback, useMemo } from 'react';\r\nimport { useLocalStorage } from '../hooks/useLocalStorage';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport { AuthContext };\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser, removeUser] = useLocalStorage('user', null);\r\n  const [token, setToken, removeToken] = useLocalStorage('token', null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Memoized user state to prevent unnecessary re-renders\r\n  const userState = useMemo(() => ({\r\n    user,\r\n    isAuthenticated: !!user && !!token,\r\n    role: user?.role || null,\r\n    permissions: user?.permissions || []\r\n  }), [user, token]);\r\n\r\n  useEffect(() => {\r\n    const initializeAuth = async () => {\r\n      try {\r\n        setLoading(true);\r\n        \r\n        // Validate token if exists\r\n        if (token && user) {\r\n          try {\r\n            // You can add token validation logic here\r\n            // const isValid = await validateToken(token);\r\n            // if (!isValid) {\r\n            //   removeUser();\r\n            //   removeToken();\r\n            // }\r\n          } catch (error) {\r\n            console.error('Token validation failed:', error);\r\n            removeUser();\r\n            removeToken();\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Auth initialization error:', error);\r\n        removeUser();\r\n        removeToken();\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    initializeAuth();\r\n  }, [token, user, removeUser, removeToken]);\r\n\r\n  const login = useCallback((userData, authToken) => {\r\n    try {\r\n      setUser(userData);\r\n      setToken(authToken);\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      throw error;\r\n    }\r\n  }, [setUser, setToken]);\r\n\r\n  const logout = useCallback(() => {\r\n    try {\r\n      removeUser();\r\n      removeToken();\r\n      // Clear any other auth-related data\r\n      localStorage.removeItem('refreshToken');\r\n      sessionStorage.clear();\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n    }\r\n  }, [removeUser, removeToken]);\r\n\r\n  const updateUser = useCallback((updates) => {\r\n    try {\r\n      setUser(prevUser => ({\r\n        ...prevUser,\r\n        ...updates\r\n      }));\r\n    } catch (error) {\r\n      console.error('Update user error:', error);\r\n      throw error;\r\n    }\r\n  }, [setUser]);\r\n\r\n  const value = useMemo(() => ({\r\n    ...userState,\r\n    login,\r\n    logout,\r\n    updateUser,\r\n    loading\r\n  }), [userState, login, logout, updateUser, loading]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}