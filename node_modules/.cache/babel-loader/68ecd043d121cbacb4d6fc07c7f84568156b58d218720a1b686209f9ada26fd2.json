{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nexport const useLocalStorage = (key, initialValue) => {\n  _s();\n  // Get from local storage then parse stored json or return initialValue\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.error(`Error reading localStorage key \"${key}\":`, error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that persists the new value to localStorage\n  const setValue = useCallback(value => {\n    try {\n      // Allow value to be a function so we have the same API as useState\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.error(`Error setting localStorage key \"${key}\":`, error);\n    }\n  }, [key, storedValue]);\n\n  // Remove item from localStorage\n  const removeValue = useCallback(() => {\n    try {\n      setStoredValue(initialValue);\n      window.localStorage.removeItem(key);\n    } catch (error) {\n      console.error(`Error removing localStorage key \"${key}\":`, error);\n    }\n  }, [key, initialValue]);\n\n  // Listen for changes to this localStorage key in other tabs/windows\n  useEffect(() => {\n    const handleStorageChange = e => {\n      if (e.key === key && e.newValue !== null) {\n        try {\n          setStoredValue(JSON.parse(e.newValue));\n        } catch (error) {\n          console.error(`Error parsing localStorage key \"${key}\":`, error);\n        }\n      }\n    };\n    window.addEventListener('storage', handleStorageChange);\n    return () => window.removeEventListener('storage', handleStorageChange);\n  }, [key]);\n  return [storedValue, setValue, removeValue];\n};\n_s(useLocalStorage, \"JSSMftIu1lrSF/ni2BEgQvwEBrM=\");","map":{"version":3,"names":["useState","useEffect","useCallback","useLocalStorage","key","initialValue","_s","storedValue","setStoredValue","item","window","localStorage","getItem","JSON","parse","error","console","setValue","value","valueToStore","Function","setItem","stringify","removeValue","removeItem","handleStorageChange","e","newValue","addEventListener","removeEventListener"],"sources":["D:/Fronted-dev/src/hooks/useLocalStorage.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\r\n\r\nexport const useLocalStorage = (key, initialValue) => {\r\n  // Get from local storage then parse stored json or return initialValue\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      const item = window.localStorage.getItem(key);\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      console.error(`Error reading localStorage key \"${key}\":`, error);\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  // Return a wrapped version of useState's setter function that persists the new value to localStorage\r\n  const setValue = useCallback((value) => {\r\n    try {\r\n      // Allow value to be a function so we have the same API as useState\r\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\r\n      setStoredValue(valueToStore);\r\n      \r\n      // Save to local storage\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      console.error(`Error setting localStorage key \"${key}\":`, error);\r\n    }\r\n  }, [key, storedValue]);\r\n\r\n  // Remove item from localStorage\r\n  const removeValue = useCallback(() => {\r\n    try {\r\n      setStoredValue(initialValue);\r\n      window.localStorage.removeItem(key);\r\n    } catch (error) {\r\n      console.error(`Error removing localStorage key \"${key}\":`, error);\r\n    }\r\n  }, [key, initialValue]);\r\n\r\n  // Listen for changes to this localStorage key in other tabs/windows\r\n  useEffect(() => {\r\n    const handleStorageChange = (e) => {\r\n      if (e.key === key && e.newValue !== null) {\r\n        try {\r\n          setStoredValue(JSON.parse(e.newValue));\r\n        } catch (error) {\r\n          console.error(`Error parsing localStorage key \"${key}\":`, error);\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener('storage', handleStorageChange);\r\n    return () => window.removeEventListener('storage', handleStorageChange);\r\n  }, [key]);\r\n\r\n  return [storedValue, setValue, removeValue];\r\n}; "],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAExD,OAAO,MAAMC,eAAe,GAAGA,CAACC,GAAG,EAAEC,YAAY,KAAK;EAAAC,EAAA;EACpD;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,MAAM;IACnD,IAAI;MACF,MAAMS,IAAI,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAACR,GAAG,CAAC;MAC7C,OAAOK,IAAI,GAAGI,IAAI,CAACC,KAAK,CAACL,IAAI,CAAC,GAAGJ,YAAY;IAC/C,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mCAAmCX,GAAG,IAAI,EAAEW,KAAK,CAAC;MAChE,OAAOV,YAAY;IACrB;EACF,CAAC,CAAC;;EAEF;EACA,MAAMY,QAAQ,GAAGf,WAAW,CAAEgB,KAAK,IAAK;IACtC,IAAI;MACF;MACA,MAAMC,YAAY,GAAGD,KAAK,YAAYE,QAAQ,GAAGF,KAAK,CAACX,WAAW,CAAC,GAAGW,KAAK;MAC3EV,cAAc,CAACW,YAAY,CAAC;;MAE5B;MACAT,MAAM,CAACC,YAAY,CAACU,OAAO,CAACjB,GAAG,EAAES,IAAI,CAACS,SAAS,CAACH,YAAY,CAAC,CAAC;IAChE,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mCAAmCX,GAAG,IAAI,EAAEW,KAAK,CAAC;IAClE;EACF,CAAC,EAAE,CAACX,GAAG,EAAEG,WAAW,CAAC,CAAC;;EAEtB;EACA,MAAMgB,WAAW,GAAGrB,WAAW,CAAC,MAAM;IACpC,IAAI;MACFM,cAAc,CAACH,YAAY,CAAC;MAC5BK,MAAM,CAACC,YAAY,CAACa,UAAU,CAACpB,GAAG,CAAC;IACrC,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oCAAoCX,GAAG,IAAI,EAAEW,KAAK,CAAC;IACnE;EACF,CAAC,EAAE,CAACX,GAAG,EAAEC,YAAY,CAAC,CAAC;;EAEvB;EACAJ,SAAS,CAAC,MAAM;IACd,MAAMwB,mBAAmB,GAAIC,CAAC,IAAK;MACjC,IAAIA,CAAC,CAACtB,GAAG,KAAKA,GAAG,IAAIsB,CAAC,CAACC,QAAQ,KAAK,IAAI,EAAE;QACxC,IAAI;UACFnB,cAAc,CAACK,IAAI,CAACC,KAAK,CAACY,CAAC,CAACC,QAAQ,CAAC,CAAC;QACxC,CAAC,CAAC,OAAOZ,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,mCAAmCX,GAAG,IAAI,EAAEW,KAAK,CAAC;QAClE;MACF;IACF,CAAC;IAEDL,MAAM,CAACkB,gBAAgB,CAAC,SAAS,EAAEH,mBAAmB,CAAC;IACvD,OAAO,MAAMf,MAAM,CAACmB,mBAAmB,CAAC,SAAS,EAAEJ,mBAAmB,CAAC;EACzE,CAAC,EAAE,CAACrB,GAAG,CAAC,CAAC;EAET,OAAO,CAACG,WAAW,EAAEU,QAAQ,EAAEM,WAAW,CAAC;AAC7C,CAAC;AAACjB,EAAA,CArDWH,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}