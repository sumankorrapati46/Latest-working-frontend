{"ast":null,"code":"import React from'react';import FarmerRegistrationForm from'../components/FarmerRegistrationForm';import{authAPI}from'../api/apiService';import{jsx as _jsx}from\"react/jsx-runtime\";const FarmerRegistration=()=>{const handleSubmit=async data=>{try{console.log('Farmer registration submitted:',data);// Extract basic registration data from the detailed form (flat structure)\nconst basicRegistrationData={name:`${data.firstName||''} ${data.middleName||''} ${data.lastName||''}`.trim(),gender:data.gender||'',dateOfBirth:data.dateOfBirth||'',email:data.email||`${data.contactNumber}@farmer.temp`,// Use phone number as email if not provided\nphoneNumber:data.contactNumber||'',role:'FARMER',password:'TempPassword123!'// Generate a temporary password\n};// Validate that we have the required basic fields\nif(!basicRegistrationData.name||!basicRegistrationData.phoneNumber){alert('Please fill in all required basic information (name, phone number)');return;}// Check if we have a proper email or need to use a temporary one\nif(!data.email){const useTempEmail=window.confirm('Email is required for registration. Would you like to use a temporary email based on your phone number? You can update it later.');if(!useTempEmail){alert('Please add an email address to continue with registration.');return;}}console.log('Submitting basic registration data:',basicRegistrationData);// Submit basic registration to backend using authAPI.register\nconst response=await authAPI.register(basicRegistrationData);console.log('Farmer registration successful:',response);alert('Farmer registration completed successfully! Please wait for admin approval. You will receive login credentials once approved.');// Note: The detailed profile data can be saved later when the user is approved\n// and logs in for the first time, or through a separate API endpoint\n}catch(error){console.error('Error submitting farmer registration:',error);alert('Error submitting form. Please try again.');}};return/*#__PURE__*/_jsx(FarmerRegistrationForm,{isInDashboard:false,onSubmit:handleSubmit});};export default FarmerRegistration;","map":{"version":3,"names":["React","FarmerRegistrationForm","authAPI","jsx","_jsx","FarmerRegistration","handleSubmit","data","console","log","basicRegistrationData","name","firstName","middleName","lastName","trim","gender","dateOfBirth","email","contactNumber","phoneNumber","role","password","alert","useTempEmail","window","confirm","response","register","error","isInDashboard","onSubmit"],"sources":["D:/Fronted-dev/Latest-working-frontend/src/pages/FarmerRegistration.jsx"],"sourcesContent":["import React from 'react';\r\nimport FarmerRegistrationForm from '../components/FarmerRegistrationForm';\r\nimport { authAPI } from '../api/apiService';\r\n\r\nconst FarmerRegistration = () => {\r\n  const handleSubmit = async (data) => {\r\n    try {\r\n      console.log('Farmer registration submitted:', data);\r\n      \r\n      // Extract basic registration data from the detailed form (flat structure)\r\n      const basicRegistrationData = {\r\n        name: `${data.firstName || ''} ${data.middleName || ''} ${data.lastName || ''}`.trim(),\r\n        gender: data.gender || '',\r\n        dateOfBirth: data.dateOfBirth || '',\r\n        email: data.email || `${data.contactNumber}@farmer.temp`, // Use phone number as email if not provided\r\n        phoneNumber: data.contactNumber || '',\r\n        role: 'FARMER',\r\n        password: 'TempPassword123!' // Generate a temporary password\r\n      };\r\n      \r\n      // Validate that we have the required basic fields\r\n      if (!basicRegistrationData.name || !basicRegistrationData.phoneNumber) {\r\n        alert('Please fill in all required basic information (name, phone number)');\r\n        return;\r\n      }\r\n      \r\n      // Check if we have a proper email or need to use a temporary one\r\n      if (!data.email) {\r\n        const useTempEmail = window.confirm('Email is required for registration. Would you like to use a temporary email based on your phone number? You can update it later.');\r\n        if (!useTempEmail) {\r\n          alert('Please add an email address to continue with registration.');\r\n          return;\r\n        }\r\n      }\r\n      \r\n      console.log('Submitting basic registration data:', basicRegistrationData);\r\n      \r\n      // Submit basic registration to backend using authAPI.register\r\n      const response = await authAPI.register(basicRegistrationData);\r\n      console.log('Farmer registration successful:', response);\r\n      \r\n      alert('Farmer registration completed successfully! Please wait for admin approval. You will receive login credentials once approved.');\r\n      \r\n      // Note: The detailed profile data can be saved later when the user is approved\r\n      // and logs in for the first time, or through a separate API endpoint\r\n      \r\n    } catch (error) {\r\n      console.error('Error submitting farmer registration:', error);\r\n      alert('Error submitting form. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FarmerRegistrationForm\r\n      isInDashboard={false}\r\n      onSubmit={handleSubmit}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FarmerRegistration; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,sBAAsB,KAAM,sCAAsC,CACzE,OAASC,OAAO,KAAQ,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE5C,KAAM,CAAAC,kBAAkB,CAAGA,CAAA,GAAM,CAC/B,KAAM,CAAAC,YAAY,CAAG,KAAO,CAAAC,IAAI,EAAK,CACnC,GAAI,CACFC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAEF,IAAI,CAAC,CAEnD;AACA,KAAM,CAAAG,qBAAqB,CAAG,CAC5BC,IAAI,CAAE,GAAGJ,IAAI,CAACK,SAAS,EAAI,EAAE,IAAIL,IAAI,CAACM,UAAU,EAAI,EAAE,IAAIN,IAAI,CAACO,QAAQ,EAAI,EAAE,EAAE,CAACC,IAAI,CAAC,CAAC,CACtFC,MAAM,CAAET,IAAI,CAACS,MAAM,EAAI,EAAE,CACzBC,WAAW,CAAEV,IAAI,CAACU,WAAW,EAAI,EAAE,CACnCC,KAAK,CAAEX,IAAI,CAACW,KAAK,EAAI,GAAGX,IAAI,CAACY,aAAa,cAAc,CAAE;AAC1DC,WAAW,CAAEb,IAAI,CAACY,aAAa,EAAI,EAAE,CACrCE,IAAI,CAAE,QAAQ,CACdC,QAAQ,CAAE,kBAAmB;AAC/B,CAAC,CAED;AACA,GAAI,CAACZ,qBAAqB,CAACC,IAAI,EAAI,CAACD,qBAAqB,CAACU,WAAW,CAAE,CACrEG,KAAK,CAAC,oEAAoE,CAAC,CAC3E,OACF,CAEA;AACA,GAAI,CAAChB,IAAI,CAACW,KAAK,CAAE,CACf,KAAM,CAAAM,YAAY,CAAGC,MAAM,CAACC,OAAO,CAAC,kIAAkI,CAAC,CACvK,GAAI,CAACF,YAAY,CAAE,CACjBD,KAAK,CAAC,4DAA4D,CAAC,CACnE,OACF,CACF,CAEAf,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAEC,qBAAqB,CAAC,CAEzE;AACA,KAAM,CAAAiB,QAAQ,CAAG,KAAM,CAAAzB,OAAO,CAAC0B,QAAQ,CAAClB,qBAAqB,CAAC,CAC9DF,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAEkB,QAAQ,CAAC,CAExDJ,KAAK,CAAC,+HAA+H,CAAC,CAEtI;AACA;AAEF,CAAE,MAAOM,KAAK,CAAE,CACdrB,OAAO,CAACqB,KAAK,CAAC,uCAAuC,CAAEA,KAAK,CAAC,CAC7DN,KAAK,CAAC,0CAA0C,CAAC,CACnD,CACF,CAAC,CAED,mBACEnB,IAAA,CAACH,sBAAsB,EACrB6B,aAAa,CAAE,KAAM,CACrBC,QAAQ,CAAEzB,YAAa,CACxB,CAAC,CAEN,CAAC,CAED,cAAe,CAAAD,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}