{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ActionDropdown=_ref=>{let{actions,item}=_ref;const[isOpen,setIsOpen]=useState(false);const dropdownRef=useRef(null);// Close dropdown when clicking outside\nuseEffect(()=>{const handleClickOutside=event=>{if(dropdownRef.current&&!dropdownRef.current.contains(event.target)){setIsOpen(false);}};document.addEventListener('mousedown',handleClickOutside);return()=>{document.removeEventListener('mousedown',handleClickOutside);};},[]);const handleActionClick=action=>{if(action.onClick){action.onClick(item);}setIsOpen(false);};return/*#__PURE__*/_jsxs(\"div\",{className:\"action-dropdown-component\",ref:dropdownRef,children:[/*#__PURE__*/_jsx(\"button\",{className:\"action-dropdown-toggle\",onClick:()=>setIsOpen(!isOpen),\"aria-label\":\"Actions\",children:\"\\u22EF\"}),isOpen&&/*#__PURE__*/_jsx(\"div\",{className:\"action-dropdown-menu\",children:actions.map((action,index)=>{// Check if action should be shown based on condition\nif(action.showCondition&&!action.showCondition(item)){return null;}return/*#__PURE__*/_jsxs(\"button\",{className:`action-dropdown-item ${action.className||''}`,onClick:()=>handleActionClick(action),children:[action.icon&&/*#__PURE__*/_jsx(\"span\",{className:\"action-dropdown-icon\",children:action.icon}),action.label]},index);})})]});};export default ActionDropdown;","map":{"version":3,"names":["React","useState","useRef","useEffect","jsx","_jsx","jsxs","_jsxs","ActionDropdown","_ref","actions","item","isOpen","setIsOpen","dropdownRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleActionClick","action","onClick","className","ref","children","map","index","showCondition","icon","label"],"sources":["D:/Fronted-dev/src/components/ActionDropdown.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\n\r\nconst ActionDropdown = ({ actions, item }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const dropdownRef = useRef(null);\r\n\r\n  // Close dropdown when clicking outside\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  const handleActionClick = (action) => {\r\n    if (action.onClick) {\r\n      action.onClick(item);\r\n    }\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"action-dropdown-component\" ref={dropdownRef}>\r\n      <button\r\n        className=\"action-dropdown-toggle\"\r\n        onClick={() => setIsOpen(!isOpen)}\r\n        aria-label=\"Actions\"\r\n      >\r\n        â‹¯\r\n      </button>\r\n      \r\n      {isOpen && (\r\n        <div className=\"action-dropdown-menu\">\r\n          {actions.map((action, index) => {\r\n            // Check if action should be shown based on condition\r\n            if (action.showCondition && !action.showCondition(item)) {\r\n              return null;\r\n            }\r\n            \r\n            return (\r\n              <button\r\n                key={index}\r\n                className={`action-dropdown-item ${action.className || ''}`}\r\n                onClick={() => handleActionClick(action)}\r\n              >\r\n                {action.icon && <span className=\"action-dropdown-icon\">{action.icon}</span>}\r\n                {action.label}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionDropdown; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,MAAM,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE3D,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAuB,IAAtB,CAAEC,OAAO,CAAEC,IAAK,CAAC,CAAAF,IAAA,CACvC,KAAM,CAACG,MAAM,CAAEC,SAAS,CAAC,CAAGZ,QAAQ,CAAC,KAAK,CAAC,CAC3C,KAAM,CAAAa,WAAW,CAAGZ,MAAM,CAAC,IAAI,CAAC,CAEhC;AACAC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAY,kBAAkB,CAAIC,KAAK,EAAK,CACpC,GAAIF,WAAW,CAACG,OAAO,EAAI,CAACH,WAAW,CAACG,OAAO,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAAC,CAAE,CACtEN,SAAS,CAAC,KAAK,CAAC,CAClB,CACF,CAAC,CAEDO,QAAQ,CAACC,gBAAgB,CAAC,WAAW,CAAEN,kBAAkB,CAAC,CAC1D,MAAO,IAAM,CACXK,QAAQ,CAACE,mBAAmB,CAAC,WAAW,CAAEP,kBAAkB,CAAC,CAC/D,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAQ,iBAAiB,CAAIC,MAAM,EAAK,CACpC,GAAIA,MAAM,CAACC,OAAO,CAAE,CAClBD,MAAM,CAACC,OAAO,CAACd,IAAI,CAAC,CACtB,CACAE,SAAS,CAAC,KAAK,CAAC,CAClB,CAAC,CAED,mBACEN,KAAA,QAAKmB,SAAS,CAAC,2BAA2B,CAACC,GAAG,CAAEb,WAAY,CAAAc,QAAA,eAC1DvB,IAAA,WACEqB,SAAS,CAAC,wBAAwB,CAClCD,OAAO,CAAEA,CAAA,GAAMZ,SAAS,CAAC,CAACD,MAAM,CAAE,CAClC,aAAW,SAAS,CAAAgB,QAAA,CACrB,QAED,CAAQ,CAAC,CAERhB,MAAM,eACLP,IAAA,QAAKqB,SAAS,CAAC,sBAAsB,CAAAE,QAAA,CAClClB,OAAO,CAACmB,GAAG,CAAC,CAACL,MAAM,CAAEM,KAAK,GAAK,CAC9B;AACA,GAAIN,MAAM,CAACO,aAAa,EAAI,CAACP,MAAM,CAACO,aAAa,CAACpB,IAAI,CAAC,CAAE,CACvD,MAAO,KAAI,CACb,CAEA,mBACEJ,KAAA,WAEEmB,SAAS,CAAE,wBAAwBF,MAAM,CAACE,SAAS,EAAI,EAAE,EAAG,CAC5DD,OAAO,CAAEA,CAAA,GAAMF,iBAAiB,CAACC,MAAM,CAAE,CAAAI,QAAA,EAExCJ,MAAM,CAACQ,IAAI,eAAI3B,IAAA,SAAMqB,SAAS,CAAC,sBAAsB,CAAAE,QAAA,CAAEJ,MAAM,CAACQ,IAAI,CAAO,CAAC,CAC1ER,MAAM,CAACS,KAAK,GALRH,KAMC,CAAC,CAEb,CAAC,CAAC,CACC,CACN,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAtB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}