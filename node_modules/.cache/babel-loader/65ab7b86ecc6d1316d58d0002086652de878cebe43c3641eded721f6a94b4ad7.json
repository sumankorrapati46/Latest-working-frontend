{"ast":null,"code":"import axios from'axios';// Create axios instance\nconst api=axios.create({baseURL:process.env.REACT_APP_API_URL||'http://localhost:8080/api',timeout:10000,headers:{'Content-Type':'application/json'}});// Request interceptor to add auth token\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');console.log('🔐 API Request - Token from localStorage:',token?'Present':'Missing');console.log('🔐 API Request - URL:',config.url);console.log('🔐 API Request - Method:',config.method);if(token){config.headers.Authorization=`Bearer ${token}`;console.log('🔐 API Request - Authorization header added');}else{console.log('⚠️ API Request - No token found in localStorage');}return config;},error=>{console.error('❌ API Request interceptor error:',error);return Promise.reject(error);});// Response interceptor for error handling\napi.interceptors.response.use(response=>response,error=>{var _error$response,_error$response2,_error$config,_error$config2,_error$response3,_error$response4;console.error('❌ API Response Error:',{status:(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status,statusText:(_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.statusText,url:(_error$config=error.config)===null||_error$config===void 0?void 0:_error$config.url,method:(_error$config2=error.config)===null||_error$config2===void 0?void 0:_error$config2.method,message:error.message});if(((_error$response3=error.response)===null||_error$response3===void 0?void 0:_error$response3.status)===401||((_error$response4=error.response)===null||_error$response4===void 0?void 0:_error$response4.status)===403){console.error('🔐 Authentication failed - clearing tokens and redirecting to login');// Comprehensive token clearing\nconst keysToRemove=['token','user','authToken','jwtToken','accessToken','refreshToken','auth','session','login'];keysToRemove.forEach(key=>{localStorage.removeItem(key);sessionStorage.removeItem(key);});// Clear all storage\nlocalStorage.clear();sessionStorage.clear();// Clear all cookies\ndocument.cookie.split(\";\").forEach(function(c){document.cookie=c.replace(/^ +/,\"\").replace(/=.*/,\"=;expires=\"+new Date().toUTCString()+\";path=/\");});// Only redirect if not already on login page\nif(!window.location.pathname.includes('/login')){window.location.href='/login';}}return Promise.reject(error);});// Authentication API calls\nexport const authAPI={// Login\nlogin:async credentials=>{const response=await api.post('/auth/login',credentials);return response.data;},// Get user profile\ngetProfile:async()=>{const response=await api.get('/auth/profile');return response.data;},// Register user\nregister:async userData=>{const response=await api.post('/auth/register',userData);return response.data;},// Send OTP\nsendOTP:async email=>{const response=await api.post('/auth/send-otp',{emailOrPhone:email});return response.data;},// Verify OTP\nverifyOTP:async otpData=>{const response=await api.post('/auth/verify-otp',{emailOrPhone:otpData.email,otp:otpData.otp});return response.data;},// Resend OTP\nresendOTP:async email=>{const response=await api.post('/auth/resend-otp',{emailOrPhone:email});return response.data;},// Forgot password\nforgotPassword:async emailOrPhone=>{const response=await api.post('/auth/forgot-password',{emailOrPhone});return response.data;},// Forgot user ID\nforgotUserId:async emailOrPhone=>{const response=await api.post('/auth/forgot-user-id',{emailOrPhone});return response.data;},// Reset password\nresetPassword:async resetData=>{const response=await api.post('/auth/reset-password',resetData);return response.data;},// Change password\nchangePassword:async passwordData=>{const response=await api.post('/auth/change-password',passwordData);return response.data;},// Reset password (for first-time password change)\nresetPasswordConfirm:async resetData=>{const response=await api.post('/auth/reset-password/confirm',resetData);return response.data;},// Change user ID\nchangeUserId:async userIdData=>{const response=await api.post('/auth/change-user-id',userIdData);return response.data;},// Get countries\ngetCountries:async()=>{const response=await api.get('/auth/countries');return response.data;},// Get states\ngetStates:async countryId=>{const response=await api.post('/auth/states',{countryId});return response.data;}};// Super Admin API calls\nexport const superAdminAPI={// Get all users (registrations)\ngetAllUsers:async()=>{const response=await api.get('/super-admin/registration-list');return response.data;},// Get registration list with filters\ngetRegistrationList:async function(){let filters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const response=await api.get('/super-admin/registration-list',{params:filters});return response.data;},// Get registration list by status\ngetRegistrationListByStatus:async status=>{const response=await api.get('/super-admin/registration-list/filter',{params:{status}});return response.data;},// Search registrations\nsearchRegistrations:async query=>{const response=await api.get('/super-admin/registration-list/search',{params:{query}});return response.data;},// Get pending registrations\ngetPendingRegistrations:async()=>{const response=await api.get('/super-admin/pending-registrations');return response.data;},// Get approved users\ngetApprovedUsers:async()=>{const response=await api.get('/super-admin/approved-users');return response.data;},// Get users by role\ngetUsersByRole:async role=>{const response=await api.get(`/super-admin/users/by-role/${role}`);return response.data;},// Get pending users by role\ngetPendingUsersByRole:async role=>{const response=await api.get(`/super-admin/pending-users/by-role/${role}`);return response.data;},// Approve user\napproveUser:async(userId,role)=>{const response=await api.put(`/auth/users/${userId}/approve`,{role});return response.data;},// Reject user (update status to REJECTED)\nrejectUser:async(userId,reason)=>{const response=await api.put(`/auth/users/${userId}/status`,{status:'REJECTED'});return response.data;},// Delete user\ndeleteUser:async userId=>{const response=await api.delete(`/super-admin/users/${userId}`);return response.data;},// Update user\nupdateUser:async(userId,userData)=>{const response=await api.put(`/super-admin/users/${userId}`,userData);return response.data;},// Update user status\nupdateUserStatus:async(userId,status)=>{const response=await api.put(`/auth/users/${userId}/status`,{status});return response.data;},// Get dashboard stats\ngetDashboardStats:async()=>{const response=await api.get('/super-admin/dashboard/stats');return response.data;},// Bulk assign farmers to employee\nbulkAssignFarmers:async(farmerIds,employeeId)=>{const response=await api.post('/super-admin/bulk-assign-farmers',{farmerIds,employeeId});return response.data;},// Single assign farmer to employee (fallback)\nassignFarmer:async(farmerId,employeeId)=>{const response=await api.post('/super-admin/assign-farmer',null,{params:{farmerId,employeeId}});return response.data;}};// Farmers API calls\nexport const farmersAPI={// Get all farmers\ngetAllFarmers:async function(){let filters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const response=await api.get('/super-admin/farmers',{params:filters});return response.data;},// Get farmer by ID\ngetFarmerById:async id=>{const response=await api.get(`/super-admin/farmers/${id}`);return response.data;},// Create farmer\ncreateFarmer:async farmerData=>{const response=await api.post('/super-admin/farmers',farmerData);return response.data;},// Update farmer\nupdateFarmer:async(id,farmerData)=>{const response=await api.put(`/super-admin/farmers/${id}`,farmerData);return response.data;},// Delete farmer\ndeleteFarmer:async id=>{const response=await api.delete(`/super-admin/farmers/${id}`);return response.data;},// Assign farmer to employee\nassignFarmer:async(farmerId,employeeId)=>{const response=await api.post(`/super-admin/farmers/${farmerId}/assign`,{employeeId});return response.data;},// Get farmer statistics\ngetFarmerStats:async()=>{const response=await api.get('/super-admin/farmers/stats');return response.data;}};// Admin-specific API calls\nexport const adminAPI={// Get all farmers for admin\ngetAllFarmers:async function(){let filters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const response=await api.get('/admin/farmers',{params:filters});return response.data;},// Get all employees for admin\ngetAllEmployees:async function(){let filters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const response=await api.get('/admin/employees',{params:filters});return response.data;},// Get farmers with KYC status\ngetFarmersWithKyc:async()=>{const response=await api.get('/admin/farmers-with-kyc');return response.data;},// Get employees with stats\ngetEmployeesWithStats:async()=>{const response=await api.get('/admin/employees-with-stats');return response.data;},// Get farmers by employee\ngetFarmersByEmployee:async employeeId=>{const response=await api.get(`/admin/employees/${employeeId}/assigned-farmers`);return response.data;},// Get todo list for admin\ngetTodoList:async()=>{const response=await api.get('/admin/todo-list');return response.data;},// Get enhanced todo list\ngetEnhancedTodoList:async()=>{const response=await api.get('/admin/enhanced-todo-list');return response.data;},// Get dashboard stats\ngetDashboardStats:async()=>{const response=await api.get('/admin/dashboard-stats');return response.data;},// Filter farmers\nfilterFarmers:async function(){let filters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const response=await api.get('/admin/farmers/filter',{params:filters});return response.data;},// Get locations\ngetLocations:async()=>{const response=await api.get('/admin/locations');return response.data;},// Bulk assign farmers to employee\nbulkAssignFarmers:async(farmerIds,employeeId)=>{const response=await api.post('/admin/bulk-assign-farmers',{farmerIds,employeeId});return response.data;},// Single assign farmer to employee (fallback)\nassignFarmer:async(farmerId,employeeId)=>{const response=await api.post('/admin/assign-farmer',null,{params:{farmerId,employeeId}});return response.data;},// Get assignment history\ngetAssignmentHistory:async function(){let filters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const response=await api.get('/admin/assignment-history',{params:filters});return response.data;},// Get farmers by assignment status\ngetFarmersByAssignmentStatus:async assignmentStatus=>{const response=await api.get('/admin/farmers/by-assignment-status',{params:{assignmentStatus}});return response.data;},// Get all registrations for admin\ngetAllRegistrations:async function(){let filters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const response=await api.get('/admin/registration-list',{params:filters});return response.data;},// Get registration list by status for admin\ngetRegistrationListByStatus:async status=>{const response=await api.get('/admin/registration-list/filter',{params:{status}});return response.data;},// Approve registration for admin\napproveRegistration:async(registrationId,approvalData)=>{const response=await api.post(`/admin/registrations/${registrationId}/approve`,approvalData);return response.data;},// Reject registration for admin\nrejectRegistration:async(registrationId,rejectionData)=>{const response=await api.post(`/admin/registrations/${registrationId}/reject`,rejectionData);return response.data;}};// Employees API calls\nexport const employeesAPI={// Get all employees\ngetAllEmployees:async function(){let filters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const response=await api.get('/super-admin/employees',{params:filters});return response.data;},// Get employee by ID\ngetEmployeeById:async id=>{const response=await api.get(`/super-admin/employees/${id}`);return response.data;},// Create employee\ncreateEmployee:async employeeData=>{const response=await api.post('/super-admin/employees',employeeData);return response.data;},// Update employee\nupdateEmployee:async(id,employeeData)=>{const response=await api.put(`/super-admin/employees/${id}`,employeeData);return response.data;},// Delete employee\ndeleteEmployee:async id=>{const response=await api.delete(`/super-admin/employees/${id}`);return response.data;},// Get employee statistics\ngetEmployeeStats:async()=>{const response=await api.get('/super-admin/employees/stats');return response.data;}};// Employee-specific API calls (for employee dashboard)\nexport const employeeAPI={// Get assigned farmers for employee\ngetAssignedFarmers:async()=>{const response=await api.get('/employee/assigned-farmers');return response.data;},// Get farmer details by ID\ngetFarmerById:async farmerId=>{const response=await api.get(`/employee/farmers/${farmerId}`);return response.data;},// Update farmer information\nupdateFarmer:async(farmerId,farmerData)=>{const response=await api.put(`/employee/farmers/${farmerId}`,farmerData);return response.data;},// Get employee profile\ngetProfile:async()=>{const response=await api.get('/employee/profile');return response.data;},// Update employee profile\nupdateProfile:async profileData=>{const response=await api.put('/employee/profile',profileData);return response.data;}};// KYC API calls\nexport const kycAPI={// Approve KYC\napproveKYC:async(farmerId,approvalData)=>{const response=await api.post(`/kyc/${farmerId}/approve`,approvalData);return response.data;},// Reject KYC\nrejectKYC:async(farmerId,rejectionData)=>{const response=await api.post(`/kyc/${farmerId}/reject`,rejectionData);return response.data;},// Refer back KYC\nreferBackKYC:async(farmerId,referralData)=>{const response=await api.post(`/kyc/${farmerId}/refer-back`,referralData);return response.data;},// Get KYC status\ngetKYCStatus:async farmerId=>{const response=await api.get(`/kyc/${farmerId}/status`);return response.data;},// Upload KYC documents\nuploadKYCDocuments:async(farmerId,documents)=>{// Create FormData for file upload\nconst formData=new FormData();// Add files to FormData\nObject.keys(documents).forEach(key=>{if(documents[key]){if(Array.isArray(documents[key])){// Handle multiple files\ndocuments[key].forEach((file,index)=>{formData.append(`${key}[${index}]`,file);});}else{// Handle single file\nformData.append(key,documents[key]);}}});// Use separate axios instance for file uploads (no Content-Type header)\nconst uploadApi=axios.create({baseURL:process.env.REACT_APP_API_URL||'http://localhost:8080/api',timeout:30000// Longer timeout for file uploads\n});// Add auth token to upload requests\nuploadApi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=`Bearer ${token}`;}return config;});const response=await uploadApi.post(`/kyc/${farmerId}/upload`,formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data;},// Get KYC history\ngetKYCHistory:async farmerId=>{const response=await api.get(`/kyc/${farmerId}/history`);return response.data;},// Get KYC document download URL\ngetKYCDocumentUrl:async(farmerId,documentType)=>{const response=await api.get(`/kyc/${farmerId}/documents/${documentType}/download`);return response.data;},// Delete KYC document\ndeleteKYCDocument:async(farmerId,documentType)=>{const response=await api.delete(`/kyc/${farmerId}/documents/${documentType}`);return response.data;}};export default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","console","log","url","method","Authorization","error","Promise","reject","response","_error$response","_error$response2","_error$config","_error$config2","_error$response3","_error$response4","status","statusText","message","keysToRemove","forEach","key","removeItem","sessionStorage","clear","document","cookie","split","c","replace","Date","toUTCString","window","location","pathname","includes","href","authAPI","login","credentials","post","data","getProfile","get","register","userData","sendOTP","email","emailOrPhone","verifyOTP","otpData","otp","resendOTP","forgotPassword","forgotUserId","resetPassword","resetData","changePassword","passwordData","resetPasswordConfirm","changeUserId","userIdData","getCountries","getStates","countryId","superAdminAPI","getAllUsers","getRegistrationList","filters","arguments","length","undefined","params","getRegistrationListByStatus","searchRegistrations","query","getPendingRegistrations","getApprovedUsers","getUsersByRole","role","getPendingUsersByRole","approveUser","userId","put","rejectUser","reason","deleteUser","delete","updateUser","updateUserStatus","getDashboardStats","bulkAssignFarmers","farmerIds","employeeId","assignFarmer","farmerId","farmersAPI","getAllFarmers","getFarmerById","id","createFarmer","farmerData","updateFarmer","deleteFarmer","getFarmerStats","adminAPI","getAllEmployees","getFarmersWithKyc","getEmployeesWithStats","getFarmersByEmployee","getTodoList","getEnhancedTodoList","filterFarmers","getLocations","getAssignmentHistory","getFarmersByAssignmentStatus","assignmentStatus","getAllRegistrations","approveRegistration","registrationId","approvalData","rejectRegistration","rejectionData","employeesAPI","getEmployeeById","createEmployee","employeeData","updateEmployee","deleteEmployee","getEmployeeStats","employeeAPI","getAssignedFarmers","updateProfile","profileData","kycAPI","approveKYC","rejectKYC","referBackKYC","referralData","getKYCStatus","uploadKYCDocuments","documents","formData","FormData","Object","keys","Array","isArray","file","index","append","uploadApi","getKYCHistory","getKYCDocumentUrl","documentType","deleteKYCDocument"],"sources":["D:/Fronted-dev/Latest-working-frontend/src/api/apiService.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8080/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    console.log('🔐 API Request - Token from localStorage:', token ? 'Present' : 'Missing');\n    console.log('🔐 API Request - URL:', config.url);\n    console.log('🔐 API Request - Method:', config.method);\n    \n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n      console.log('🔐 API Request - Authorization header added');\n    } else {\n      console.log('⚠️ API Request - No token found in localStorage');\n    }\n    return config;\n  },\n  (error) => {\n    console.error('❌ API Request interceptor error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    console.error('❌ API Response Error:', {\n      status: error.response?.status,\n      statusText: error.response?.statusText,\n      url: error.config?.url,\n      method: error.config?.method,\n      message: error.message\n    });\n    \n    if (error.response?.status === 401 || error.response?.status === 403) {\n      console.error('🔐 Authentication failed - clearing tokens and redirecting to login');\n      \n      // Comprehensive token clearing\n      const keysToRemove = [\n        'token', 'user', 'authToken', 'jwtToken', 'accessToken', \n        'refreshToken', 'auth', 'session', 'login'\n      ];\n      \n      keysToRemove.forEach(key => {\n        localStorage.removeItem(key);\n        sessionStorage.removeItem(key);\n      });\n      \n      // Clear all storage\n      localStorage.clear();\n      sessionStorage.clear();\n      \n      // Clear all cookies\n      document.cookie.split(\";\").forEach(function(c) { \n        document.cookie = c.replace(/^ +/, \"\").replace(/=.*/, \"=;expires=\" + new Date().toUTCString() + \";path=/\"); \n      });\n      \n      // Only redirect if not already on login page\n      if (!window.location.pathname.includes('/login')) {\n        window.location.href = '/login';\n      }\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Authentication API calls\nexport const authAPI = {\n  // Login\n  login: async (credentials) => {\n    const response = await api.post('/auth/login', credentials);\n    return response.data;\n  },\n\n  // Get user profile\n  getProfile: async () => {\n    const response = await api.get('/auth/profile');\n    return response.data;\n  },\n\n  // Register user\n  register: async (userData) => {\n    const response = await api.post('/auth/register', userData);\n    return response.data;\n  },\n\n  // Send OTP\n  sendOTP: async (email) => {\n    const response = await api.post('/auth/send-otp', { emailOrPhone: email });\n    return response.data;\n  },\n\n  // Verify OTP\n  verifyOTP: async (otpData) => {\n    const response = await api.post('/auth/verify-otp', { \n      emailOrPhone: otpData.email, \n      otp: otpData.otp \n    });\n    return response.data;\n  },\n\n  // Resend OTP\n  resendOTP: async (email) => {\n    const response = await api.post('/auth/resend-otp', { emailOrPhone: email });\n    return response.data;\n  },\n\n  // Forgot password\n  forgotPassword: async (emailOrPhone) => {\n    const response = await api.post('/auth/forgot-password', { emailOrPhone });\n    return response.data;\n  },\n\n  // Forgot user ID\n  forgotUserId: async (emailOrPhone) => {\n    const response = await api.post('/auth/forgot-user-id', { emailOrPhone });\n    return response.data;\n  },\n\n  // Reset password\n  resetPassword: async (resetData) => {\n    const response = await api.post('/auth/reset-password', resetData);\n    return response.data;\n  },\n\n  // Change password\n  changePassword: async (passwordData) => {\n    const response = await api.post('/auth/change-password', passwordData);\n    return response.data;\n  },\n\n  // Reset password (for first-time password change)\n  resetPasswordConfirm: async (resetData) => {\n    const response = await api.post('/auth/reset-password/confirm', resetData);\n    return response.data;\n  },\n\n  // Change user ID\n  changeUserId: async (userIdData) => {\n    const response = await api.post('/auth/change-user-id', userIdData);\n    return response.data;\n  },\n\n  // Get countries\n  getCountries: async () => {\n    const response = await api.get('/auth/countries');\n    return response.data;\n  },\n\n  // Get states\n  getStates: async (countryId) => {\n    const response = await api.post('/auth/states', { countryId });\n    return response.data;\n  }\n};\n\n// Super Admin API calls\nexport const superAdminAPI = {\n  // Get all users (registrations)\n  getAllUsers: async () => {\n    const response = await api.get('/super-admin/registration-list');\n    return response.data;\n  },\n\n  // Get registration list with filters\n  getRegistrationList: async (filters = {}) => {\n    const response = await api.get('/super-admin/registration-list', { params: filters });\n    return response.data;\n  },\n\n  // Get registration list by status\n  getRegistrationListByStatus: async (status) => {\n    const response = await api.get('/super-admin/registration-list/filter', { params: { status } });\n    return response.data;\n  },\n\n  // Search registrations\n  searchRegistrations: async (query) => {\n    const response = await api.get('/super-admin/registration-list/search', { params: { query } });\n    return response.data;\n  },\n\n  // Get pending registrations\n  getPendingRegistrations: async () => {\n    const response = await api.get('/super-admin/pending-registrations');\n    return response.data;\n  },\n\n  // Get approved users\n  getApprovedUsers: async () => {\n    const response = await api.get('/super-admin/approved-users');\n    return response.data;\n  },\n\n  // Get users by role\n  getUsersByRole: async (role) => {\n    const response = await api.get(`/super-admin/users/by-role/${role}`);\n    return response.data;\n  },\n\n  // Get pending users by role\n  getPendingUsersByRole: async (role) => {\n    const response = await api.get(`/super-admin/pending-users/by-role/${role}`);\n    return response.data;\n  },\n\n  // Approve user\n  approveUser: async (userId, role) => {\n    const response = await api.put(`/auth/users/${userId}/approve`, { role });\n    return response.data;\n  },\n\n  // Reject user (update status to REJECTED)\n  rejectUser: async (userId, reason) => {\n    const response = await api.put(`/auth/users/${userId}/status`, { status: 'REJECTED' });\n    return response.data;\n  },\n\n  // Delete user\n  deleteUser: async (userId) => {\n    const response = await api.delete(`/super-admin/users/${userId}`);\n    return response.data;\n  },\n\n  // Update user\n  updateUser: async (userId, userData) => {\n    const response = await api.put(`/super-admin/users/${userId}`, userData);\n    return response.data;\n  },\n\n  // Update user status\n  updateUserStatus: async (userId, status) => {\n    const response = await api.put(`/auth/users/${userId}/status`, { status });\n    return response.data;\n  },\n\n  // Get dashboard stats\n  getDashboardStats: async () => {\n    const response = await api.get('/super-admin/dashboard/stats');\n    return response.data;\n  },\n\n  // Bulk assign farmers to employee\n  bulkAssignFarmers: async (farmerIds, employeeId) => {\n    const response = await api.post('/super-admin/bulk-assign-farmers', { farmerIds, employeeId });\n    return response.data;\n  },\n\n  // Single assign farmer to employee (fallback)\n  assignFarmer: async (farmerId, employeeId) => {\n    const response = await api.post('/super-admin/assign-farmer', null, { \n      params: { farmerId, employeeId } \n    });\n    return response.data;\n  }\n};\n\n// Farmers API calls\nexport const farmersAPI = {\n  // Get all farmers\n  getAllFarmers: async (filters = {}) => {\n    const response = await api.get('/super-admin/farmers', { params: filters });\n    return response.data;\n  },\n\n  // Get farmer by ID\n  getFarmerById: async (id) => {\n    const response = await api.get(`/super-admin/farmers/${id}`);\n    return response.data;\n  },\n\n  // Create farmer\n  createFarmer: async (farmerData) => {\n    const response = await api.post('/super-admin/farmers', farmerData);\n    return response.data;\n  },\n\n  // Update farmer\n  updateFarmer: async (id, farmerData) => {\n    const response = await api.put(`/super-admin/farmers/${id}`, farmerData);\n    return response.data;\n  },\n\n  // Delete farmer\n  deleteFarmer: async (id) => {\n    const response = await api.delete(`/super-admin/farmers/${id}`);\n    return response.data;\n  },\n\n  // Assign farmer to employee\n  assignFarmer: async (farmerId, employeeId) => {\n    const response = await api.post(`/super-admin/farmers/${farmerId}/assign`, { employeeId });\n    return response.data;\n  },\n\n  // Get farmer statistics\n  getFarmerStats: async () => {\n    const response = await api.get('/super-admin/farmers/stats');\n    return response.data;\n  }\n};\n\n// Admin-specific API calls\nexport const adminAPI = {\n  // Get all farmers for admin\n  getAllFarmers: async (filters = {}) => {\n    const response = await api.get('/admin/farmers', { params: filters });\n    return response.data;\n  },\n\n  // Get all employees for admin\n  getAllEmployees: async (filters = {}) => {\n    const response = await api.get('/admin/employees', { params: filters });\n    return response.data;\n  },\n\n  // Get farmers with KYC status\n  getFarmersWithKyc: async () => {\n    const response = await api.get('/admin/farmers-with-kyc');\n    return response.data;\n  },\n\n  // Get employees with stats\n  getEmployeesWithStats: async () => {\n    const response = await api.get('/admin/employees-with-stats');\n    return response.data;\n  },\n\n  // Get farmers by employee\n  getFarmersByEmployee: async (employeeId) => {\n    const response = await api.get(`/admin/employees/${employeeId}/assigned-farmers`);\n    return response.data;\n  },\n\n  // Get todo list for admin\n  getTodoList: async () => {\n    const response = await api.get('/admin/todo-list');\n    return response.data;\n  },\n\n  // Get enhanced todo list\n  getEnhancedTodoList: async () => {\n    const response = await api.get('/admin/enhanced-todo-list');\n    return response.data;\n  },\n\n  // Get dashboard stats\n  getDashboardStats: async () => {\n    const response = await api.get('/admin/dashboard-stats');\n    return response.data;\n  },\n\n  // Filter farmers\n  filterFarmers: async (filters = {}) => {\n    const response = await api.get('/admin/farmers/filter', { params: filters });\n    return response.data;\n  },\n\n  // Get locations\n  getLocations: async () => {\n    const response = await api.get('/admin/locations');\n    return response.data;\n  },\n\n  // Bulk assign farmers to employee\n  bulkAssignFarmers: async (farmerIds, employeeId) => {\n    const response = await api.post('/admin/bulk-assign-farmers', { farmerIds, employeeId });\n    return response.data;\n  },\n\n  // Single assign farmer to employee (fallback)\n  assignFarmer: async (farmerId, employeeId) => {\n    const response = await api.post('/admin/assign-farmer', null, { \n      params: { farmerId, employeeId } \n    });\n    return response.data;\n  },\n\n  // Get assignment history\n  getAssignmentHistory: async (filters = {}) => {\n    const response = await api.get('/admin/assignment-history', { params: filters });\n    return response.data;\n  },\n\n  // Get farmers by assignment status\n  getFarmersByAssignmentStatus: async (assignmentStatus) => {\n    const response = await api.get('/admin/farmers/by-assignment-status', { \n      params: { assignmentStatus } \n    });\n    return response.data;\n  },\n\n  // Get all registrations for admin\n  getAllRegistrations: async (filters = {}) => {\n    const response = await api.get('/admin/registration-list', { params: filters });\n    return response.data;\n  },\n\n  // Get registration list by status for admin\n  getRegistrationListByStatus: async (status) => {\n    const response = await api.get('/admin/registration-list/filter', { params: { status } });\n    return response.data;\n  },\n\n  // Approve registration for admin\n  approveRegistration: async (registrationId, approvalData) => {\n    const response = await api.post(`/admin/registrations/${registrationId}/approve`, approvalData);\n    return response.data;\n  },\n\n  // Reject registration for admin\n  rejectRegistration: async (registrationId, rejectionData) => {\n    const response = await api.post(`/admin/registrations/${registrationId}/reject`, rejectionData);\n    return response.data;\n  }\n};\n\n// Employees API calls\nexport const employeesAPI = {\n  // Get all employees\n  getAllEmployees: async (filters = {}) => {\n    const response = await api.get('/super-admin/employees', { params: filters });\n    return response.data;\n  },\n\n  // Get employee by ID\n  getEmployeeById: async (id) => {\n    const response = await api.get(`/super-admin/employees/${id}`);\n    return response.data;\n  },\n\n  // Create employee\n  createEmployee: async (employeeData) => {\n    const response = await api.post('/super-admin/employees', employeeData);\n    return response.data;\n  },\n\n  // Update employee\n  updateEmployee: async (id, employeeData) => {\n    const response = await api.put(`/super-admin/employees/${id}`, employeeData);\n    return response.data;\n  },\n\n  // Delete employee\n  deleteEmployee: async (id) => {\n    const response = await api.delete(`/super-admin/employees/${id}`);\n    return response.data;\n  },\n\n  // Get employee statistics\n  getEmployeeStats: async () => {\n    const response = await api.get('/super-admin/employees/stats');\n    return response.data;\n  }\n};\n\n// Employee-specific API calls (for employee dashboard)\nexport const employeeAPI = {\n  // Get assigned farmers for employee\n  getAssignedFarmers: async () => {\n    const response = await api.get('/employee/assigned-farmers');\n    return response.data;\n  },\n\n  // Get farmer details by ID\n  getFarmerById: async (farmerId) => {\n    const response = await api.get(`/employee/farmers/${farmerId}`);\n    return response.data;\n  },\n\n  // Update farmer information\n  updateFarmer: async (farmerId, farmerData) => {\n    const response = await api.put(`/employee/farmers/${farmerId}`, farmerData);\n    return response.data;\n  },\n\n  // Get employee profile\n  getProfile: async () => {\n    const response = await api.get('/employee/profile');\n    return response.data;\n  },\n\n  // Update employee profile\n  updateProfile: async (profileData) => {\n    const response = await api.put('/employee/profile', profileData);\n    return response.data;\n  }\n};\n\n// KYC API calls\nexport const kycAPI = {\n  // Approve KYC\n  approveKYC: async (farmerId, approvalData) => {\n    const response = await api.post(`/kyc/${farmerId}/approve`, approvalData);\n    return response.data;\n  },\n\n  // Reject KYC\n  rejectKYC: async (farmerId, rejectionData) => {\n    const response = await api.post(`/kyc/${farmerId}/reject`, rejectionData);\n    return response.data;\n  },\n\n  // Refer back KYC\n  referBackKYC: async (farmerId, referralData) => {\n    const response = await api.post(`/kyc/${farmerId}/refer-back`, referralData);\n    return response.data;\n  },\n\n  // Get KYC status\n  getKYCStatus: async (farmerId) => {\n    const response = await api.get(`/kyc/${farmerId}/status`);\n    return response.data;\n  },\n\n  // Upload KYC documents\n  uploadKYCDocuments: async (farmerId, documents) => {\n    // Create FormData for file upload\n    const formData = new FormData();\n    \n    // Add files to FormData\n    Object.keys(documents).forEach(key => {\n      if (documents[key]) {\n        if (Array.isArray(documents[key])) {\n          // Handle multiple files\n          documents[key].forEach((file, index) => {\n            formData.append(`${key}[${index}]`, file);\n          });\n        } else {\n          // Handle single file\n          formData.append(key, documents[key]);\n        }\n      }\n    });\n\n    // Use separate axios instance for file uploads (no Content-Type header)\n    const uploadApi = axios.create({\n      baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8080/api',\n      timeout: 30000, // Longer timeout for file uploads\n    });\n\n    // Add auth token to upload requests\n    uploadApi.interceptors.request.use((config) => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    });\n\n    const response = await uploadApi.post(`/kyc/${farmerId}/upload`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  },\n\n  // Get KYC history\n  getKYCHistory: async (farmerId) => {\n    const response = await api.get(`/kyc/${farmerId}/history`);\n    return response.data;\n  },\n\n  // Get KYC document download URL\n  getKYCDocumentUrl: async (farmerId, documentType) => {\n    const response = await api.get(`/kyc/${farmerId}/documents/${documentType}/download`);\n    return response.data;\n  },\n\n  // Delete KYC document\n  deleteKYCDocument: async (farmerId, documentType) => {\n    const response = await api.delete(`/kyc/${farmerId}/documents/${documentType}`);\n    return response.data;\n  }\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}