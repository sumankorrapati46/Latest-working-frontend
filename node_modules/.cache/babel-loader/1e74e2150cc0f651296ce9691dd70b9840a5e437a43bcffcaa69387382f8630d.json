{"ast":null,"code":"import React,{createContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";export const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(()=>{const stored=localStorage.getItem('user');return stored?JSON.parse(stored):null;});const[token,setToken]=useState(()=>localStorage.getItem('token')||null);useEffect(()=>{if(user)localStorage.setItem('user',JSON.stringify(user));else localStorage.removeItem('user');if(token)localStorage.setItem('token',token);else localStorage.removeItem('token');},[user,token]);const login=(userData,jwtToken)=>{setUser(userData);setToken(jwtToken);};const logout=()=>{setUser(null);setToken(null);localStorage.removeItem('user');localStorage.removeItem('token');};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,token,login,logout},children:children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","stored","localStorage","getItem","JSON","parse","token","setToken","setItem","stringify","removeItem","login","userData","jwtToken","logout","Provider","value"],"sources":["D:/fullstac/Working-frontend/src/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(() => {\r\n    const stored = localStorage.getItem('user');\r\n    return stored ? JSON.parse(stored) : null;\r\n  });\r\n  const [token, setToken] = useState(() => localStorage.getItem('token') || null);\r\n\r\n  useEffect(() => {\r\n    if (user) localStorage.setItem('user', JSON.stringify(user));\r\n    else localStorage.removeItem('user');\r\n    if (token) localStorage.setItem('token', token);\r\n    else localStorage.removeItem('token');\r\n  }, [user, token]);\r\n\r\n  const login = (userData, jwtToken) => {\r\n    setUser(userData);\r\n    setToken(jwtToken);\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setToken(null);\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('token');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, token, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAElE,MAAO,MAAM,CAAAC,WAAW,cAAGL,aAAa,CAAC,CAAC,CAE1C,MAAO,MAAM,CAAAM,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGT,QAAQ,CAAC,IAAM,CACrC,KAAM,CAAAU,MAAM,CAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAC3C,MAAO,CAAAF,MAAM,CAAGG,IAAI,CAACC,KAAK,CAACJ,MAAM,CAAC,CAAG,IAAI,CAC3C,CAAC,CAAC,CACF,KAAM,CAACK,KAAK,CAAEC,QAAQ,CAAC,CAAGhB,QAAQ,CAAC,IAAMW,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAI,IAAI,CAAC,CAE/EX,SAAS,CAAC,IAAM,CACd,GAAIO,IAAI,CAAEG,YAAY,CAACM,OAAO,CAAC,MAAM,CAAEJ,IAAI,CAACK,SAAS,CAACV,IAAI,CAAC,CAAC,CAAC,IACxD,CAAAG,YAAY,CAACQ,UAAU,CAAC,MAAM,CAAC,CACpC,GAAIJ,KAAK,CAAEJ,YAAY,CAACM,OAAO,CAAC,OAAO,CAAEF,KAAK,CAAC,CAAC,IAC3C,CAAAJ,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC,CACvC,CAAC,CAAE,CAACX,IAAI,CAAEO,KAAK,CAAC,CAAC,CAEjB,KAAM,CAAAK,KAAK,CAAGA,CAACC,QAAQ,CAAEC,QAAQ,GAAK,CACpCb,OAAO,CAACY,QAAQ,CAAC,CACjBL,QAAQ,CAACM,QAAQ,CAAC,CACpB,CAAC,CAED,KAAM,CAAAC,MAAM,CAAGA,CAAA,GAAM,CACnBd,OAAO,CAAC,IAAI,CAAC,CACbO,QAAQ,CAAC,IAAI,CAAC,CACdL,YAAY,CAACQ,UAAU,CAAC,MAAM,CAAC,CAC/BR,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC,CAClC,CAAC,CAED,mBACEhB,IAAA,CAACC,WAAW,CAACoB,QAAQ,EAACC,KAAK,CAAE,CAAEjB,IAAI,CAAEO,KAAK,CAAEK,KAAK,CAAEG,MAAO,CAAE,CAAAhB,QAAA,CACzDA,QAAQ,CACW,CAAC,CAE3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}