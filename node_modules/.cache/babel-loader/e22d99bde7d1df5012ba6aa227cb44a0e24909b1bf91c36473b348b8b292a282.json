{"ast":null,"code":"import React from'react';import{Navigate}from'react-router-dom';import{useAuth}from'../contexts/AuthContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{children,allowedRoles}=_ref;const{user,loading}=useAuth();if(loading){return/*#__PURE__*/_jsxs(\"div\",{className:\"protected-route-loading-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"protected-route-loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"})]});}if(!user){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true});}const normalize=value=>(value||'').toString().toUpperCase().trim();const userRole=normalize(user.role);const allowed=(allowedRoles||[]).map(normalize);const getDashboardPath=role=>{switch(role){case'SUPER_ADMIN':return'/super-admin/dashboard';case'ADMIN':return'/admin/dashboard';case'EMPLOYEE':return'/employee/dashboard';case'FARMER':default:return'/dashboard';}};if(allowed.length&&!allowed.includes(userRole)){return/*#__PURE__*/_jsx(Navigate,{to:getDashboardPath(userRole),replace:true});}return children;};export default ProtectedRoute;","map":{"version":3,"names":["React","Navigate","useAuth","jsx","_jsx","jsxs","_jsxs","ProtectedRoute","_ref","children","allowedRoles","user","loading","className","to","replace","normalize","value","toString","toUpperCase","trim","userRole","role","allowed","map","getDashboardPath","length","includes"],"sources":["D:/Fronted-dev/Latest-working-frontend/src/components/ProtectedRoute.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nconst ProtectedRoute = ({ children, allowedRoles }) => {\r\n  const { user, loading } = useAuth();\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"protected-route-loading-container\">\r\n        <div className=\"protected-route-loading-spinner\"></div>\r\n        <p>Loading...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!user) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  const normalize = (value) => (value || '').toString().toUpperCase().trim();\r\n  const userRole = normalize(user.role);\r\n  const allowed = (allowedRoles || []).map(normalize);\r\n\r\n  const getDashboardPath = (role) => {\r\n    switch (role) {\r\n      case 'SUPER_ADMIN':\r\n        return '/super-admin/dashboard';\r\n      case 'ADMIN':\r\n        return '/admin/dashboard';\r\n      case 'EMPLOYEE':\r\n        return '/employee/dashboard';\r\n      case 'FARMER':\r\n      default:\r\n        return '/dashboard';\r\n    }\r\n  };\r\n\r\n  if (allowed.length && !allowed.includes(userRole)) {\r\n    return <Navigate to={getDashboardPath(userRole)} replace />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAQ,kBAAkB,CAC3C,OAASC,OAAO,KAAQ,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElD,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAgC,IAA/B,CAAEC,QAAQ,CAAEC,YAAa,CAAC,CAAAF,IAAA,CAChD,KAAM,CAAEG,IAAI,CAAEC,OAAQ,CAAC,CAAGV,OAAO,CAAC,CAAC,CAEnC,GAAIU,OAAO,CAAE,CACX,mBACEN,KAAA,QAAKO,SAAS,CAAC,mCAAmC,CAAAJ,QAAA,eAChDL,IAAA,QAAKS,SAAS,CAAC,iCAAiC,CAAM,CAAC,cACvDT,IAAA,MAAAK,QAAA,CAAG,YAAU,CAAG,CAAC,EACd,CAAC,CAEV,CAEA,GAAI,CAACE,IAAI,CAAE,CACT,mBAAOP,IAAA,CAACH,QAAQ,EAACa,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAAC,CACzC,CAEA,KAAM,CAAAC,SAAS,CAAIC,KAAK,EAAK,CAACA,KAAK,EAAI,EAAE,EAAEC,QAAQ,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAC1E,KAAM,CAAAC,QAAQ,CAAGL,SAAS,CAACL,IAAI,CAACW,IAAI,CAAC,CACrC,KAAM,CAAAC,OAAO,CAAG,CAACb,YAAY,EAAI,EAAE,EAAEc,GAAG,CAACR,SAAS,CAAC,CAEnD,KAAM,CAAAS,gBAAgB,CAAIH,IAAI,EAAK,CACjC,OAAQA,IAAI,EACV,IAAK,aAAa,CAChB,MAAO,wBAAwB,CACjC,IAAK,OAAO,CACV,MAAO,kBAAkB,CAC3B,IAAK,UAAU,CACb,MAAO,qBAAqB,CAC9B,IAAK,QAAQ,CACb,QACE,MAAO,YAAY,CACvB,CACF,CAAC,CAED,GAAIC,OAAO,CAACG,MAAM,EAAI,CAACH,OAAO,CAACI,QAAQ,CAACN,QAAQ,CAAC,CAAE,CACjD,mBAAOjB,IAAA,CAACH,QAAQ,EAACa,EAAE,CAAEW,gBAAgB,CAACJ,QAAQ,CAAE,CAACN,OAAO,MAAE,CAAC,CAC7D,CAEA,MAAO,CAAAN,QAAQ,CACjB,CAAC,CAED,cAAe,CAAAF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}