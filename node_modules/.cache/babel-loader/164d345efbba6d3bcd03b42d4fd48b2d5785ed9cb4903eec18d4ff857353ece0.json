{"ast":null,"code":"import{useState,useCallback,useRef}from'react';export const useApi=()=>{const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const cache=useRef(new Map());const abortController=useRef(null);const executeApiCall=useCallback(async function(apiFunction){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const{cacheKey=null,cacheTime=5*60*1000,// 5 minutes\nskipCache=false,showError=true,onSuccess=null,onError=null}=options;// Cancel previous request if it exists\nif(abortController.current){abortController.current.abort();}// Create new abort controller\nabortController.current=new AbortController();// Check cache first\nif(cacheKey&&!skipCache){const cached=cache.current.get(cacheKey);if(cached&&Date.now()-cached.timestamp<cacheTime){return cached.data;}}setLoading(true);setError(null);try{const response=await apiFunction(abortController.current.signal);// Cache the response\nif(cacheKey){cache.current.set(cacheKey,{data:response,timestamp:Date.now()});}if(onSuccess){onSuccess(response);}return response;}catch(err){var _err$response,_err$response$data;if(err.name==='AbortError'){return;// Request was cancelled\n}const errorMessage=((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.message)||err.message||'An error occurred';setError(errorMessage);if(onError){onError(err);}if(showError){console.error('API Error:',err);}throw err;}finally{setLoading(false);}},[]);const clearCache=useCallback(function(){let key=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;if(key){cache.current.delete(key);}else{cache.current.clear();}},[]);const cancelRequest=useCallback(()=>{if(abortController.current){abortController.current.abort();}},[]);return{loading,error,executeApiCall,clearCache,cancelRequest};};","map":{"version":3,"names":["useState","useCallback","useRef","useApi","loading","setLoading","error","setError","cache","Map","abortController","executeApiCall","apiFunction","options","arguments","length","undefined","cacheKey","cacheTime","skipCache","showError","onSuccess","onError","current","abort","AbortController","cached","get","Date","now","timestamp","data","response","signal","set","err","_err$response","_err$response$data","name","errorMessage","message","console","clearCache","key","delete","clear","cancelRequest"],"sources":["D:/Fronted-dev/src/hooks/useApi.js"],"sourcesContent":["import { useState, useCallback, useRef } from 'react';\r\n\r\nexport const useApi = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const cache = useRef(new Map());\r\n  const abortController = useRef(null);\r\n\r\n  const executeApiCall = useCallback(async (apiFunction, options = {}) => {\r\n    const {\r\n      cacheKey = null,\r\n      cacheTime = 5 * 60 * 1000, // 5 minutes\r\n      skipCache = false,\r\n      showError = true,\r\n      onSuccess = null,\r\n      onError = null\r\n    } = options;\r\n\r\n    // Cancel previous request if it exists\r\n    if (abortController.current) {\r\n      abortController.current.abort();\r\n    }\r\n\r\n    // Create new abort controller\r\n    abortController.current = new AbortController();\r\n\r\n    // Check cache first\r\n    if (cacheKey && !skipCache) {\r\n      const cached = cache.current.get(cacheKey);\r\n      if (cached && Date.now() - cached.timestamp < cacheTime) {\r\n        return cached.data;\r\n      }\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await apiFunction(abortController.current.signal);\r\n      \r\n      // Cache the response\r\n      if (cacheKey) {\r\n        cache.current.set(cacheKey, {\r\n          data: response,\r\n          timestamp: Date.now()\r\n        });\r\n      }\r\n\r\n      if (onSuccess) {\r\n        onSuccess(response);\r\n      }\r\n\r\n      return response;\r\n    } catch (err) {\r\n      if (err.name === 'AbortError') {\r\n        return; // Request was cancelled\r\n      }\r\n\r\n      const errorMessage = err.response?.data?.message || err.message || 'An error occurred';\r\n      setError(errorMessage);\r\n\r\n      if (onError) {\r\n        onError(err);\r\n      }\r\n\r\n      if (showError) {\r\n        console.error('API Error:', err);\r\n      }\r\n\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const clearCache = useCallback((key = null) => {\r\n    if (key) {\r\n      cache.current.delete(key);\r\n    } else {\r\n      cache.current.clear();\r\n    }\r\n  }, []);\r\n\r\n  const cancelRequest = useCallback(() => {\r\n    if (abortController.current) {\r\n      abortController.current.abort();\r\n    }\r\n  }, []);\r\n\r\n  return {\r\n    loading,\r\n    error,\r\n    executeApiCall,\r\n    clearCache,\r\n    cancelRequest\r\n  };\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}